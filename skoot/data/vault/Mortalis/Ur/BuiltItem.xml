<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="gimli:lib:load">
         "E[G]\\n/*\\n * D=Load item extras.\\n */\\n"
      </Core:Property>
      <Core:Property property="gimli:lib:store">
         "E[G]\\n/*\\n * D=Store extra stuff.\\n */\\n"
      </Core:Property>
      <Core:Property property="gimli:setprop-post:sys:item:attribute">
         "E[G]\\n/*\\n * D=Modify attribute.\\n */\\nstring old, new;\\n\\nold = \$(hook-oldvalue);\\nnew = \$(hook-value);\\n\\nif (old) \{\\n    // Remove old.\\n    this.(\\"detail:adjective:\\" + old) = FALSE;\\n\}\\nif (new) \{\\n    this.(\\"detail:adjective:\\" + new) = TRUE;\\n\}\\nreturn TRUE;\\n"
      </Core:Property>
      <Core:Property property="merry:lib:load">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:lib:load instead! */ 
/* 
 * D=Load item extras. 
 */
      </Core:Property>
      <Core:Property property="merry:lib:store">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:lib:store instead! */ 
/* 
 * D=Store extra stuff. 
 */
      </Core:Property>
      <Core:Property property="merry:setprop-post:sys:item:attribute">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:setprop-post:sys:item:attribute instead! */ 
/* 
 * D=Modify attribute. 
 */ 
string old, new; 
 
old = \$(hook-oldvalue); 
new = \$(hook-value); 
 
if (old) \{ 
    /* Remove old. */ 
    Set(this, "detail:adjective:" + old, FALSE); 
\} 
if (new) \{ 
    Set(this, "detail:adjective:" + new, TRUE); 
\} 
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1147822074, "zwoc", "E", 1149906350, "zwoc", "E", 1150616106, "zwoc", "EED", 1150616937, "zwoc", "EED", 1150616942, "zwoc", "EED", 1151141724, "zwoc", "E", 1152227689, "zwoc", "EED", 1196655997, "tonyd", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="x_gimliinstance">
         ([  ])
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
