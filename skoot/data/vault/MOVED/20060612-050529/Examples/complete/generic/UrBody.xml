<object clone="/base/obj/thing" owner="zwoc">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="100" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="neuter" volition="true" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="person"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="persons"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ordinary"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.skotos:playercapname) | $(this.skotos:playercapname) | unnamed }
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.skotos:playercapname) | $(this.skotos:playercapname) | unnamed }.
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.skotos:playercapname) | $(this.skotos:playercapname) | unnamed }
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arm"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.app:arm) | $(this.app:arm) |} arm
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.skotos:playercapname) | $(this.skotos:playercapname)'s | A } {? | $(this.app:arm) | $(this.app:arm) |} arm.
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.skotos:playercapname) | $(this.skotos:playercapname)'s | A } {? | $(this.app:arm) | $(this.app:arm) |} arm.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.app:arm) | $(this.app:arm) |} arms
          </Base:Description>
          <Base:Description type="examine">
             A pair of {? | $(this.app:arm) | $(this.app:arm) |} arms.
          </Base:Description>
          <Base:Description type="look">
             A pair of {? | $(this.app:arm) | $(this.app:arm) |} arms.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eye" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.app:eyetype) | $(this.app:eyetype) |}{? | $(this.app:eyecolor) | $(this.app:eyecolor) |} eye
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.skotos:playercapname) | $(this.skotos:playercapname)'s | A }{? | $(this.app:eyetype) | $(this.app:eyetype) |}{? | $(this.app:eyecolor) | $(this.app:eyecolor) |} eye.
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.skotos:playercapname) | $(this.skotos:playercapname)'s | A }{? | $(this.app:eyetype) | $(this.app:eyetype) |}{? | $(this.app:eyecolor) | $(this.app:eyecolor) |} eye.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.app:eyetype) | $(this.app:eyetype) |}{? | $(this.app:eyecolor) | $(this.app:eyecolor) |} eyes
          </Base:Description>
          <Base:Description type="examine">
             A pair of {? | $(this.app:eyetype) | $(this.app:eyetype) |}{? | $(this.app:eyecolor) | $(this.app:eyecolor) |} eyes.
          </Base:Description>
          <Base:Description type="look">
             A pair of {? | $(this.app:eyetype) | $(this.app:eyetype) |}{? | $(this.app:eyecolor) | $(this.app:eyecolor) |} eyes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:lib:adjective">
         X[M] /* 
 
  D=The 'adjective' script is called whenever an adjective operation takes place in a character. 
 
  Argument: 
    \$detail: The name of the detail which is affected. E.g. "arm" would alter the 'arm' detail of 'this'. 
 
*/ 
 
if( !\$detail ) error( "lib:adjective called without \$detail argument" ); 
 
/* We gotta make sure the old value isn't NIL. If it isn't, we go ahead and remove the adjective reference in the body. */ 
if( \$(hook-oldvalue) ) 
  Set( this, "details:" + \$detail + ":adjective:" + Str( \$(hook-oldvalue) ), nil ); 
 
/* Make sure the NEW property isn't NIL, and set the appropriate sname if it isn't. */ 
if( \$(hook-value) ) 
  Set( this, "details:" + \$detail + ":adjective:" + Str( \$(hook-value) ), TRUE );
      </Core:Property>
      <Core:Property property="merry:lib:name">
         X[M] /* 
 
  D=The 'name' script is called whenever a detail name operation takes place in a character. 
 
  Argument: 
    \$detail: The name of the detail which is affected. E.g. "arm" would alter the 'arm' detail of 'this'. 
 
*/ 
 
if( !\$detail ) error( "lib:name called without \$detail argument" ); 
 
/* We gotta make sure the old value isn't NIL. If it isn't, we go ahead and remove the name reference in the body. */ 
if( \$(hook-oldvalue) ) 
  Set( this, "details:" + \$detail + ":sname:" + Str( \$(hook-oldvalue) ), nil ); 
 
/* Make sure the NEW property isn't NIL, and set the appropriate sname if it isn't. */ 
if( \$(hook-value) ) 
  Set( this, "details:" + \$detail + ":sname:" + Str( \$(hook-value) ), TRUE );
      </Core:Property>
      <Core:Property property="merry:setprop-post:app:arm">
         X[M] /* 
 
  D=Arm detail trigger. 
 
*/ 
 
Call( this, "adjective", \$detail: "arm" );
      </Core:Property>
      <Core:Property property="merry:setprop-post:app:eyecolor">
         X[M] /* 
 
  D=Eye detail trigger. (color)
 
*/ 
 
Call( this, "adjective", \$detail: "eye" );
Call( this, "adjective", \$detail: "eyes" );
      </Core:Property>
      <Core:Property property="merry:setprop-post:app:eyetype">
         X[M] /* 
 
  D=Eye detail trigger. (type)
 
*/ 
 
Call( this, "adjective", \$detail: "eye" );
Call( this, "adjective", \$detail: "eyes" );
      </Core:Property>
      <Core:Property property="merry:setprop-post:skotos:charname">
         X[M] /* 
 
  D=This script is executed whenever the skotos:charname property is changed in a body. It will update the appropriate values accordingly. 
 
*/ 
 
Call( this, "name", \$detail: "default" );
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1056752445, "zwoc", "E", 1057086986, "zwoc", "E", 1057087023, "zwoc", "E", 1057087058, "zwoc", "K", 1057087174, "zwoc", "E", 1057087208, "zwoc", "E", 1057087280, "zwoc", "X", 1057087323, "zwoc", "E", 1057087391, "zwoc", "E", 1057087573, "zwoc", "E", 1057087724, "zwoc", "E", 1057087832, "zwoc", "X" \})
      </Core:Property>
      <Core:Property property="skill:advancedefensive">
         2
      </Core:Property>
      <Core:Property property="skill:attackingdefensive">
         0
      </Core:Property>
      <Core:Property property="skill:cutoffensive">3</Core:Property>
      <Core:Property property="skill:dodgedefensive">
         1
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         0
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         3
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         2
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         1
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         2
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         0
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         3
      </Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
