<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:lib:vp_query_keep_obs">
         X[M] /*  
** Determine if a group of objects can be tossed into virtual storage (whatever  
**  that storage may be), or if their virtual place must be maintained. If any.  
**  
** Arguments:  
**  
**  \$movers - who's moving to a new place.  Array of objects.  
**  
** Returns:  
**  A nonzero integer if they must be maintained.  
**  0 if they can be stored.  
**  
** Note:  
**  This function should probably be customized for each virtual system.  
**  The most common customization will likely be what to do to NPC's and when.  
**  Storing an NPC if it's not seen any PC's in a while might be an option.  
*/  
  
int Keep, i, n;  
n=sizeof(\$movers);  
for(i=0; i\<n \&\& !Keep; i++)\{  
 Keep = Int(\$movers[i]."udat:possessed") + Int(\$movers[i]."virtualplace:keeper") + Int(\$movers[i].sigstream);\}  
return Keep;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1082700352, "orcsuit", "E", 1082706166, "orcsuit", "X", 1264320325, "tonyd", "X" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
