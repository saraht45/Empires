<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="cst" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             EST wall clock
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">clocks</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="est" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="singular name"/>
            <Base:SName sname="clock"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="plural name"/>
            <Base:PName pname="clocks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             EST wall clock
          </Base:Description>
          <Base:Description type="examine">
             A wall clock displaying United States Eastern Standard Time (EST), standard time of Skotos servers. It shows a current time of $[ctime(time())].
          </Base:Description>
          <Base:Description type="look">
             A wall clock displaying United States Eastern Standard Time (EST), standard time of Skotos servers.  It shows a current time of $[ctime(time())].
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:db:homes">
         ([ "America/Chicago":(\{ "Ziggy" \}), "Australia/Sydney":(\{ "Azrael", "Meerclar" \}) ])
      </Core:Property>
      <Core:Property property="export:db:timezones">
         ([ "Africa/Abidjan":(\{ 0, 0 \}), "Africa/Accra":(\{ 0, 0 \}), "Africa/Addis_Ababa":(\{ 3, 0 \}), "Africa/Algiers":(\{ 1, 0 \}), "Africa/Asmara":(\{ 3, 0 \}), "Africa/Bamako":(\{ 0, 0 \}), "Africa/Bangui":(\{ 1, 0 \}), "Africa/Banjul":(\{ 0, 0 \}), "Africa/Bissau":(\{ 0, 0 \}), "Africa/Blantyre":(\{ 2, 0 \}), "Africa/Brazzaville":(\{ 1, 0 \}), "Africa/Bujumbura":(\{ 2, 0 \}), "Africa/Cairo":(\{ 2, 0 \}), "Africa/Casablanca":(\{ 0, 0 \}), "Africa/Ceuta":(\{ 1, 1, 2 \}), "Africa/Conakry":(\{ 0, 0 \}), "Africa/Dakar":(\{ 0, 0 \}), "Africa/Dar_es_Salaam":(\{ 3, 0 \}), "Africa/Djibouti":(\{ 3, 0 \}), "Africa/Douala":(\{ 1, 0 \}), "Africa/El_Aaiun":(\{ 0, 0 \}), "Africa/Freetown":(\{ 0, 0 \}), "Africa/Gaborone":(\{ 2, 0 \}), "Africa/Harare":(\{ 2, 0 \}), "Africa/Johannesburg":(\{ 2, 0 \}), "Africa/Kampala":(\{ 3, 0 \}), "Africa/Khartoum":(\{ 3, 0 \}), "Africa/Kigali":(\{ 2, 0 \}), "Africa/Kinshasa":(\{ 1, 0 \}), "Africa/Lagos":(\{ 1, 0 \}), "Africa/Libreville":(\{ 1, 0 \}), "Africa/Lome":(\{ 0, 0 \}), "Africa/Luanda":(\{ 1, 0 \}), "Africa/Lubumbashi":(\{ 2, 0 \}), "Africa/Lusaka":(\{ 2, 0 \}), "Africa/Malabo":(\{ 1, 0 \}), "Africa/Maputo":(\{ 2, 0 \}), "Africa/Maseru":(\{ 2, 0 \}), "Africa/Mbabane":(\{ 2, 0 \}), "Africa/Mogadishu":(\{ 3, 0 \}), "Africa/Monrovia":(\{ 0, 0 \}), "Africa/Nairobi":(\{ 3, 0 \}), "Africa/Ndjamena":(\{ 1, 0 \}), "Africa/Niamey":(\{ 1, 0 \}), "Africa/Nouakchott":(\{ 0, 0 \}), "Africa/Ouagadougou":(\{ 0, 0 \}), "Africa/Porto-Novo":(\{ 1, 0 \}), "Africa/Sao_Tome":(\{ 0, 0 \}), "Africa/Tripoli":(\{ 2, 0 \}), "Africa/Tunis":(\{ 1, 1, 2 \}), "Africa/Windhoek":(\{ 1, 10, 2 \}), "America/Adak":(\{ -10, 6, -9 \}), "America/Anchorage":(\{ -9, 6, -8 \}), "America/Anguilla":(\{ -4, 0 \}), "America/Antigua":(\{ -4, 0 \}), "America/Araguaina":(\{ -3, 0 \}), "America/Argentina/Buenos_Aires":(\{ -3, 3, -2 \}), "America/Argentina/Catamarca":(\{ -3, 0 \}), "America/Argentina/Cordoba":(\{ -3, 3, -2 \}), "America/Argentina/Jujuy":(\{ -3, 0 \}), "America/Argentina/La_Rioja":(\{ -3, 0 \}), "America/Argentina/Mendoza":(\{ -3, 0 \}), "America/Argentina/Rio_Gallegos":(\{ -3, 0 \}), "America/Argentina/Salta":(\{ -3, 0 \}), "America/Argentina/San_Juan":(\{ -3, 0 \}), "America/Argentina/San_Luis":(\{ -4, 3, -3 \}), "America/Argentina/Tucuman":(\{ -3, 3, -2 \}), "America/Argentina/Ushuaia":(\{ -3, 0 \}), "America/Aruba":(\{ -4, 0 \}), "America/Asuncion":(\{ -4, 10, -3 \}), "America/Atikokan":(\{ -5, 0 \}), "America/Bahia":(\{ -3, 0 \}), "America/Barbados":(\{ -4, 0 \}), "America/Belem":(\{ -3, 0 \}), "America/Belize":(\{ -6, 0 \}), "America/Blanc-Sablon":(\{ -4, 0 \}), "America/Boa_Vista":(\{ -4, 0 \}), "America/Bogota":(\{ -5, 0 \}), "America/Boise":(\{ -7, 6, -6 \}), "America/Cambridge_Bay":(\{ -7, 6, -6 \}), "America/Campo_Grande":(\{ -4, 5, -3 \}), "America/Cancun":(\{ -6, 9, -5 \}), "America/Caracas":(\{ -4.5, 0 \}), "America/Cayenne":(\{ -3, 0 \}), "America/Cayman":(\{ -5, 0 \}), "America/Chicago":(\{ -6, 6, -5 \}), "America/Chihuahua":(\{ -7, 9, -6 \}), "America/Costa_Rica":(\{ -6, 0 \}), "America/Cuiaba":(\{ -4, 5, -3 \}), "America/Curacao":(\{ -4, 0 \}), "America/Danmarkshavn":(\{ 0, 0 \}), "America/Dawson":(\{ -8, 6, -7 \}), "America/Dawson_Creek":(\{ -7, 0 \}), "America/Denver":(\{ -7, 6, -6 \}), "America/Detroit":(\{ -5, 6, -4 \}), "America/Dominica":(\{ -4, 0 \}), "America/Edmonton":(\{ -7, 6, -6 \}), "America/Eirunepe":(\{ -4, 0 \}), "America/El_Salvador":(\{ -6, 0 \}), "America/Fortaleza":(\{ -3, 0 \}), "America/Glace_Bay":(\{ -4, 6, -3 \}), "America/Godthab":(\{ -3, 1, -2 \}), "America/Goose_Bay":(\{ -4, 6, -3 \}), "America/Grand_Turk":(\{ -5, 6, -4 \}), "America/Grenada":(\{ -4, 0 \}), "America/Guadeloupe":(\{ -4, 0 \}), "America/Guatemala":(\{ -6, 0 \}), "America/Guayaquil":(\{ -5, 0 \}), "America/Guyana":(\{ -4, 0 \}), "America/Halifax":(\{ -4, 6, -3 \}), "America/Havana":(\{ -5, 8, -4 \}), "America/Hermosillo":(\{ -7, 0 \}), "America/Indiana/Indianapolis":(\{ -5, 6, -4 \}), "America/Indiana/Knox":(\{ -6, 6, -5 \}), "America/Indiana/Marengo":(\{ -5, 6, -4 \}), "America/Indiana/Petersburg":(\{ -5, 6, -4 \}), "America/Indiana/Tell_City":(\{ -6, 6, -5 \}), "America/Indiana/Vevay":(\{ -5, 6, -4 \}), "America/Indiana/Vincennes":(\{ -5, 6, -4 \}), "America/Indiana/Winamac":(\{ -5, 6, -4 \}), "America/Inuvik":(\{ -7, 6, -6 \}), "America/Iqaluit":(\{ -5, 6, -4 \}), "America/Jamaica":(\{ -5, 0 \}), "America/Juneau":(\{ -9, 6, -8 \}), "America/Kentucky/Louisville":(\{ -5, 6, -4 \}), "America/Kentucky/Monticello":(\{ -5, 6, -4 \}), "America/La_Paz":(\{ -4, 0 \}), "America/Lima":(\{ -5, 0 \}), "America/Los_Angeles":(\{ -8, 6, -7 \}), "America/Maceio":(\{ -3, 0 \}), "America/Managua":(\{ -6, 0 \}), "America/Manaus":(\{ -4, 0 \}), "America/Marigot":(\{ -4, 0 \}), "America/Martinique":(\{ -4, 0 \}), "America/Mazatlan":(\{ -7, 9, -6 \}), "America/Menominee":(\{ -6, 6, -5 \}), "America/Merida":(\{ -6, 9, -5 \}), "America/Mexico_City":(\{ -6, 9, -5 \}), "America/Miquelon":(\{ -3, 6, -2 \}), "America/Moncton":(\{ -4, 6, -3 \}), "America/Monterrey":(\{ -6, 9, -5 \}), "America/Montevideo":(\{ -3, 10, -2 \}), "America/Montreal":(\{ -5, 6, -4 \}), "America/Montserrat":(\{ -4, 0 \}), "America/Nassau":(\{ -4, 6, -3 \}), "America/New_York":(\{ -5, 6, -4 \}), "America/Nipigon":(\{ -5, 6, -4 \}), "America/Nome":(\{ -9, 6, -8 \}), "America/Noronha":(\{ -2, 0 \}), "America/North_Dakota/Center":(\{ -6, 6, -5 \}), "America/North_Dakota/New_Salem":(\{ -6, 6, -5 \}), "America/Panama":(\{ -5, 0 \}), "America/Pangnirtung":(\{ -5, 6, -4 \}), "America/Paramaribo":(\{ -3, 0 \}), "America/Phoenix":(\{ -7, 0 \}), "America/Port-au-Prince":(\{ -5, 0 \}), "America/Port_of_Spain":(\{ -4, 0 \}), "America/Porto_Velho":(\{ -4, 0 \}), "America/Puerto_Rico":(\{ -4, 0 \}), "America/Rainy_River":(\{ -6, 6, -5 \}), "America/Rankin_Inlet":(\{ -6, 6, -5 \}), "America/Recife":(\{ -3, 0 \}), "America/Regina":(\{ -6, 0 \}), "America/Resolute":(\{ -5, 6, -4 \}), "America/Rio_Branco":(\{ -4, 0 \}), "America/Santarem":(\{ -3, 0 \}), "America/Santiago":(\{ -4, 7, -3 \}), "America/Santo_Domingo":(\{ -4, 0 \}), "America/Sao_Paulo":(\{ -3, 5, -2 \}), "America/Scoresbysund":(\{ -1, 1, 0 \}), "America/Shiprock":(\{ -7, 6, -6 \}), "America/St_Barthelemy":(\{ -4, 0 \}), "America/St_Johns":(\{ -3.5, 6, -2.5 \}), "America/St_Kitts":(\{ -4, 0 \}), "America/St_Lucia":(\{ -4, 0 \}), "America/St_Thomas":(\{ -4, 0 \}), "America/St_Vincent":(\{ -4, 0 \}), "America/Swift_Current":(\{ -6, 0 \}), "America/Tegucigalpa":(\{ -6, 0 \}), "America/Thule":(\{ -4, 6, -3 \}), "America/Thunder_Bay":(\{ -5, 6, -4 \}), "America/Tijuana":(\{ -8, 9, -7 \}), "America/Toronto":(\{ -5, 6, -4 \}), "America/Tortola":(\{ -4, 0 \}), "America/Vancouver":(\{ -8, 6, -7 \}), "America/Whitehorse":(\{ -8, 6, -7 \}), "America/Winnipeg":(\{ -6, 6, -5 \}), "America/Yakutat":(\{ -9, 6, -8 \}), "America/Yellowknife":(\{ -7, 6, -6 \}), "Antarctica/Casey":(\{ 8, 0 \}), "Antarctica/Davis":(\{ 7, 0 \}), "Antarctica/DumontDUrville":(\{ 10, 0 \}), "Antarctica/Mawson":(\{ 6, 0 \}), "Antarctica/McMurdo":(\{ 12, 2, 13 \}), "Antarctica/Palmer":(\{ -4, 10, -3 \}), "Antarctica/Rothera":(\{ -3, 0 \}), "Antarctica/South_Pole":(\{ 12, 2, 13 \}), "Antarctica/Syowa":(\{ 3, 0 \}), "Antarctica/Vostok":(\{ 0, 0 \}), "Arctic/Longyearbyen":(\{ 1, 1, 2 \}), "Asia/Aden":(\{ 3, 0 \}), "Asia/Almaty":(\{ 6, 0 \}), "Asia/Amman":(\{ 2, 10, 3 \}), "Asia/Anadyr":(\{ 12, 1, 13 \}), "Asia/Aqtau":(\{ 5, 0 \}), "Asia/Aqtobe":(\{ 5, 0 \}), "Asia/Ashgabat":(\{ 5, 0 \}), "Asia/Baghdad":(\{ 3, 0 \}), "Asia/Bahrain":(\{ 3, 0 \}), "Asia/Baku":(\{ 4, 1, 5 \}), "Asia/Bangkok":(\{ 7, 0 \}), "Asia/Beirut":(\{ 2, 10, 3 \}), "Asia/Bishkek":(\{ 6, 0 \}), "Asia/Brunei":(\{ 8, 0 \}), "Asia/Choibalsan":(\{ 8, 0 \}), "Asia/Chongqing":(\{ 8, 0 \}), "Asia/Colombo":(\{ 5.5, 0 \}), "Asia/Damascus":(\{ 2, 10, 3 \}), "Asia/Dhaka":(\{ 6, 0 \}), "Asia/Dili":(\{ 9, 0 \}), "Asia/Dubai":(\{ 4, 0 \}), "Asia/Dushanbe":(\{ 5, 0 \}), "Asia/Gaza":(\{ 2, 10, 3 \}), "Asia/Harbin":(\{ 8, 0 \}), "Asia/Ho_Chi_Minh":(\{ 7, 0 \}), "Asia/Hong_Kong":(\{ 8, 0 \}), "Asia/Hovd":(\{ 7, 0 \}), "Asia/Irkutsk":(\{ 8, 1, 9 \}), "Asia/Jakarta":(\{ 7, 0 \}), "Asia/Jayapura":(\{ 9, 0 \}), "Asia/Jerusalem":(\{ 2, 10, 3 \}), "Asia/Kabul":(\{ 4.5, 0 \}), "Asia/Kamchatka":(\{ 12, 1, 13 \}), "Asia/Karachi":(\{ 6, 0 \}), "Asia/Kashgar":(\{ 8, 0 \}), "Asia/Katmandu":(\{ 5.75, 0 \}), "Asia/Kolkata":(\{ 5.5, 0 \}), "Asia/Krasnoyarsk":(\{ 7, 1, 8 \}), "Asia/Kuala_Lumpur":(\{ 8, 0 \}), "Asia/Kuching":(\{ 8, 0 \}), "Asia/Kuwait":(\{ 3, 0 \}), "Asia/Macau":(\{ 8, 0 \}), "Asia/Magadan":(\{ 11, 1, 12 \}), "Asia/Makassar":(\{ 8, 0 \}), "Asia/Manila":(\{ 8, 0 \}), "Asia/Muscat":(\{ 4, 0 \}), "Asia/Nicosia":(\{ 2, 1, 3 \}), "Asia/Novosibirsk":(\{ 6, 1, 7 \}), "Asia/Omsk":(\{ 6, 1, 7 \}), "Asia/Oral":(\{ 5, 0 \}), "Asia/Phnom_Penh":(\{ 7, 0 \}), "Asia/Pontianak":(\{ 7, 0 \}), "Asia/Pyongyang":(\{ 9, 0 \}), "Asia/Qatar":(\{ 3, 0 \}), "Asia/Qyzylorda":(\{ 6, 0 \}), "Asia/Rangoon":(\{ 6.5, 0 \}), "Asia/Riyadh":(\{ 3, 0 \}), "Asia/Sakhalin":(\{ 10, 1, 11 \}), "Asia/Samarkand":(\{ 5, 0 \}), "Asia/Seoul":(\{ 9, 0 \}), "Asia/Shanghai":(\{ 8, 0 \}), "Asia/Singapore":(\{ 8, 0 \}), "Asia/Taipei":(\{ 8, 0 \}), "Asia/Tashkent":(\{ 5, 0 \}), "Asia/Tbilisi":(\{ 4, 0 \}), "Asia/Tehran":(\{ 3.5, 10, 4.5 \}), "Asia/Thimphu":(\{ 6, 0 \}), "Asia/Tokyo":(\{ 9, 0 \}), "Asia/Ulaanbaatar":(\{ 8, 0 \}), "Asia/Urumqi":(\{ 8, 0 \}), "Asia/Vientiane":(\{ 7, 0 \}), "Asia/Vladivostok":(\{ 10, 1, 11 \}), "Asia/Yakutsk":(\{ 9, 1, 10 \}), "Asia/Yekaterinburg":(\{ 5, 1, 6 \}), "Asia/Yerevan":(\{ 4, 1, 5 \}), "Atlantic/Azores":(\{ -1, 1, 0 \}), "Atlantic/Bermuda":(\{ -4, 0 \}), "Atlantic/Canary":(\{ 0, 1, 1 \}), "Atlantic/Cape_Verde":(\{ -1, 0 \}), "Atlantic/Faroe":(\{ 0, 1, 1 \}), "Atlantic/Madeira":(\{ 0, 1, 1 \}), "Atlantic/Reykjavik":(\{ 0, 0 \}), "Atlantic/South_Georgia":(\{ -2, 0 \}), "Atlantic/St_Helena":(\{ 0, 0 \}), "Atlantic/Stanley":(\{ -4, 10, -3 \}), "Australia/Adelaide":(\{ 9.5, 4, 10.5 \}), "Australia/Brisbane":(\{ 10, 0 \}), "Australia/Broken_Hill":(\{ 9.5, 4, 10.5 \}), "Australia/Currie":(\{ 10, 4, 11 \}), "Australia/Darwin":(\{ 9.5, 0 \}), "Australia/Eucla":(\{ 8.75, 4, 9.75 \}), "Australia/Hobart":(\{ 10, 4, 11 \}), "Australia/Lindeman":(\{ 10, 0 \}), "Australia/Lord_Howe":(\{ 10.5, 4, 11 \}), "Australia/Melbourne":(\{ 10, 4, 11 \}), "Australia/Perth":(\{ 8, 0 \}), "Australia/Sydney":(\{ 10, 4, 11 \}), "Europe/Amsterdam":(\{ 1, 0 \}), "Europe/Andorra":(\{ 1, 1, 2 \}), "Europe/Athens":(\{ 2, 1, 3 \}), "Europe/Belgrade":(\{ 1, 1, 2 \}), "Europe/Berlin":(\{ 1, 1, 2 \}), "Europe/Bratislava":(\{ 1, 1, 2 \}), "Europe/Brussels":(\{ 1, 1, 2 \}), "Europe/Bucharest":(\{ 2, 1, 3 \}), "Europe/Budapest":(\{ 1, 1, 2 \}), "Europe/Chisinau":(\{ 2, 1, 3 \}), "Europe/Copenhagen":(\{ 1, 1, 2 \}), "Europe/Dublin":(\{ 0, 1, 1 \}), "Europe/Gibraltar":(\{ 1, 1, 2 \}), "Europe/Guernsey":(\{ 0, 1, 1 \}), "Europe/Helsinki":(\{ 2, 1, 3 \}), "Europe/Isle_of_Man":(\{ 0, 1, 1 \}), "Europe/Istanbul":(\{ 2, 1, 3 \}), "Europe/Jersey":(\{ 0, 1, 1 \}), "Europe/Kaliningrad":(\{ 2, 1, 3 \}), "Europe/Kiev":(\{ 2, 1, 3 \}), "Europe/Lisbon":(\{ 0, 1, 1 \}), "Europe/Ljubljana":(\{ 1, 1, 2 \}), "Europe/London":(\{ 0, 1, 1 \}), "Europe/Luxembourg":(\{ 1, 1, 2 \}), "Europe/Madrid":(\{ 1, 1, 2 \}), "Europe/Malta":(\{ 1, 1, 2 \}), "Europe/Mariehamn":(\{ 2, 1, 3 \}), "Europe/Minsk":(\{ 2, 1, 3 \}), "Europe/Monaco":(\{ 1, 1, 2 \}), "Europe/Moscow":(\{ 3, 1, 4 \}), "Europe/Oslo":(\{ 1, 1, 2 \}), "Europe/Paris":(\{ 1, 1, 2 \}), "Europe/Podgorica":(\{ 1, 1, 2 \}), "Europe/Prague":(\{ 1, 1, 2 \}), "Europe/Riga":(\{ 2, 1, 3 \}), "Europe/Rome":(\{ 1, 1, 2 \}), "Europe/Samara":(\{ 4, 1, 5 \}), "Europe/San_Marino":(\{ 1, 1, 2 \}), "Europe/Sarajevo":(\{ 1, 1, 2 \}), "Europe/Simferopol":(\{ 2, 1, 3 \}), "Europe/Skopje":(\{ 1, 1, 2 \}), "Europe/Sofia":(\{ 2, 1, 3 \}), "Europe/Stockholm":(\{ 1, 1, 2 \}), "Europe/Tallinn":(\{ 2, 1, 3 \}), "Europe/Tirane":(\{ 1, 1, 2 \}), "Europe/Uzhgorod":(\{ 2, 1, 3 \}), "Europe/Vaduz":(\{ 1, 1, 2 \}), "Europe/Vatican":(\{ 1, 1, 2 \}), "Europe/Vienna":(\{ 1, 1, 2 \}), "Europe/Vilnius":(\{ 2, 1, 3 \}), "Europe/Volgograd":(\{ 3, 1, 4 \}), "Europe/Warsaw":(\{ 1, 1, 2 \}), "Europe/Zagreb":(\{ 1, 1, 2 \}), "Europe/Zaporozhye":(\{ 2, 1, 3 \}), "Europe/Zurich":(\{ 1, 1, 2 \}), "Indian/Antananarivo":(\{ 3, 0 \}), "Indian/Chagos":(\{ 6, 0 \}), "Indian/Christmas":(\{ 7, 0 \}), "Indian/Cocos":(\{ 6.5, 0 \}), "Indian/Comoro":(\{ 3, 0 \}), "Indian/Kerguelen":(\{ 5, 0 \}), "Indian/Mahe":(\{ 4, 0 \}), "Indian/Maldives":(\{ 5, 0 \}), "Indian/Mauritius":(\{ 4, 0 \}), "Indian/Mayotte":(\{ 3, 0 \}), "Indian/Reunion":(\{ 4, 0 \}), "Pacific/Apia":(\{ -11, 0 \}), "Pacific/Auckland":(\{ 12, 2, 13 \}), "Pacific/Chatham":(\{ 12.75, 2, 13.75 \}), "Pacific/Easter":(\{ -6, 7, -5 \}), "Pacific/Efate":(\{ 11, 0 \}), "Pacific/Enderbury":(\{ 13, 0 \}), "Pacific/Fakaofo":(\{ -10, 0 \}), "Pacific/Fiji":(\{ 12, 0 \}), "Pacific/Funafuti":(\{ 12, 0 \}), "Pacific/Galapagos":(\{ -6, 0 \}), "Pacific/Gambier":(\{ -9, 0 \}), "Pacific/Guadalcanal":(\{ 11, 0 \}), "Pacific/Guam":(\{ 10, 0 \}), "Pacific/Honolulu":(\{ -10, 0 \}), "Pacific/Johnston":(\{ -10, 0 \}), "Pacific/Kiritimati":(\{ 14, 0 \}), "Pacific/Kosrae":(\{ 11, 0 \}), "Pacific/Kwajalein":(\{ 12, 0 \}), "Pacific/Majuro":(\{ 12, 0 \}), "Pacific/Marquesas":(\{ 9.5, 0 \}), "Pacific/Midway":(\{ -11, 0 \}), "Pacific/Nauru":(\{ 12, 0 \}), "Pacific/Niue":(\{ -11, 0 \}), "Pacific/Norfolk":(\{ 11.5, 0 \}), "Pacific/Noumea":(\{ 11, 0 \}), "Pacific/Pago_Pago":(\{ -11, 0 \}), "Pacific/Palau":(\{ 9, 0 \}), "Pacific/Pitcairn":(\{ -8, 0 \}), "Pacific/Ponape":(\{ 11, 0 \}), "Pacific/Port_Moresby":(\{ 10, 0 \}), "Pacific/Rarotonga":(\{ -10, 0 \}), "Pacific/Saipan":(\{ 10, 0 \}), "Pacific/Tahiti":(\{ -10, 0 \}), "Pacific/Tarawa":(\{ 12, 0 \}), "Pacific/Tongatapu":(\{ 13, 0 \}), "Pacific/Truk":(\{ 10, 0 \}), "Pacific/Wake":(\{ 12, 0 \}), "Pacific/Wallis":(\{ 12, 0 \}) ])
      </Core:Property>
      <Core:Property property="merry:lib:get_time_for_timezone">
         X[M] /*
** D=Determine for a timezone at a given unixtime.
**
** Arguments:
**
**  \$timezone - string name of a tz geographical region.
**     Example: "America/Chicago"
**  \$unixtime - integer number of seconds after Jan 1, 1970 [time() format],
**     representing the time at which to calculate the UTC offset.
**
** Returns: String representation of time in \$timezone at \$unixtime.
**
** Note: This function depends on the currently-sometimes-inaccurate
**   ::get_utc_offset() fuction.  See notes therein for details.
*/

return ctime(\$unixtime + Int(Flt(::get_utc_offset())*3600.0));
      </Core:Property>
      <Core:Property property="merry:lib:get_utc_offset">
         X[M] /*
** D=Determine UTC offset for a timezone at a given time
**
** Arguments:
**
**  \$timezone - string name of a tz geographical region.
**     Example: "America/Chicago"
**  \$unixtime - integer number of seconds after Jan 1, 1970 [time() format],
**     representing the time at which to calculate the UTC offset.
**
** Returns: Integer or float -12 to 12 representing the UTC offset.
**
** Note: This function, as I write it now, can be inaccurate once it gets away
**  from the most-common cases.  It doesn't maintain historical base offsets
**  for timezones, so if in years earlier a timezone had a different base UTC
**  offset, those earlier years will be inaccurate.  In addition, this function
**  determines whether DST (or 'summer time') is in effect using the
**  query_is_in_dst function, which at best is wrong only for a couple hours a
**  year (for US/Europe), is wrong for up to a total of a couple weeks for
**  Austraila, and is is flat-out wrong half the year for any other region that
**  does observe DST.
**  Anyone wanting to expand this function's general accuracy would do well to
**  become familiar with the zoneinfo database:
**    http://en.wikipedia.org/wiki/Zoneinfo
**    http://www.twinsun.com/tz/tz-link.htm
*/

mixed *tz_data, base_offset, dst_offset;
int dst_code, offset_seconds, year, month, day, hour;
string base_time, monthstr;

tz_data = this."db:timezones"[\$timezone];

if(!tz_data) error("Bad \$timezone");
base_offset = tz_data[0];
dst_code    = tz_data[1];
if (!dst_code) return base_offset;
dst_offset  = tz_data[2];
offset_seconds = Int(Flt(base_offset) * 3600.0);

/*Technically this returns GMT, not UTC, but it's "good enough" for now.*/
base_time = rfc_1123_date(\$unixtime+offset_seconds); /*"Sat, 31 May 2003 14:21:43 GMT"*/
year  = Int(base_time[12..15]);
month = index(base_time[8..10], (\{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"\}));
day   = Int(base_time[5..6]);
hour  = Int(base_time[17..18]);

if(::query_is_in_dst(\$dst_code: dst_code, \$year: year, \$month: month, \$day: day, \$hour: hour)) \{
  return dst_offset;
\}

return base_offset;
      </Core:Property>
      <Core:Property property="merry:lib:query_is_in_dst">
         X[M] /*
** D=Determines whether a particular region is observing Daylight Savings Time
**
** Arguments:
** \$dst_code - integer 0-10,  representing what DST rules apply to an area
** \$year     - integer 1900+, year  to check
** \$month    - integer 1-12,  month to check
** \$day      - integer 1-31,  day   to check
** \$hour     - integer 0-23,  hour  to check, optional, may be used to increase accuracy
**
** Returns: TRUE or FALSE
**
** Note: As I write this function, I'm just making it "good enough" to be
**  reasonably accurate in the most common cases.  Faithful rendering of all
**  timezones and DST rules is a nontrivial task, and would require occasional
**  updates on new DST laws, rulings and leap-second determinations. Anyone
**  wanting to expand this function's general accuracy would do well to become
**  familiar with the zoneinfo database:
**    http://en.wikipedia.org/wiki/Zoneinfo
**    http://www.twinsun.com/tz/tz-link.htm
*/

if (typeof(\$dst_code) != T_INT) \{
  Error("Missing or invalid \$dst_code");
\}

switch (\$dst_code)\{
  case 0: /*Does not observe DST*/
    return FALSE;
  case 1: /*Europe - Last Sunday in March to Last Sunday in October*/
    if(\$month\<3 \|\| \$month\>10) return FALSE;
    if(\$month\>3 \&\& \$month\<10) return TRUE;
    if(\$month== 3) return (\$day \>= 31-((5*\$year/4+4)%7));
    if(\$month==10) return (\$day \<  31-((5*\$year/4+1)%7));
    Error("No match in Europe time");
  case 2: /*New Zealand - First Sunday in October to Third Sunday in March*/
    return FALSE; /*Not writing this now*/
  case 3: /*Argentina - varies by region each year*/
    return FALSE; /*Could make a wild guess if needed*/
  case 4: /*Australia - First Sunday in October to First Sunday in April*/
    if(\$month\<4 \|\| \$month\>10) return TRUE;
    if(\$month\>4 \&\& \$month\<10) return FALSE;
    if(\$month==10) return (\$day \>= 7-((5*\$year/4+1)%7)); /*This is wrong, but no more than week off*/
    if(\$month== 4) return (\$day \<  7-((5*\$year/4+1)%7)); /*This is wrong, but no more than week off*/
    Error("No match in Australia time");
  case 5: /*Brazil - Third Sunday in October to Third Sunday in February*/
    return FALSE; /*Not writing this now*/
  case 6: /*United States and nearby regions*/
    if (\$year \>= 2007) \{ /*Second Sunday in March to First Sunday in November*/
      if(\$month\<3 \|\| \$month\>11) return FALSE;
      if(\$month\>3 \&\& \$month\<11) return TRUE;
      if(\$month== 3) return (\$day \>= 14-((5*\$year/4+1)%7));
      if(\$month==11) return (\$day \<   7-((5*\$year/4+1)%7));
    \} else \{ /*Last Sunday in April to Last Sunday in October*/
      if(\$month\<4 \|\| \$month\>11) return FALSE;
      if(\$month\>4 \&\& \$month\<11) return TRUE;
      if(\$month== 4) return (\$day \>= (2+6*\$year-\$year/4)%7+1);
      if(\$month==11) return (\$day \< 31-((5*\$year/4+1)%7));
    \}
    error("No match in US time");
  case 7: /*Chile - ?*/
    return FALSE; /*I dunno*/
  case 8: /*Cuba - Second Sunday in March to First Sunday in October*/
    return FALSE; /*Not programming this now*/
  case 9: /*Mexico - Last Sunday in March to Last Sunday in October*/
    return FALSE; /*Not programming this now*/
  case 10: /*Unknown*/
    return FALSE;
\}
return FALSE;
Error("Invalid \$dst_code");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1266122444, "orcsuit", "E", 1266122695, "orcsuit", "E", 1266122776, "orcsuit", "E", 1266122809, "orcsuit", "E", 1266122819, "orcsuit", "E", 1266124506, "orcsuit", "E", 1266124538, "orcsuit", "E", 1266124544, "orcsuit", "E", 1266124552, "orcsuit", "E", 1266124558, "orcsuit", "E", 1266124637, "orcsuit", "E", 1266124649, "orcsuit", "E", 1266125865, "orcsuit", "E", 1266125868, "orcsuit", "E", 1266126100, "orcsuit", "E", 1266231604, "orcsuit", "E", 1266232705, "orcsuit", "E", 1266234554, "orcsuit", "E", 1266237667, "orcsuit", "E", 1266237770, "orcsuit", "E", 1266237827, "orcsuit", "E", 1266238240, "orcsuit", "E", 1266299795, "orcsuit", "R", 1266299887, "orcsuit", "E", 1266299908, "orcsuit", "E", 1266303842, "orcsuit", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
