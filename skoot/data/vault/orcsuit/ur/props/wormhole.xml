<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.4" density="0.01"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0.4"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="floating" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" face="outside" hidden="false" luminosity="100" targetable_in_dark="true" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wormhole"/>
            <Base:SName sname="portal"/>
            <Base:SName sname="gateway"/>
            <Base:SName sname="vortex"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="everything"/>
            <Base:SName sname="object"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="everthings"/>
            <Base:PName pname="exits"/>
            <Base:PName pname="gateways"/>
            <Base:PName pname="objects"/>
            <Base:PName pname="portals"/>
            <Base:PName pname="vortecies"/>
            <Base:PName pname="wormholes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blue"/>
          <Base:Adjective adjective="bright"/>
          <Base:Adjective adjective="glowing"/>
          <Base:Adjective adjective="large"/>
          <Base:Adjective adjective="swirling"/>
          <Base:Adjective adjective="twisting"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             A twisting portal, that glows in different shades of blue.  It's a bit transparent at the edges.  It seems hollow on the inside.
          </Base:Description>
          <Base:Description type="look">
             A swirling blue vortex.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(orcsuit:rooms:wormhole|default)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:brief">
         "swirling blue vortex"
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] this."base:stance" = 7; EmitTo(nil /* defunct */, this."base:stance"); return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:start-post">
         X[M] this."base:stance" = 7; EmitTo(nil /* defunct */, this."base:stance"); return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:stop">
         X[M] if(typeof(this."tele:controller")==T_OBJECT) 
 Call(this."tele:controller", "close");
      </Core:Property>
      <Core:Property property="merry:react:take">
         X[M] EmitTo(\$actor, "You attempt to take hold of " + Describe(this, nil, \$actor) + ", but it's too ethereal to exert force on."); 
EmitIn(\$actor."base:environment", Describe(\$actor, nil, nil) + " snatches at " + Describe(this, nil, \$actor) + ", but comes up empty.", \$actor);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1079765601, "orcsuit", "E", 1079765612, "orcsuit", "E", 1079765997, "orcsuit", "E", 1079800285, "orcsuit", "E", 1079800382, "orcsuit", "E", 1079802556, "orcsuit", "E", 1079803080, "orcsuit", "E", 1079803337, "orcsuit", "E", 1079803366, "orcsuit", "E", 1081918745, "orcsuit", "E", 1090584445, "orcsuit", "E", 1090584459, "orcsuit", "E", 1090584515, "orcsuit", "E", 1090584536, "orcsuit", "E", 1265455702, "orcsuit", "X", 1265457220, "orcsuit", "E", 1265457280, "orcsuit", "E", 1265457354, "orcsuit", "E", 1265457433, "orcsuit", "E", 1265457454, "orcsuit", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
