<object clone="/usr/UserAPI/obj/udat" owner="UserAPI">
  <UserAPI:UDat>
    <Core:Properties>
      <Core:Property property="conn:check">0</Core:Property>
      <Core:Property property="conn:last">
         "Funkmaster Ryan"
      </Core:Property>
      <Core:Property property="more">18</Core:Property>
      <Core:Property property="see:listeners">([  ])</Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-cb-fun">
         "merry_edit_commit"
      </Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-cb-obj">
         \</usr/Tool/sys/merry\>
      </Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-extra"/>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-language">
         "Merry"
      </Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-object">
         "Nile:magic:set:bonespear"
      </Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-script">
         "castspell"
      </Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-stamp">
         1060293155
      </Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-text">
         "EmitIn(\$caster.\&quot;base:environment\&quot;, Describe(\$caster) + \&quot; mutters in a guttural voice towards \&quot; + Describe(\$target) + \&quot;, as it warps and stretches with a horrible grinding noise, reforming in \&quot;  + \$caster.\&quot;base:possessive\&quot; + \&quot; hands as a spear.\&quot;);\\n\\nSlay(\$target);\\n\$spear = Spawn(\$\{Nile:magic:set:objects:BoneSpear\});\\n\$spear.\&quot;base:environment\&quot; = \$caster;\\n\\nreturn TRUE;"
      </Core:Property>
      <Core:Property property="source-387e9fbe4a3aed24f71611630d8937cc-title">
         "Merry script castspell in Nile:magic:set:bonespear"
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-cb-fun">
         "merry_edit_commit"
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-cb-obj">
         \</usr/Tool/sys/merry\>
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-extra"/>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-language">
         "Merry"
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-object">
         "Nile:verbs:socials:actions:Invoke"
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-script">
         "global:action"
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-stamp">
         1060295798
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-text">
         "object ob;\\nint k;\\n\\nif(!\$actor.\&quot;nile:player\&quot;)\\n\{\\n   EmitTo(\$actor, \&quot;Sorry, this is magic stuff meant for Nile staff.  If you want to check out the code, give Roman or Ryan over on Nile a shout.\&quot;);\\n   return FALSE;\\n\}\\n\\nif ( \$evoke == nil )\\n\{\\n   EmitTo(\$actor, \&quot;You need to specify which God and spell you are invoking. If you don't do it properly, next time you may just turn into a monkey.\&quot;);\\n   return FALSE;\\n\}\\n\\n/* \$evoke actually includes quotation marks - that screwed me over for like an hour */\\n\$spell_array = explode(lower_case(\$evoke[1 .. strlen(\$evoke)-2]), \&quot; \&quot;);\\nif(sizeof(\$spell_array) != 2 )\\n\{\\n   EmitTo(\$actor, \&quot;You tried to invoke \&quot; + \$evoke + \&quot; - what the hell was that? Do that again and one of the Gods will smite your ass so fast, your head will explode in a cloud of poop.\&quot;);\\n   return FALSE;\\n\}\\n\\n\$god = \$spell_array[0];\\n\$spell = \$spell_array[1];\\n\\n\$obj_loc = \&quot;Nile:magic:\&quot; + \$god + \&quot;:\&quot; + \$spell;\\n\\n/* DEBUG */\\nEmitTo(\$actor,\&quot;Trying to get object \&quot; + \$obj_loc);\\n\\nob = Obj(\$obj_loc);\\nif ( ob == nil )\\n\{\\n    EmitTo(\$actor, \&quot;Could not find God or spell. Make sure you spelled them correctly - the Gods hate incorrect spelling. And grammar.\&quot;);\\n    return FALSE;\\n\}\\n\\n/*  Does the character know that spell? Check their magic:godname property*/\\n\\n\$playerspells = Get(\$actor, \&quot;magic:\&quot; + \$god);\\nif (\$playerspells == nil)\\n\{\\n   EmitTo(\$actor, \&quot;Sorry, you don't know any spells from that God.\&quot;);\\n   return FALSE;\\n\}\\n\\nfor ( k = 0;  k \&lt; sizeof(\$playerspells); k++)\\n\{\\n   if (\$playerspells[k] == \$spell)\\n       \$foundspell = TRUE;\\n\}\\n\\nif (\$foundspell != TRUE)\\n\{\\n   EmitTo(\$actor, \&quot;Sorry, you don't know that spell.\&quot;);\\n   return FALSE;\\n\}\\n\\n\\n/* Instrument check */\\n\\n\$InstrumentReq = lower_case(Str(Get(ob,\&quot;requirement:instrument\&quot;)));\\n\\n/* DEBUG */\\nEmitTo(\$actor,\&quot;Instrument Requirements: \&quot; + \$InstrumentReq);\\n\\nif (\$InstrumentReq != \&quot;\&quot;) /* There is an instrument required */\\n\{\\n   if (\$iob) /* There is a direct object */\\n   \{\\n      /* Check number of instruments. Assume one for now. */\\n      if (sizeof(\$iob) != 1) \\n      \{\\n         EmitTo(\$actor, \&quot;You can only use one instrument!\&quot;);\\n         return FALSE;\\n      \}\\n\\n      /* Check whether the instrument is correct */\\n      \$instrument = NRefOb(\$iob[0]);\\n      \\n\\n      if ( Get(\$instrument,\$InstrumentReq) == nil )\\n      \{\\n         EmitTo(\$actor, \&quot;You cannot perform this spell with \&quot; + Describe(\$instrument));\\n         return FALSE;\\n      \}\\n   \}     \\n   else\\n   \{\\n      EmitTo(\$actor, \&quot;You need an instrument to invoke this spell!\&quot;);\\n      return FALSE;\\n   \}      \\n\}\\n\\n/* Target check */\\n\\n\$TargetReq = lower_case(Str(Get(ob,\&quot;requirement:target\&quot;)));\\n\\n/* DEBUG */\\nEmitTo(\$actor,\&quot;Target Requirements: \&quot; + \$TargetReq);\\n\\nif (\$TargetReq != \&quot;\&quot;) /* There is an instrument required */\\n\{\\n   if (\$dob) /* There is an indirect object */\\n   \{\\n      /* Check number of targets. Assume one for now. */\\n      if (sizeof(\$dob) != 1) \\n      \{\\n         EmitTo(\$actor, \&quot;You can only have one target!\&quot;);\\n         return FALSE;\\n      \}\\n\\n      /* Check whether the target is correct */\\n      \$target = NRefOb(\$dob[0]);\\n      \\n      if ( Get(\$target,\$TargetReq) == nil )\\n      \{\\n         EmitTo(\$actor, \&quot;You cannot perform this spell on \&quot; + Describe(\$target));\\n         return FALSE;\\n      \}\\n   \}     \\n   else\\n   \{\\n      EmitTo(\$actor, \&quot;You need a target to invoke this spell!\&quot;);\\n      return FALSE;\\n   \}      \\n\}\\n\\n/* Ka check */\\n\\n\$KaRequired = Int(Get(ob,\&quot;requirement:ka\&quot;));\\n\$KaPresent = Int(Get(\$actor,\&quot;attribute:ka\&quot;));\\n\\n/* DEBUG */\\nEmitTo(\$actor, \&quot;Ka present is \&quot; + Str(\$KaPresent));\\nEmitTo(\$actor, \&quot;Ka required is \&quot; + Str(\$KaRequired));\\n\\nif ( (\$KaPresent - \$KaRequired) \&lt; 0 )\\n\{\\n   EmitTo(\$actor, \&quot;You struggle, but you feel you just don't have enough Ka to cast the required spell. However, an enchanted Donkey Kong Barrel appears and sets your Ka to 100!\&quot;);\\n   \$actor.\&quot;attribute:ka\&quot; = 100;\\n\}\\nelse\\n\{\\n   \$KaPresent -= \$KaRequired;\\n   \$actor.\&quot;attribute:ka\&quot; = \$KaPresent;\\n\}\\n\\n/* Call Spell */\\n\\nCall(\$\{Nile:magic:db:MagicDB\}, \$god + \&quot;:\&quot; + \$spell, \$target: \$target, \$instrument: \$instrument, \$caster: \$actor);\\n\\nreturn FALSE;"
      </Core:Property>
      <Core:Property property="source-e0f07710c198ac3c573364334f3d8c8f-title">
         "Merry script global:action in Nile:verbs:socials:actions:Invoke"
      </Core:Property>
    </Core:Properties>
    <UserAPI:Bodies/>
  </UserAPI:UDat>
</object>
