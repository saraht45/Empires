<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Mortalis:Ur:BuiltItem)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="true"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="react-post:sense/smell-dob">
             $(this.sys:web:scent)
          </Base:Description>
          <Base:Description type="react-post:sense/taste-dob">
             $(this.sys:web:taste)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="#list#">
         X[M] /* 
 
----------------------------------- 
 LIBRARY CONTENT (Merry/SAM) 
 
 Object:     Mortalis:Ur:BuiltFood 
 Maintainer: Kalle Alm 
 Email:      kalle@mortalis.skotos.net 
 Rev:        1.1 
 Generated:  Sun Dec  2 02:04:52 2007 
 Last rev.:  Sat Jun 24 08:52:57 2006 by zwoc (EED) 
 
 
 
(Do not modify #list#. Automatically constructed property.) 
 
 
------------------------------------------- 
 lib:load            (M) Load food data. 
 lib:store           (M) Store food data. 
 react-post:eat-what (M) The eat action. 
------------------------------------------- 
 
*/
      </Core:Property>
      <Core:Property property="export:sam:field">
         X[S] \<tr\>\<td\>
    \<span class="contents"\>Taste:\</span\>
\</td\>\<td\>
    \<input name="newtaste" class="tfield" size="70" value="\$(taste)"/\>
\</td\>\</tr\>
\<tr\>\<td\>
    \<span class="contents"\>Scent:\</span\>
\</td\>\<td\>
    \<input name="newscent" class="tfield" size="70" value="\$(scent)"/\>
\</td\>\</tr\>
\<tr\>\<td\>
    \<span class="contents"\>Bites (this overrides the size):\</span\>
\</td\>\<td\>
    \<select name="newbites"\>
        \$[int i, cd; 
          string result; 
          result = ""; 
          cd     = Int(\$bites); 
          for (i = 1; i \< 5; i++) \{ 
              result += "\<option value='" + i + "' " + (i == cd ? "selected='1' " : "") + "\>" + i + "\</option\>"; 
          \} 
          return result;]
    \</select\>
\</td\>\</tr\>
      </Core:Property>
      <Core:Property property="gimli:lib:load">
         "E[G]\\n/*\\n * D=Load food data.\\n */\\n\\n// Grab vals.\\n\$taste = \$itemob.\\"sys:web:taste\\";\\n\$scent = \$itemob.\\"sys:web:scent\\";\\n\$bites = \$itemob.\\"sys:web:bites\\";\\n\\n// Sanitize vals.\\nif (!\$bites) \$bites = 4;\\n\\n// Set extra pars.\\n\$(ignore-size) = 1;\\n\$(ignore-density) = 1;\\n"
      </Core:Property>
      <Core:Property property="gimli:lib:store">
         "E[G]\\n/*\\n * D=Store food data.\\n */\\n\\n// Grab vals from input.\\n\$taste = \$newtaste;\\n\$scent = \$newscent;\\n\$bites = Int(\$newbites);\\n\\n// Store vals.\\n\$itemob.\\"export:sys:web:taste\\"  = \$taste;\\n\$itemob.\\"export:sys:web:scent\\"  = \$scent;\\n\$itemob.\\"export:sys:web:bites\\"  = \$bites;\\n\$itemob.\\"base:intrinsicdensity\\" = 1.0;\\n\$itemob.\\"base:intrinsicmass\\"    = 0.015 * (float)\$bites;\\n\\n\$itemob.\\"merry:inherit:lib:find_operator\\" = nil;\\n\$itemob.\\"base:parts-covered\\" = (\{ \});\\n"
      </Core:Property>
      <Core:Property property="gimli:react-post:eat-what">
         "E[G]\\n/*\\n * D=The eat action.\\n */\\necho (Str(this.\\"sys:web:taste\\"));\\nreturn TRUE;\\n/*\\n * ChangeLog [\\n *    Change(2006-03-17; Zwoc)=Added changelog to script.\\n * ]\\n */\\n"
      </Core:Property>
      <Core:Property property="merry:lib:load">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:lib:load instead! */ 
/* 
 * D=Load food data. 
 */ 
 
/* Grab vals. */ 
\$taste = \$itemob."sys:web:taste"; 
\$scent = \$itemob."sys:web:scent"; 
\$bites = \$itemob."sys:web:bites"; 
 
/* Sanitize vals. */ 
if (!\$bites) \$bites = 4; 
 
/* Set extra pars. */ 
\$(ignore-size) = 1; 
\$(ignore-density) = 1;
      </Core:Property>
      <Core:Property property="merry:lib:store">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:lib:store instead! */ 
/* 
 * D=Store food data. 
 */ 
 
/* Grab vals from input. */ 
\$taste = \$newtaste; 
\$scent = \$newscent; 
\$bites = Int(\$newbites); 
 
/* Store vals. */ 
\$itemob."export:sys:web:taste" = \$taste; 
\$itemob."export:sys:web:scent" = \$scent; 
\$itemob."export:sys:web:bites" = \$bites; 
\$itemob."base:intrinsicdensity" = 1.0; 
\$itemob."base:intrinsicmass" = 0.015 * (float)\$bites; 
 
\$itemob."merry:inherit:lib:find_operator" = nil; 
\$itemob."base:parts-covered" = (\{ \});
      </Core:Property>
      <Core:Property property="merry:react-post:eat-what">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:react-post:eat-what instead! */ 
/* 
 * D=The eat action. 
 */ 
EmitTo(\$actor, Str(this."sys:web:taste")); 
return TRUE; 
/* 
 * ChangeLog [ 
 *    Change(2006-03-17; Zwoc)=Added changelog to script. 
 * ] 
 */
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1147822074, "zwoc", "E", 1149906350, "zwoc", "E", 1150615503, "zwoc", "E", 1150615523, "zwoc", "E", 1150617006, "zwoc", "EED", 1150617037, "zwoc", "P", 1150617069, "zwoc", "P", 1150617098, "zwoc", "P", 1150617353, "zwoc", "EED", 1150617527, "zwoc", "EED", 1150617560, "zwoc", "EED", 1150617641, "zwoc", "E", 1150618847, "zwoc", "EED", 1150621903, "zwoc", "EED", 1150623552, "zwoc", "E", 1151009620, "zwoc", "E", 1151009633, "zwoc", "X", 1151010667, "zwoc", "EED", 1151011395, "zwoc", "EED", 1151011683, "zwoc", "EED", 1151013781, "zwoc", "EED", 1151013855, "zwoc", "EED", 1151013872, "zwoc", "EED", 1151013892, "zwoc", "EED", 1151013910, "zwoc", "EED", 1151015024, "zwoc", "EED", 1151017180, "zwoc", "EED", 1151017366, "zwoc", "EED", 1151017389, "zwoc", "EED", 1151017520, "zwoc", "EED", 1151017590, "zwoc", "EED", 1151017598, "zwoc", "EED", 1151017627, "zwoc", "EED", 1151017800, "zwoc", "E", 1151017810, "zwoc", "E", 1151146331, "zwoc", "EED", 1151153547, "zwoc", "EED", 1151153577, "zwoc", "EED", 1196656127, "tonyd", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="x_gimliinstance">
         ([  ])
      </Core:Property>
      <Core:Property property="{author}">"Kalle Alm"</Core:Property>
      <Core:Property property="{email}">
         "kalle@mortalis.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">1</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1151153577
      </Core:Property>
      <Core:Property property="{sub_rev}">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
