<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="identifiers">
         ([ 0:([ 1:(\{ \<Lib:instruments\>, "lib:prepare-play" \}), 2:(\{ \<Lib:instruments\>, "react:blow-dob" \}), 3:(\{ \<Lib:instruments\>, "react:whisper-dob" \}), 4:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:rumours\>, "lib:handler:ask-about" \}), 5:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, "lib:entering" \}), 6:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, "lib:init" \}), 7:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, "lib:resource-control:internal" \}), 8:(\{ \<Lib:common\>, "act-post:enter%host" \}), 9:(\{ \<Lib:common\>, "act-post:teleport%host" \}), 10:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "global:command" \}), 11:(\{ \<Lib:common\>, "act:squint" \}), 12:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:abort" \}), 13:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:bedit" \}), 14:(\{ \<Lib:common\>, "lib:aan" \}), 15:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:action:create_configuration" \}), 16:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:comm" \}), 17:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:action:welcome" \}), 18:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:connect" \}), 19:(\{ \<Lib:common\>, "lib:add_page" \}), 20:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:calc_schedule" \}), 21:(\{ \<Lib:hvl\>, "lib:get-values" \}), 22:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:die" \}), 23:(\{ \<Lib:common\>, "lib:arr_attach" \}), 24:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:configuration_tools" \}), 25:(\{ \<Lib:hvl\>, "lib:is-set" \}), 26:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:disconnect" \}), 27:(\{ \<Lib:common\>, "lib:body_list" \}), 28:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:dlg_sel" \}), 29:(\{ \<Lib:hvl\>, "lib:lsv" \}), 30:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:hints" \}), 31:(\{ \<Lib:common\>, "lib:broadcast" \}), 32:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:dlg_set" \}), 33:(\{ \<Lib:hvl\>, "lib:max" \}), 34:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:list" \}), 35:(\{ \<Lib:common\>, "lib:busy" \}), 36:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act-post:enter" \}), 37:(\{ \<Lib:hvl\>, "lib:min" \}), 38:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:live" \}), 39:(\{ \<Lib:common\>, "lib:char_to_hex" \}), 40:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:dlg_text" \}), 41:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:approach" \}), 42:(\{ \<Lib:hvl\>, "lib:msv" \}), 43:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:present" \}), 44:(\{ \<Lib:common\>, "lib:convsecs" \}), 45:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:init_values" \}), 46:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:dismount" \}), 47:(\{ \<Lib:hvl\>, "lib:product" \}), 48:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:record" \}), 49:(\{ \<Lib:common\>, "lib:create_object_from_template" \}), 50:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:js_clear_default" \}), 51:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:leave" \}), 52:(\{ \<Lib:hvl\>, "lib:sum" \}), 53:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:register" \}), 54:(\{ \<Lib:common\>, "lib:db_prop" \}), 55:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:js_tip" \}), 56:(\{ \<Neoct:Staff:Actions:+return\>, "global:action" \}), 57:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:stance" \}), 58:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:relations" \}), 59:(\{ \<Lib:common\>, "lib:denied" \}), 60:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:js_welcome" \}), 61:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:scene" \}), 62:(\{ \<Lib:common\>, "lib:distant-evoke" \}), 63:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:list_configurations" \}), 64:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:set" \}), 65:(\{ \<Lib:common\>, "lib:distant_emit" \}), 66:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:start_emit" \}), 67:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:sig" \}), 68:(\{ \<Lib:common\>, "lib:exits" \}), 69:(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:using_config" \}), 70:(\{ \<Lib:chatlib\>, "lib:chat" \}), 71:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:tracking" \}), 72:(\{ \<Lib:common\>, "lib:forcearray" \}), 73:(\{ \<Lib:chatlib\>, "lib:feed" \}), 74:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:traits" \}), 75:(\{ \<Lib:common\>, "lib:get_name" \}), 76:(\{ \<Neoct:Staff:Actions:+setp\>, "global:action" \}), 77:(\{ \<Lib:chatlib\>, "lib:get_prefername" \}), 78:(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:update" \}), 79:(\{ \<Lib:common\>, "lib:iplist" \}), 80:(\{ \<Neoct:Staff:Actions:+setp\>, "lib:escape_arguments" \}), 81:(\{ \<Lib:chatlib\>, "lib:ignore" \}), 82:(\{ \<Lib:common\>, "lib:is_badname" \}), 83:(\{ \<Neoct:Staff:Actions:+setp\>, "lib:eval" \}), 84:(\{ \<Lib:chatlib\>, "lib:listening" \}), 85:(\{ \<Lib:common\>, "lib:isnan" \}), 86:(\{ \<Neoct:Staff:Actions:+setp\>, "lib:extract_props" \}), 87:(\{ \<Lib:chatlib\>, "lib:log" \}), 88:(\{ \<Lib:common\>, "lib:lookup" \}), 89:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:core:add_present" \}), 90:(\{ \<Neoct:Staff:Actions:+setp\>, "lib:propset" \}), 91:(\{ \<Lib:chatlib\>, "lib:off" \}), 92:(\{ \<Lib:common\>, "lib:lz" \}), 93:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:core:sub_present" \}), 94:(\{ \<Neoct:Staff:Actions:+setp\>, "lib:propset2" \}), 95:(\{ \<Lib:chatlib\>, "lib:on" \}), 96:(\{ \<Lib:common\>, "lib:more" \}), 97:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:handler:ask" \}), 98:(\{ \<Lib:chatlib\>, "lib:prefer" \}), 99:(\{ \<Lib:common\>, "lib:munge" \}), 100:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:handler:ask-for" \}), 101:(\{ \<Lib:chatlib\>, "lib:purge_body" \}), 102:(\{ \<Lib:common\>, "lib:parse_raw" \}), 103:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act-post:enter%nip:core" \}), 104:(\{ \<Lib:chatlib\>, "lib:recall" \}), 105:(\{ \<Lib:common\>, "lib:propsearch" \}), 106:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act-post:teleport%nip:core" \}), 107:(\{ \<Lib:chatlib\>, "lib:relay_chat" \}), 108:(\{ \<Lib:common\>, "lib:query_objects" \}), 109:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act:enter%nip:core" \}), 110:(\{ \<Lib:chatlib\>, "lib:relay_who_query" \}), 111:(\{ \<Lib:common\>, "lib:randemit" \}), 112:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act:teleport%nip:core" \}), 113:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:core_clean_currency" \}), 114:(\{ \<Lib:chatlib\>, "lib:relay_who_reply" \}), 115:(\{ \<Lib:common\>, "lib:reaction" \}), 116:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "lib:handler:offers:addressed" \}), 117:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:core_trading_deduct" \}), 118:(\{ \<Lib:chatlib\>, "lib:send_msg" \}), 119:(\{ \<Lib:common\>, "lib:repeat" \}), 120:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "lib:init" \}), 121:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:core_trading_query_assets" \}), 122:(\{ \<Lib:chatlib\>, "lib:unignore" \}), 123:(\{ \<Lib:common\>, "lib:replace_strings" \}), 124:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "witness:enter-from%nip:core" \}), 125:(\{ \<Lib:door\>, "lib:self-closing" \}), 126:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:handler-post:ask" \}), 127:(\{ \<Lib:chatlib\>, "lib:w" \}), 128:(\{ \<Lib:common\>, "lib:restricted" \}), 129:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "witness:teleport%nip:core" \}), 130:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:handler:ask-for" \}), 131:(\{ \<Lib:chatlib\>, "lib:who" \}), 132:(\{ \<Lib:common\>, "lib:reverse_ctime" \}), 133:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "react:read-what" \}), 134:(\{ \<Lib:common\>, "lib:sort_briefed_objects" \}), 135:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "react:take" \}), 136:(\{ \<Lib:common\>, "lib:split-evoke" \}), 137:(\{ \<Lib:property\>, "lib:comp_count" \}), 138:(\{ \<Lib:common\>, "lib:string_list" \}), 139:(\{ \<Lib:property\>, "lib:comp_value" \}), 140:(\{ \<Lib:common\>, "lib:template_object_store" \}), 141:(\{ \<Lib:property\>, "lib:display_prop" \}), 142:(\{ \<Lib:common\>, "lib:top_env" \}), 143:(\{ \<Lib:property\>, "lib:getprop" \}), 144:(\{ \<Lib:common\>, "lib:unadverb" \}), 145:(\{ \<MOVED:20080918-114107:Lib:NIP:signals:DELIVERY\>, "lib:handler:deliver" \}), 146:(\{ \<Lib:property\>, "lib:getprop-values" \}), 147:(\{ \<Lib:common\>, "lib:unadverbian" \}), 148:(\{ \<Lib:property\>, "lib:listprop" \}), 149:(\{ \<Lib:common\>, "lib:wholist" \}), 150:(\{ \<Lib:property\>, "lib:setprop" \}), 151:(\{ \<Lib:common\>, "lib:wildcard" \}), 152:(\{ \<Lib:property\>, "lib:var_extract" \}), 153:(\{ \<Lib:common\>, "lib:word_smash" \}), 154:(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:delivery\>, "lib:delivery:delivery-exec" \}), 155:(\{ \<Lib:property\>, "lib:var_merge" \}), 156:(\{ \<Lib:common\>, "lib:wrap" \}), 157:(\{ \<Lib:common\>, "lib:yelling" \}), 158:(\{ \<Lib:common\>, "witness:sense/hear" \}), 159:(\{ \<Lib:common\>, "witness:sense/smell" \}), 160:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>, "lib:init" \}), 161:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>, "react:mount-dob" \}), 162:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>, "lib:core_movement_exit" \}), 163:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>, "lib:movement:decide" \}), 164:(\{ \<Lib:connection\>, "act-post:linkdie" \}), 165:(\{ \<Lib:connection\>, "act-post:login" \}), 166:(\{ \<Lib:connection\>, "act-post:quit" \}), 167:(\{ \<Lib:connection\>, "lib:cron_stats" \}), 168:(\{ nil, "global:action" \}), 169:(\{ \<Lib:connection\>, "lib:delayed" \}), 170:(\{ nil, "lib:apply" \}), 171:(\{ \<Lib:connection\>, "lib:linkdie:lastseen" \}), 172:(\{ \<Lib:connection\>, "lib:linkdie:see" \}), 173:(\{ \<Lib:connection\>, "lib:linkdie:timestamp" \}), 174:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:asking\>, "react:npcask-dob" \}), 175:(\{ \<Lib:connection\>, "lib:login:assist" \}), 176:(\{ \<Lib:connection\>, "lib:login:converttomgeneric" \}), 177:(\{ \<Lib:NIP:core\>, "act:start" \}), 178:(\{ \<Lib:NIP:core\>, "lib:core:merry_add" \}), 179:(\{ \<Lib:connection\>, "lib:login:ic:newliechat" \}), 180:(\{ \<Lib:NIP:core\>, "lib:core:merry_delete" \}), 181:(\{ \<Lib:connection\>, "lib:login:knightsemit" \}), 182:(\{ \<Lib:NIP:core\>, "lib:core:sysupdate" \}), 183:(\{ \<Lib:connection\>, "lib:login:newliechat" \}), 184:(\{ \<Lib:NIP:core\>, "lib:find_nip_object" \}), 185:(\{ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>, "act-post:command" \}), 186:(\{ \<Lib:connection\>, "lib:login:opage" \}), 187:(\{ \<Lib:NIP:core\>, "lib:heartbeat" \}), 188:(\{ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>, "lib:process_red" \}), 189:(\{ \<Lib:connection\>, "lib:login:prisoners" \}), 190:(\{ \<Lib:NIP:core\>, "lib:init" \}), 191:(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "lib:decide:decide-exec" \}), 192:(\{ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>, "lib:record_command_parse" \}), 193:(\{ \<Lib:connection\>, "lib:login:removesgchannel" \}), 194:(\{ \<Lib:NIP:core\>, "lib:load_me" \}), 195:(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "lib:decide:decide-init" \}), 196:(\{ \<Lib:connection\>, "lib:login:see" \}), 197:(\{ \<Lib:NIP:core\>, "lib:log" \}), 198:(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "lib:decide:decide-post" \}), 199:(\{ \<Lib:connection\>, "lib:login:timestamp" \}), 200:(\{ \<Lib:NIP:core\>, "lib:modify:libraries" \}), 201:(\{ \<Lib:connection\>, "lib:quit:lastseen" \}), 202:(\{ \<Lib:NIP:core\>, "lib:register_nip_function" \}), 203:(\{ \<Lib:connection\>, "lib:quit:prisoners" \}), 204:(\{ \<Lib:NIP:core\>, "lib:shutdown" \}), 205:(\{ \<Lib:connection\>, "lib:quit:see" \}), 206:(\{ \<Lib:NIP:core\>, "setprop-post:add" \}), 207:(\{ \<Lib:connection\>, "lib:quit:timestamp" \}), 208:(\{ \<Lib:NIP:core\>, "setprop-post:del" \}), 209:(\{ \<Lib:connection\>, "lib:see_notify" \}), 210:(\{ \<Lib:NIP:core\>, "setprop-post:delete" \}), 211:(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "lib:delay:delay-exec" \}), 212:(\{ \<Lib:NIP:core\>, "setprop-post:error" \}), 213:(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "lib:delay:delay-init" \}), 214:(\{ \<Lib:NIP:core\>, "setprop-post:nip" \}), 215:(\{ \<Lib:NIP:core\>, "setprop-post:nip-core" \}), 216:(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "lib:internal:internal-exec" \}), 217:(\{ \<Lib:NIP:core\>, "setprop-post:sub" \}), 218:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:core:find-hook" \}), 219:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:core:register-hook" \}), 220:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:core:unregister-hook" \}), 221:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:modify:hooks" \}), 222:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, "lib:calc_sighookpath" \}), 223:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "setprop-post:hook" \}), 224:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, "lib:modify:signals" \}), 225:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, "setprop-post:signal" \}), 226:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, "setprop-post:sigexecptr" \}), 227:(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, "setprop-post:sigstream" \}), 228:(\{ \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, "setprop-post:decide" \}), 229:(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>, "lib:mood:delay" \}), 230:(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>, "lib:mood:mood-exec" \}), 231:(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>, "lib:mood:mood-init" \}), 232:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:anger\>, "lib:anger:mood" \}), 233:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:anger\>, "lib:init" \}), 234:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "lib:commanding" \}), 235:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "lib:core:add_command" \}), 236:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "lib:core:sub_command" \}), 237:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "react-post:evoke-dob%nip:core" \}), 238:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "act:eat%nip:core" \}), 239:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "react-post:evoke-iob%nip:core" \}), 240:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:done-post" \}), 241:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:eating:decide" \}), 242:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:eating:internal" \}), 243:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:behave" \}), 244:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:eating:mood" \}), 245:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:emoting:decide" \}), 246:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:handler:offer:eating" \}), 247:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:handler:emoting:parse" \}), 248:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:hook:init-post" \}), 249:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:handler:emoting:preparse" \}), 250:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:init" \}), 251:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>, "lib:freemoting:decide" \}), 252:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:init" \}), 253:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>, "lib:handler_freemote" \}), 254:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:happiness\>, "lib:happiness:mood" \}), 255:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:happiness\>, "lib:init" \}), 256:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:command:music:begin" \}), 257:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:command:music:end" \}), 258:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:init" \}), 259:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:musician:delay" \}), 260:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>, "lib:core:add_offer" \}), 261:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:musician:mood" \}), 262:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>, "lib:core:sub_offer" \}), 263:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "react-post:gesture-dob" \}), 264:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>, "react-post:offer-who" \}), 265:(\{ \<Lib:woe\>, "lib:getprop" \}), 266:(\{ \<Lib:woe\>, "lib:list-folder" \}), 267:(\{ \<Lib:woe\>, "lib:list_folder" \}), 268:(\{ \<Lib:woe\>, "lib:objects" \}), 269:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sadness\>, "lib:init" \}), 270:(\{ \<Lib:woe\>, "lib:setprop" \}), 271:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sadness\>, "lib:sadness:mood" \}), 272:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:act:sleep:state" \}), 273:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:handler:state:awake" \}), 274:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:handler:state:sleep" \}), 275:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:hook:init-post" \}), 276:(\{ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>, "lib:core:add_mood" \}), 277:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:decide" \}), 278:(\{ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>, "lib:core:sub_mood" \}), 279:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:delay" \}), 280:(\{ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>, "lib:init-post" \}), 281:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:internal" \}), 282:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:mood" \}), 283:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:omni-comm\>, "witness:evoke%omni-comm" \}), 284:(\{ \<Lib:ascii\>, "lib:callback_parse" \}), 285:(\{ \<Lib:ascii\>, "lib:diff" \}), 286:(\{ \<Lib:ascii\>, "lib:forge_table" \}), 287:(\{ \<Lib:ascii\>, "lib:implode_diff" \}), 288:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:delivery-area\>, "react:scan-dob%nip:core" \}), 289:(\{ \<Lib:ascii\>, "lib:presolve" \}), 290:(\{ \<Lib:ascii\>, "lib:strip_skotos" \}), 291:(\{ \<Lib:ascii\>, "lib:strlen" \}), 292:(\{ \<Lib:ascii\>, "lib:table" \}), 293:(\{ \<Lib:html\>, "lib:array_to_options" \}), 294:(\{ \<Lib:html\>, "lib:implode_diff" \}), 295:(\{ \<Lib:html\>, "lib:js_clear_default" \}), 296:(\{ \<Lib:html\>, "lib:js_tip" \}), 297:(\{ \<Lib:html\>, "lib:js_welcome" \}), 298:(\{ \<Lib:html\>, "lib:link" \}), 299:(\{ \<Lib:html\>, "lib:parse" \}), 300:(\{ \<Lib:html\>, "lib:parse_tags" \}), 301:(\{ \<Lib:html\>, "lib:table" \}), 302:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:1" \}), 303:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree" \}), 304:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:10" \}), 305:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_output" \}), 306:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:11" \}), 307:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_output_rec" \}), 308:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:12" \}), 309:(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:nip\>, "lib:nip:decide" \}), 310:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_output_suf" \}), 311:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:13" \}), 312:(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:nip\>, "lib:nip:internal" \}), 313:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_rec" \}), 314:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:14" \}), 315:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doabort" \}), 316:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:15" \}), 317:(\{ \<MOVED:20080918-114107:Lib:NIP:EXT:spawn\>, "lib:system" \}), 318:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doaddnote" \}), 319:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:16" \}), 320:(\{ \<MOVED:20080918-114107:Lib:NIP:EXT:spawn\>, "setprop-post:appearance" \}), 321:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:connect" \}), 322:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doaddqueue" \}), 323:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:17" \}), 324:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:disconnect" \}), 325:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doassign" \}), 326:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:18" \}), 327:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:handle_extreq_update" \}), 328:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doassociate" \}), 329:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:19" \}), 330:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:help" \}), 331:(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:room-cleaning\>, "lib:room-cleaning:decide" \}), 332:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doattach" \}), 333:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:2" \}), 334:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:load" \}), 335:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dobackup" \}), 336:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:20" \}), 337:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:ncs:handler" \}), 338:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docalendar" \}), 339:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:21" \}), 340:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:popup" \}), 341:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docalendar_day" \}), 342:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:22" \}), 343:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:purge" \}), 344:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>, "lib:handler:offer:trash" \}), 345:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docalendar_new" \}), 346:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:23" \}), 347:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:register_signature" \}), 348:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>, "lib:init" \}), 349:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docharobj" \}), 350:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:24" \}), 351:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request" \}), 352:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>, "lib:slay" \}), 353:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dochatfeed" \}), 354:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:25" \}), 355:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request_identifier" \}), 356:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dochathide" \}), 357:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:26" \}), 358:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request_status" \}), 359:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-control\>, "act:stop" \}), 360:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dochatshow" \}), 361:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:27" \}), 362:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request_update" \}), 363:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doclaim" \}), 364:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:28" \}), 365:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request_where" \}), 366:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docleanup" \}), 367:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:29" \}), 368:(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:restart" \}), 369:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docreatesearchdb" \}), 370:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:3" \}), 371:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:delivery-object\>, "react:scan-dob%nip:core" \}), 372:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docreatesearchdb_init" \}), 373:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:30" \}), 374:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docreatestats" \}), 375:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:31" \}), 376:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docron" \}), 377:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:32" \}), 378:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docurrent" \}), 379:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:33" \}), 380:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:killer\>, "lib:predator:decide" \}), 381:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dodiscard" \}), 382:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:34" \}), 383:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dodone" \}), 384:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:35" \}), 385:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dofileassist" \}), 386:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:36" \}), 387:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doflag" \}), 388:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:37" \}), 389:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>, "lib:handler:request-authority" \}), 390:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doflaglist" \}), 391:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:38" \}), 392:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>, "witness:enter-into%nip:core" \}), 393:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dofocus" \}), 394:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:39" \}), 395:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doforget" \}), 396:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:4" \}), 397:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "lib:handler:relations" \}), 398:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dogetassist" \}), 399:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:40" \}), 400:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "lib:query_relationship" \}), 401:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dohelp" \}), 402:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:41" \}), 403:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "react:command-dob%nip-relations" \}), 404:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doinfo" \}), 405:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:42" \}), 406:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "react:command-iob%nip-relations" \}), 407:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doinit" \}), 408:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:43" \}), 409:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolink" \}), 410:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:44" \}), 411:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolistbyplayer" \}), 412:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:5" \}), 413:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolistwhat" \}), 414:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:6" \}), 415:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolock" \}), 416:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:7" \}), 417:(\{ \<MOVED:20080918-114107:MGeneric:DB:StateDB\>, "lib:getstatedesc" \}), 418:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dologin" \}), 419:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:8" \}), 420:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dologon" \}), 421:(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:9" \}), 422:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:donote" \}), 423:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doonline" \}), 424:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doopage" \}), 425:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doopen" \}), 426:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dopopup" \}), 427:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doprefer" \}), 428:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dopriority" \}), 429:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doprivate" \}), 430:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dopublic" \}), 431:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueue" \}), 432:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueuedesc" \}), 433:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueueinfo" \}), 434:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueuesme" \}), 435:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dorecap" \}), 436:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dorecent" \}), 437:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dorelay" \}), 438:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doremovequeue" \}), 439:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dorename" \}), 440:(\{ \<MOVED:20080918-114107:MGeneric:DB:Healing\>, "lib:showhealingtime" \}), 441:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doretrieve" \}), 442:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doreturn" \}), 443:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doschedule" \}), 444:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosearch" \}), 445:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:aan" \}), 446:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosendemail" \}), 447:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:backuppreconvertedplayer" \}), 448:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosetassist" \}), 449:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:converttomgeneric" \}), 450:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosettype" \}), 451:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:debugmessage" \}), 452:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doshift" \}), 453:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:debugtitle" \}), 454:(\{ \<MOVED:20080918-114107:MGeneric:DB:Death\>, "react:+resurrect-dob" \}), 455:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doshortclosed" \}), 456:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:debugvalue" \}), 457:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doshowall" \}), 458:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:debugvalues" \}), 459:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doshowclosed" \}), 460:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:definenamespaces" \}), 461:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doslide" \}), 462:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dostatbyqueue" \}), 463:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dostats" \}), 464:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dotransfer" \}), 465:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dotree" \}), 466:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dotwiki" \}), 467:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dounlock" \}), 468:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dowatch" \}), 469:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:searchdb_decode" \}), 470:(\{ \<Lib:Assist:lib:assistlibs\>, "lib:searchdb_encode" \}), 471:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:reporterror" \}), 472:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:area_trigger_rcontrol" \}), 473:(\{ \<MOVED:20080918-114107:MGeneric:DB:Alteration\>, "lib:changedonceemit" \}), 474:(\{ \<MOVED:20080918-114107:MGeneric:DB:General\>, "lib:settattoolocation" \}), 475:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:deliver_for" \}), 476:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:die" \}), 477:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:enqueue_for_delivery" \}), 478:(\{ \<MOVED:20080918-114107:Neoct:Staff:Verbs:+areport\>, "global:command" \}), 479:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:heartbeat_thread_running" \}), 480:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:purge_deliveries" \}), 481:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:purge_trash" \}), 482:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "lib:core:reply" \}), 483:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:resolve_meta_family_data" \}), 484:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "lib:family_resolve" \}), 485:(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:trigger_rcontrol" \}), 486:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "react-post:evoke-dob%nip:communicate" \}), 487:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "react-post:evoke-iob%nip:communicate" \}), 488:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "act:nip/die" \}), 489:(\{ \<MOVED:20080918-114107:MGeneric:DB:Alteration\>, "lib:cleardetaildescription" \}), 490:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:handler:prey:defend" \}), 491:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:handler:prey:die" \}), 492:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:handler:prey:eaten" \}), 493:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "act:eat%predator" \}), 494:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:handler:start:prey" \}), 495:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:act:predator:attack" \}), 496:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:init" \}), 497:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:handler:offer:eating" \}), 498:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:hook:init-post" \}), 499:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-traits\>, "lib:handler:start:traits" \}), 500:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:predator:decide" \}), 501:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-traits\>, "lib:init" \}), 502:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:WoundDB\>, "lib:emits_deadlywound" \}), 503:(\{ \<MOVED:20080918-114107:Lib:NIP:extra:snake\>, "act-desc:eat" \}), 504:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:WoundDB\>, "lib:emits_removebandage" \}), 505:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doaddcatalog" \}), 506:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doaddgroup" \}), 507:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doaddwhat" \}), 508:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doattach" \}), 509:(\{ \<Lib:args\>, "lib:parse_arg_mapping" \}), 510:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:docatalog" \}), 511:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:docreate" \}), 512:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dodetach" \}), 513:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dohelp" \}), 514:(\{ \<MOVED:20080918-114107:Neoct:Base:Actions:zthrow\>, "global-pre:action" \}), 515:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dolist" \}), 516:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dolistgroups" \}), 517:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dolistwhat" \}), 518:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doremovecatalog" \}), 519:(\{ \<MOVED:20060501-050056:Lib:NIP:lib:act-interpreter\>, "lib:core:resolve_action" \}), 520:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doremovegroup" \}), 521:(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doremovewhat" \}), 522:(\{ nil, "global:action" \}), 523:(\{ \<Neoct:Staff:Actions:+see\>, "global:action" \}), 524:(\{ \<Neoct:Staff:Actions:+see\>, "lib:add" \}), 525:(\{ \<Neoct:Staff:Actions:+see\>, "lib:char_from_group" \}), 526:(\{ \<Neoct:Staff:Actions:+see\>, "lib:char_to_group" \}), 527:(\{ \<MOVED:20080918-114107:Lib:NIP:lib:wounding\>, "lib:wound" \}), 528:(\{ \<Neoct:Staff:Actions:+see\>, "lib:disband" \}), 529:(\{ \<Neoct:Staff:Actions:+see\>, "lib:get_group" \}), 530:(\{ \<Neoct:Staff:Actions:+see\>, "lib:group_add" \}), 531:(\{ \<Neoct:Staff:Actions:+see\>, "lib:group_list" \}), 532:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "act-post:unwear" \}), 533:(\{ \<Neoct:Staff:Actions:+see\>, "lib:group_sub" \}), 534:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "act-post:wear" \}), 535:(\{ \<Neoct:Staff:Actions:+see\>, "lib:groups" \}), 536:(\{ \<Neoct:Staff:Actions:+see\>, "lib:list" \}), 537:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "act:heal" \}), 538:(\{ \<SLib:staff\>, "lib:general_who" \}), 539:(\{ \<Neoct:Staff:Actions:+see\>, "lib:off" \}), 540:(\{ \<SLib:staff\>, "lib:general_who2" \}), 541:(\{ \<Neoct:Staff:Actions:+see\>, "lib:on" \}), 542:(\{ \<SLib:staff\>, "lib:general_who_debug" \}), 543:(\{ \<Neoct:Staff:Actions:+see\>, "lib:recall" \}), 544:(\{ \<Neoct:Staff:Actions:+see\>, "lib:sub" \}), 545:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "lib:cleardescriptionscache" \}), 546:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_alreadytreated" \}), 547:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "lib:createcoveragetodetail" \}), 548:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_applybandage" \}), 549:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_cannotbandage" \}), 550:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_currentlyhealing" \}), 551:(\{ \<Lib:follows\>, "lib:disable" \}), 552:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_detailnotwounded" \}), 553:(\{ \<Lib:follows\>, "lib:enable" \}), 554:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_disconnecteddoctor" \}), 555:(\{ \<Lib:follows\>, "lib:free" \}), 556:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_disconnectedpatient" \}), 557:(\{ \<Lib:follows\>, "lib:release" \}), 558:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_feelingbetter" \}), 559:(\{ \<Lib:follows\>, "lib:restrain" \}), 560:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_finishedtreatmentsuccess" \}), 561:(\{ \<Lib:follows\>, "lib:start" \}), 562:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_movedaway" \}), 563:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "lib:sethandedness" \}), 564:(\{ \<Lib:follows\>, "lib:stop" \}), 565:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_noskill" \}), 566:(\{ \<Lib:follows\>, "setprop-post:follow:uglyzwochack" \}), 567:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_noskilllevel" \}), 568:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_notwounded" \}), 569:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_patientremovedbandage" \}), 570:(\{ \<Lib:emitter\>, "lib:daemon" \}), 571:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_requiresbandages" \}), 572:(\{ \<Lib:emitter\>, "lib:disable" \}), 573:(\{ \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>, "lib:emits_treatmentinfo" \}), 574:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "setprop-post:alteration" \}), 575:(\{ \<Lib:emitter\>, "lib:emit" \}), 576:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "setprop-post:appearance" \}), 577:(\{ \<Lib:emitter\>, "lib:enable" \}), 578:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "setprop-post:bruise" \}), 579:(\{ \<Lib:emitter\>, "lib:init_popup" \}), 580:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "setprop-post:detailtocoverage" \}), 581:(\{ \<Lib:emitter\>, "lib:linkdie" \}), 582:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "setprop-post:disguised" \}), 583:(\{ \<Lib:emitter\>, "lib:login" \}), 584:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "setprop-post:scar" \}), 585:(\{ \<Lib:emitter\>, "lib:logout" \}), 586:(\{ \<MOVED:20080918-114107:MGeneric:UrAvatar\>, "setprop-post:wound" \}), 587:(\{ \<Lib:emitter\>, "lib:store_popup" \}), 588:(\{ \<Lib:emitter\>, "lib:tweak_pop" \}), 589:(\{ \<Lib:emitter\>, "react:enter-from%emitter" \}), 590:(\{ \<Lib:emitter\>, "react:enter-into%emitter" \}), 591:(\{ \<Lib:emitter\>, "react:teleport%emitter" \}), 592:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:clear-mapping" \}), 593:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:find-instrument" \}), 594:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:find-leader" \}), 595:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:get-groupstatus" \}), 596:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:get-members" \}), 597:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:get-quality" \}), 598:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:get-starttime" \}), 599:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:get-style" \}), 600:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:get-tools" \}), 601:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:get-verbs" \}), 602:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:play-group" \}), 603:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:play-helpfile" \}), 604:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:play-post" \}), 605:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:play-pre" \}), 606:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:play-solo" \}), 607:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:play-stylefile" \}), 608:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:play_replace_strings" \}), 609:(\{ \<Ironclaw:Lib:Skills:Music\>, "lib:set-data" \}), 610:(\{ \<Lib:NIP:core\>, "lib:t2:dbg" \}) ]) ])
      </Core:Property>
      <Core:Property property="index">610</Core:Property>
      <Core:Property property="keys">
         ([ "":([ "#":(\{ 92 \}), "\$":(\{ 20 \}), "+":(\{ 427 \}), "-":(\{ 327 \}), "0":(\{ 94, 261 \}), "1":(\{ 132, 248, 275, 302, 453, 498 \}), "2":(\{ 248, 275, 333, 451, 453, 456, 458, 498 \}), "3":(\{ 370 \}), "4":(\{ 279, 396 \}), "5":(\{ 412 \}), "6":(\{ 414 \}), "7":(\{ 187, 416, 610 \}), "8":(\{ 419 \}), "9":(\{ 421 \}), "a":(\{ 11, 12, 14, 18, 19, 22, 23, 27, 38, 39, 49, 53, 54, 55, 56, 60, 61, 63, 64, 65, 67, 68, 69, 72, 75, 77, 79, 80, 81, 86, 87, 88, 91, 92, 95, 98, 99, 101, 102, 104, 105, 111, 113, 114, 117, 119, 121, 122, 125, 126, 127, 130, 131, 132, 133, 136, 138, 141, 143, 146, 149, 151, 152, 153, 154, 156, 158, 159, 162, 168, 171, 174, 184, 185, 189, 194, 201, 203, 218, 219, 220, 227, 229, 231, 235, 236, 240, 245, 251, 254, 258, 260, 262, 264, 265, 267, 268, 270, 271, 273, 274, 280, 284, 285, 286, 287, 289, 290, 293, 294, 296, 297, 298, 301, 318, 322, 325, 328, 332, 355, 359, 378, 381, 385, 387, 389, 395, 400, 413, 414, 415, 417, 422, 428, 429, 430, 432, 437, 438, 439, 443, 445, 448, 449, 450, 452, 453, 456, 458, 461, 467, 472, 474, 475, 479, 482, 484, 485, 490, 491, 492, 506, 508, 517, 518, 520, 525, 526, 527, 528, 529, 530, 531, 533, 551, 553, 563, 565, 589, 590, 592, 594, 595, 597, 600, 601, 607 \}), "b":(\{ 99, 452 \}), "e":(\{ 144, 254, 271, 272 \}), "g":(\{ 144, 254, 271, 272 \}), "i":(\{ 254, 271, 513 \}), "s":(\{ 4, 231, 259 \}), "v":(\{ 130 \}), "w":(\{ 127 \}), "x":(\{ 447 \}), "y":(\{ 447 \}) ]), "#i":([ "d#":(\{ 87 \}) ]), "\$a":([ "ctor":(\{ 84, 117, 118, 199, 451, 453, 456, 458, 588 \}), "ctor's":(\{ 524, 536, 544 \}), "rea":(\{ 575 \}), "rray":(\{ 293 \}) ]), "\$b":([ "ody":(\{ 60, 63, 84, 297 \}) ]), "\$c":([ "ategory":(\{ 400 \}), "h":(\{ 39 \}), "hannel":(\{ 84, 572, 577 \}), "ontent":(\{ 292 \}) ]), "\$d":([ "ata":(\{ 285 \}), "atab":(\{ 285 \}), "atabase":(\{ 477 \}), "b":(\{ 247 \}), "iff":(\{ 287, 294 \}) ]), "\$e":([ "voke":(\{ 136 \}), "voke_to_npc":(\{ 482 \}) ]), "\$i":([ "gnore_spacing":(\{ 285 \}), "tem":(\{ 477 \}) ]), "\$l":([ "ine":(\{ 102, 118 \}), "ist":(\{ 138 \}), "zs":(\{ 92 \}) ]), "\$m":([ "essage":(\{ 19, 118 \}), "eta_fam":(\{ 483 \}), "ood":(\{ 247 \}) ]), "\$n":([ "ame":(\{ 82, 88, 249 \}), "pc":(\{ 334, 476, 479 \}), "pc_pause":(\{ 213 \}) ]), "\$o":([ "bjects":(\{ 134 \}) ]), "\$p":([ "ossessed":(\{ 88 \}) ]), "\$q":([ "uery":(\{ 80 \}) ]), "\$r":([ "aw_evoke":(\{ 102 \}), "aw_words":(\{ 102 \}), "ecipient":(\{ 145 \}) ]), "\$s":([ "":(\{ 291 \}), "elected":(\{ 293 \}), "ize":(\{ 119 \}), "plit":(\{ 136 \}), "ystem":(\{ 118 \}) ]), "\$t":([ "ime":(\{ 249 \}), "itle":(\{ 249 \}) ]), "\$u":([ "ser":(\{ 19 \}) ]), "\$v":([ "al":(\{ 92 \}), "alue":(\{ 85, 113 \}) ]), "\$w":([ "hat":(\{ 14, 119, 142 \}), "hich":(\{ 108 \}) ]), "'+":([ "people'":(\{ 365 \}) ]), "'a":([ "'":(\{ 445 \}), "n'":(\{ 445 \}), "ngry'":(\{ 232, 233 \}), "sk-for'":(\{ 130 \}) ]), "'b":([ "egin'":(\{ 258 \}) ]), "'c":([ "ourier'":(\{ 367 \}) ]), "'d":([ "eath'":(\{ 408 \}) ]), "'e":([ "ating'":(\{ 304 \}), "moting'":(\{ 306, 377, 379, 382, 391 \}), "nd'":(\{ 258 \}) ]), "'f":([ "ighting-fake'":(\{ 405 \}), "reemoting'":(\{ 346, 394 \}) ]), "'g":([ "uarding'":(\{ 388 \}) ]), "'h":([ "appy'":(\{ 254, 255 \}) ]), "'i":([ "splaying'":(\{ 592, 593 \}), "tem":(\{ 126 \}) ]), "'l":([ "ib":(\{ 237, 239 \}) ]), "'m":([ "ore'":(\{ 96 \}), "ounting'":(\{ 160 \}), "ovement'":(\{ 329 \}), "usician'":(\{ 361 \}) ]), "'n":([ "ip":(\{ 4, 245, 251 \}) ]), "'o":([ "ff'":(\{ 70 \}), "n'":(\{ 70 \}) ]), "'p":([ "lace'":(\{ 514 \}), "lay'":(\{ 258 \}), "redator'":(\{ 308, 319 \}), "rey'":(\{ 384, 399, 402 \}) ]), "'r":([ "ecall'":(\{ 70 \}), "ecording'":(\{ 48 \}), "esource-control'":(\{ 326, 373, 375, 386 \}), "umours'":(\{ 4 \}) ]), "'s":([ "ad'":(\{ 269, 271 \}), "et'":(\{ 194 \}), "pread'":(\{ 68 \}), "tatus'":(\{ 358 \}) ]), "'t":([ "hrow'":(\{ 514 \}), "racking'":(\{ 71 \}), "rading'":(\{ 350 \}), "rash-taker'":(\{ 364 \}), "rigger'":(\{ 89 \}) ]), "'u":([ "pdate'":(\{ 362 \}) ]), "'w":([ "earer'":(\{ 354 \}), "ho'":(\{ 538, 540, 542 \}), "ounding'":(\{ 336 \}) ]), "*s":([ "omething*":(\{ 4 \}) ]), "+l":([ "astseen":(\{ 171, 201 \}) ]), "+n":([ "cs":(\{ 330, 358, 362, 365 \}), "ip":(\{ 22, 53, 64, 194, 202 \}) ]), "+o":([ "page":(\{ 19 \}) ]), "+p":([ "print":(\{ 289 \}) ]), "+r":([ "esurrect-dob":(\{ 454 \}) ]), "+s":([ "ee":(\{ 172, 196, 205, 209, 523 \}), "etp":(\{ 90, 94 \}), "etprop":(\{ 76 \}) ]), "--":([ "":(\{ 171, 201 \}) ]), "-=":([ "":(\{ 412 \}) ]), "0-":([ "1":(\{ 302 \}) ]), "0x":([ "050":(\{ 228 \}) ]), "1+":([ "":(\{ 481 \}) ]), "1-":([ "2":(\{ 333 \}) ]), "10":([ "":(\{ 304 \}), "-11":(\{ 306 \}) ]), "11":([ "":(\{ 306 \}), "-12":(\{ 308 \}) ]), "12":([ "":(\{ 308 \}), "-13":(\{ 311 \}) ]), "13":([ "":(\{ 311 \}), "-14":(\{ 314 \}) ]), "14":([ "":(\{ 314 \}), "-15":(\{ 316 \}) ]), "15":([ "":(\{ 316 \}), "-16":(\{ 319 \}) ]), "16":([ "":(\{ 319 \}), "-17":(\{ 323 \}) ]), "17":([ "":(\{ 323 \}), "-18":(\{ 326 \}) ]), "18":([ "":(\{ 326 \}), "-19":(\{ 329 \}) ]), "19":([ "":(\{ 329 \}), "-20":(\{ 336 \}) ]), "2-":([ "3":(\{ 370 \}), "dim":(\{ 292 \}) ]), "20":([ "":(\{ 261, 336 \}), "-21":(\{ 339 \}), "03-08-31":(\{ 302, 333 \}), "03-09-23":(\{ 370, 396, 412 \}), "03-10-28":(\{ 414 \}), "03-11-01":(\{ 416, 419, 421 \}), "03-11-17":(\{ 304 \}), "03-11-18":(\{ 306 \}), "03-11-21":(\{ 308 \}), "03-11-26":(\{ 311 \}), "03-11-27":(\{ 314 \}), "03-12-20":(\{ 316 \}), "03-12-21":(\{ 319 \}), "04-02-17":(\{ 323 \}), "04-03-23":(\{ 326 \}), "04-03-30":(\{ 329, 336 \}), "04-04-23":(\{ 339, 342 \}), "04-05-19":(\{ 346 \}), "04-08-07":(\{ 350 \}), "04-08-17":(\{ 354 \}), "04-08-23":(\{ 357 \}), "04-10-13":(\{ 361 \}), "04-10-27":(\{ 364 \}), "04-10-29":(\{ 367 \}), "04-11-01":(\{ 373 \}), "04-11-16":(\{ 375 \}), "05-05-12":(\{ 377 \}), "05-05-15":(\{ 379 \}), "06-02-03":(\{ 382 \}), "06-02-14":(\{ 384 \}), "06-02-20":(\{ 386 \}), "06-03-06":(\{ 388 \}), "06-04-25":(\{ 391 \}), "06-04-26":(\{ 394 \}), "06-08-03":(\{ 399, 402, 405 \}), "06-10-25":(\{ 408, 410 \}) ]), "21":([ "":(\{ 339 \}), "-22":(\{ 342 \}) ]), "22":([ "":(\{ 342 \}), "-23":(\{ 346 \}) ]), "23":([ "":(\{ 346 \}), "-24":(\{ 350 \}) ]), "24":([ "":(\{ 187, 350, 435, 610 \}), "-25":(\{ 354 \}) ]), "25":([ "":(\{ 354, 436 \}), "-26":(\{ 357 \}) ]), "26":([ "":(\{ 357 \}), "-27":(\{ 361 \}) ]), "27":([ "":(\{ 361 \}), "-28":(\{ 364 \}) ]), "28":([ "":(\{ 364 \}), "-29":(\{ 367 \}) ]), "29":([ "":(\{ 367 \}), "-30":(\{ 373 \}) ]), "3-":([ "4":(\{ 396 \}) ]), "30":([ "":(\{ 373 \}), "-31":(\{ 375 \}) ]), "31":([ "":(\{ 375 \}), "-32":(\{ 377 \}) ]), "32":([ "":(\{ 377 \}), "-33":(\{ 379 \}) ]), "33":([ "":(\{ 379 \}), "-34":(\{ 382 \}) ]), "34":([ "":(\{ 382 \}), "-35":(\{ 384 \}) ]), "35":([ "":(\{ 384 \}), "-36":(\{ 386 \}) ]), "36":([ "":(\{ 386 \}), "-37":(\{ 388 \}) ]), "37":([ "":(\{ 388 \}), "-38":(\{ 391 \}) ]), "38":([ "":(\{ 391 \}), "-39":(\{ 394 \}) ]), "39":([ "":(\{ 394 \}), "-40":(\{ 399 \}) ]), "4-":([ "5":(\{ 412 \}) ]), "40":([ "":(\{ 399 \}), "-41":(\{ 402 \}) ]), "41":([ "":(\{ 402 \}), "-42":(\{ 405 \}) ]), "42":([ "":(\{ 405 \}), "-43":(\{ 408 \}) ]), "43":([ "":(\{ 408 \}), "-44":(\{ 410 \}) ]), "44":([ "":(\{ 410 \}) ]), "5-":([ "6":(\{ 414 \}) ]), "6-":([ "7":(\{ 416 \}) ]), "7-":([ "8":(\{ 419 \}) ]), "70":([ "":(\{ 132 \}) ]), "8-":([ "9":(\{ 421 \}) ]), "9-":([ "10":(\{ 304 \}) ]), "aa":([ "n":(\{ 14, 445 \}) ]), "ab":([ "c":(\{ 153 \}), "ility":(\{ 130 \}), "ort":(\{ 12, 315 \}), "out":(\{ 3, 4, 241, 264 \}), "solute":(\{ 184 \}) ]), "ac":([ "cept":(\{ 116, 135 \}), "cepted":(\{ 260, 264 \}), "cepts":(\{ 285 \}), "cording":(\{ 331 \}), "cordingly":(\{ 232, 254, 271, 493 \}), "count":(\{ 59, 124, 128, 129, 130, 186, 328, 524, 525, 526, 544 \}), "md":(\{ 291 \}), "ross":(\{ 157 \}), "t":(\{ 11, 41, 46, 48, 51, 57, 109, 112, 177, 238, 272, 302, 359, 488, 493, 495, 537 \}), "t-desc":(\{ 503 \}), "t-post":(\{ 8, 9, 36, 103, 106, 164, 165, 166, 185, 532, 534 \}), "tion":(\{ 15, 17, 56, 76, 158, 159, 168, 397, 514, 519, 522, 523, 604 \}), "tions":(\{ 211 \}), "tive":(\{ 187, 610 \}), "tivity":(\{ 478 \}), "tor":(\{ 3, 111, 189, 203, 593, 595, 598 \}), "tor's":(\{ 530, 533 \}), "ts":(\{ 234, 288, 371 \}), "tual":(\{ 7, 211 \}), "tually":(\{ 343 \}) ]), "ad":([ "d":(\{ 19, 23, 53, 55, 87, 89, 103, 106, 120, 178, 200, 202, 203, 206, 223, 233, 235, 252, 255, 258, 260, 269, 276, 280, 296, 311, 320, 322, 422, 505, 506, 507, 524, 526, 530 \}), "d_command":(\{ 235 \}), "d_mood":(\{ 276 \}), "d_offer":(\{ 250, 260, 264, 348 \}), "d_page":(\{ 19 \}), "d_present":(\{ 89 \}), "ded":(\{ 396 \}), "dition":(\{ 264 \}), "ditional":(\{ 462 \}), "dressed":(\{ 116, 120 \}), "ds":(\{ 120, 318, 387 \}), "jective":(\{ 147, 597 \}), "vanced":(\{ 291 \}), "verb":(\{ 144 \}), "verbs":(\{ 147 \}) ]), "af":([ "ter":(\{ 125, 240 \}) ]), "ag":([ "ain":(\{ 473 \}) ]), "al":([ "ert":(\{ 175, 420, 452 \}), "erts":(\{ 468 \}), "ias":(\{ 208, 217 \}), "iases":(\{ 258 \}), "l":(\{ 17, 21, 69, 73, 101, 143, 145, 146, 148, 150, 187, 218, 265, 268, 270, 353, 354, 361, 364, 367, 368, 373, 375, 377, 378, 379, 382, 384, 386, 388, 391, 394, 399, 402, 404, 405, 408, 411, 419, 421, 425, 439, 444, 455, 457, 459, 465, 480, 515, 555, 610 \}), "lowing":(\{ 80 \}), "ready":(\{ 473, 550 \}), "so":(\{ 19, 68, 120, 258, 420 \}), "ter":(\{ 244, 282, 473 \}), "teration":(\{ 574 \}), "terations":(\{ 532, 534, 574, 576, 578, 582, 584, 586 \}), "tered":(\{ 473, 580 \}) ]), "am":([ "ount":(\{ 137, 169, 171, 201, 419, 440 \}) ]), "an":([ "":(\{ 4, 14, 21, 23, 28, 34, 40, 41, 49, 50, 51, 55, 65, 68, 72, 75, 79, 89, 93, 102, 111, 121, 134, 135, 136, 138, 144, 148, 160, 161, 163, 234, 247, 264, 292, 295, 296, 325, 328, 331, 352, 355, 359, 381, 383, 387, 392, 398, 400, 404, 413, 420, 424, 441, 446, 468, 471, 477, 491, 519, 522, 524, 525, 526, 544, 549, 552, 566, 572, 577, 598, 605 \}), "alysis":(\{ 230 \}), "d":(\{ 21, 23, 25, 33, 37, 47, 52, 55, 65, 68, 79, 86, 92, 102, 105, 111, 113, 119, 120, 123, 127, 130, 135, 138, 140, 144, 154, 158, 159, 171, 187, 200, 201, 202, 218, 219, 226, 230, 232, 234, 241, 248, 254, 256, 257, 258, 260, 261, 264, 271, 275, 280, 285, 291, 296, 325, 338, 389, 398, 414, 416, 417, 419, 420, 421, 439, 441, 450, 456, 458, 466, 473, 482, 484, 498, 509, 519, 546, 562, 568, 573, 608, 610 \}), "ger":(\{ 232, 233 \}), "other":(\{ 248, 275, 464, 474, 498 \}), "y":(\{ 25, 87, 116, 139, 234, 264, 304, 306, 308, 317, 319, 326, 329, 336, 343, 346, 350, 423, 434 \}), "ymore":(\{ 513 \}), "yone":(\{ 124, 129 \}), "ything":(\{ 4 \}) ]), "ap":([ "pear":(\{ 144 \}), "pearance":(\{ 98, 320, 576 \}), "pended":(\{ 19 \}), "plicable":(\{ 102, 140 \}), "plies":(\{ 99, 354, 361, 364, 367, 373, 375, 377, 379, 382, 384, 386, 388, 391, 394, 399, 402, 405, 408 \}), "ply":(\{ 170, 548 \}), "proach":(\{ 41 \}), "propriate":(\{ 5, 374, 398, 441, 448 \}) ]), "ar":([ "e":(\{ 19, 57, 116, 202, 241, 261, 264, 434, 546, 550, 558, 562, 568 \}), "ea":(\{ 189, 203, 359, 472, 549, 552 \}), "ea_trigger_rcontrol":(\{ 472 \}), "en't":(\{ 259 \}), "gument":(\{ 301, 509 \}), "guments":(\{ 298 \}), "ise":(\{ 273, 274 \}), "ound":(\{ 291 \}), "r":(\{ 72 \}), "r_attach":(\{ 23 \}), "ray":(\{ 21, 23, 68, 72, 79, 89, 99, 134, 136, 138, 148, 286, 292, 398, 470, 484 \}), "ray_to_options":(\{ 293 \}), "rays":(\{ 86, 155 \}) ]), "as":([ "":(\{ 3, 24, 70, 72, 79, 86, 138, 233, 249, 255, 256, 257, 258, 269, 288, 331, 371, 400, 429, 430, 441, 446, 519, 549, 552, 562, 563, 565, 595 \}), "cii":(\{ 301 \}), "cii-table":(\{ 292 \}), "k":(\{ 97, 100, 126, 174 \}), "k-about":(\{ 4 \}), "k-for":(\{ 100, 130 \}), "ks":(\{ 4 \}), "leep":(\{ 279 \}), "pect":(\{ 169 \}), "sets":(\{ 121 \}), "signs":(\{ 325 \}), "sist":(\{ 175, 325, 332, 335, 363, 378, 381, 383, 385, 387, 395, 398, 404, 411, 413, 420, 422, 424, 441, 442, 448, 463, 468 \}), "sists":(\{ 409, 423, 425, 435, 439, 444, 455, 457, 459, 464 \}), "sociate":(\{ 328 \}) ]), "at":([ "":(\{ 163, 232, 254, 271, 451, 453, 456, 458 \}), "ag":(\{ 291 \}), "tach":(\{ 23, 501, 508 \}), "tachment":(\{ 332 \}), "tack":(\{ 380, 495, 500 \}) ]), "au":([ "thoritative":(\{ 256, 257 \}), "thority":(\{ 389 \}), "thorized":(\{ 392 \}), "to-adjustment":(\{ 323 \}), "tomatically":(\{ 125, 494 \}) ]), "av":([ "ailable":(\{ 390 \}), "erage":(\{ 171, 201 \}) ]), "aw":([ "ake":(\{ 272, 273 \}), "ake-script":(\{ 273 \}), "ake?":(\{ 277 \}), "akening":(\{ 273 \}), "ay":(\{ 3, 68, 127 \}) ]), "ba":([ "ck":(\{ 441, 442, 454 \}), "ckup":(\{ 335, 376, 447 \}), "ckuppreconvertedplayer":(\{ 447 \}), "d?":(\{ 82 \}), "ndage":(\{ 504, 549, 552, 569 \}), "ndaged":(\{ 504 \}), "ndages":(\{ 548, 571 \}), "se":(\{ 194, 339 \}), "sed":(\{ 20, 80, 117, 121, 134, 241, 286, 292, 298, 301 \}), "sic":(\{ 144, 280, 337 \}) ]), "be":([ "":(\{ 60, 202, 227, 260, 264, 276, 278, 297, 441, 563 \}), "dit":(\{ 13 \}), "en":(\{ 136, 240, 554, 556 \}), "gin":(\{ 256 \}), "have":(\{ 243 \}), "havior":(\{ 13, 30, 185, 243 \}), "ing":(\{ 343, 566 \}), "longs":(\{ 517 \}), "st":(\{ 156 \}), "tter":(\{ 558 \}), "tween":(\{ 211, 450 \}) ]), "bi":([ "gmap":(\{ 469, 470 \}), "lbo":(\{ 193 \}), "t":(\{ 229 \}) ]), "bl":([ "ow-dob":(\{ 2, 3 \}), "ows":(\{ 2 \}) ]), "bo":([ "dies":(\{ 27, 149, 202 \}), "dy":(\{ 101, 491, 553 \}), "dy_list":(\{ 27 \}), "th":(\{ 267 \}), "x":(\{ 32, 60, 297 \}) ]), "br":([ "ief":(\{ 563 \}), "iefs":(\{ 75 \}), "ing":(\{ 454 \}), "oadcast":(\{ 31 \}), "oken":(\{ 566 \}), "uise":(\{ 578 \}), "utally":(\{ 414 \}) ]), "bu":([ "ffer":(\{ 543 \}), "mp":(\{ 232, 254, 271 \}), "sy":(\{ 35 \}), "t":(\{ 156, 514, 563 \}) ]), "by":([ "":(\{ 11, 119, 153, 178, 180, 184, 185, 194, 200, 202, 234, 279, 317, 397, 514, 525, 526, 549, 552 \}) ]), "ca":([ "che":(\{ 532, 534, 545, 574, 576, 578, 582, 584, 586 \}), "lc_schedule":(\{ 20 \}), "lc_sighookpath":(\{ 222 \}), "lculate":(\{ 20, 231 \}), "lculates":(\{ 222, 490 \}), "lendar":(\{ 318, 338, 345, 443 \}), "ll":(\{ 280 \}), "llback-parse":(\{ 284 \}), "llback_parse":(\{ 284 \}), "lled":(\{ 4, 64, 194, 234, 317 \}), "lls":(\{ 70, 243 \}), "me":(\{ 442 \}), "n":(\{ 241, 513 \}), "nnot":(\{ 549, 552, 567 \}), "ses":(\{ 389 \}), "sh":(\{ 117, 121 \}), "talog":(\{ 505, 508, 517, 518 \}), "talogs":(\{ 515 \}), "tegory":(\{ 400 \}), "ught":(\{ 227 \}), "using":(\{ 23 \}) ]), "cd":([ "o":(\{ 117, 121 \}) ]), "ce":([ "ll":(\{ 189, 203 \}), "nter":(\{ 65 \}), "rtain":(\{ 218, 227 \}) ]), "ch":([ "ain":(\{ 120, 220, 235, 236, 260, 262, 501 \}), "allenge":(\{ 181 \}), "ance":(\{ 245, 251 \}), "ange":(\{ 412, 428 \}), "anged":(\{ 489 \}), "angedonceemit":(\{ 473 \}), "anges":(\{ 272, 468 \}), "annel":(\{ 91, 95, 98, 104, 110, 127, 131 \}), "annels":(\{ 70 \}), "ar":(\{ 39 \}), "ar_from_group":(\{ 525 \}), "ar_to_group":(\{ 526 \}), "ar_to_hex":(\{ 39 \}), "aracter":(\{ 88, 171, 201, 349, 449, 452, 517, 525, 526, 592 \}), "aracter's":(\{ 400 \}), "aracters":(\{ 119 \}), "at":(\{ 70, 73 \}), "atfeeding":(\{ 353 \}), "atlib":(\{ 91, 95, 107 \}), "atline":(\{ 77, 81, 122, 356, 360 \}), "atlines":(\{ 101 \}), "atter":(\{ 73 \}), "eck":(\{ 68, 85, 189, 203, 241 \}), "ecks":(\{ 59, 126, 128, 154, 423 \}), "ild":(\{ 414 \}), "ildren":(\{ 494 \}), "oose":(\{ 380, 500 \}), "unk":(\{ 492 \}), "unks":(\{ 259 \}) ]), "ci":([ "rcular":(\{ 65 \}) ]), "cl":([ "aim":(\{ 413 \}), "aimed":(\{ 420 \}), "aims":(\{ 363 \}), "ass":(\{ 287, 294 \}), "ean":(\{ 113 \}), "eanup":(\{ 366 \}), "ear":(\{ 489, 545 \}), "ear-mapping":(\{ 592 \}), "eardescriptionscache":(\{ 545 \}), "eardetaildescription":(\{ 489 \}), "ears":(\{ 592 \}), "ose":(\{ 125 \}), "osed":(\{ 455, 459 \}), "othing":(\{ 549, 552 \}) ]), "cn":([ "pc":(\{ 22, 38, 64, 67, 185, 194, 200, 202, 221, 224, 240, 242, 244, 246, 264, 272, 276, 278, 282 \}), "pc's":(\{ 48, 187, 206, 210, 211, 230, 231, 238, 304, 306, 308, 319, 326, 329, 336, 344, 346, 350, 610 \}) ]), "co":([ "de":(\{ 7, 32, 345, 366, 426, 515, 516 \}), "mm":(\{ 16 \}), "mmand":(\{ 10, 96, 185, 204, 235, 236, 256, 257, 258, 427, 478, 523 \}), "mmand-dob":(\{ 403 \}), "mmand-iob":(\{ 406 \}), "mmanding":(\{ 234 \}), "mmanding'":(\{ 237, 239 \}), "mmands":(\{ 70, 235, 236, 403, 406 \}), "mmit":(\{ 140 \}), "mmit_call":(\{ 140 \}), "mmon":(\{ 62, 82 \}), "mmunicate":(\{ 283, 486, 487 \}), "mp_count":(\{ 137 \}), "mp_value":(\{ 139 \}), "mpare":(\{ 139, 285 \}), "mpatible":(\{ 204 \}), "mpute":(\{ 137 \}), "nclude":(\{ 257 \}), "nfiguration":(\{ 24, 69 \}), "nfiguration_tools":(\{ 24 \}), "nfigurations":(\{ 63 \}), "nfigure":(\{ 202 \}), "nnect":(\{ 5, 18, 321 \}), "nnected":(\{ 171, 201, 343, 423 \}), "nnection":(\{ 164, 165, 169, 171, 201 \}), "nnections":(\{ 169 \}), "nsent":(\{ 514 \}), "nsistency":(\{ 123 \}), "nstruct":(\{ 158, 159 \}), "ntains":(\{ 222 \}), "ntent":(\{ 434 \}), "ntents":(\{ 50, 141, 295, 517 \}), "ntrol":(\{ 177, 202, 340, 472, 485 \}), "nveragetodetail":(\{ 547 \}), "nversion":(\{ 176 \}), "nvert":(\{ 39, 136, 293, 449 \}), "nverts":(\{ 44 \}), "nverttomgeneric":(\{ 176, 449 \}), "nvsecs":(\{ 44 \}), "py":(\{ 466 \}), "pycat":(\{ 410 \}), "pying":(\{ 414 \}), "re":(\{ 64, 89, 93, 97, 100, 103, 106, 109, 112, 124, 129, 178, 180, 182, 190, 194, 218, 219, 220, 235, 236, 237, 238, 239, 250, 260, 262, 264, 276, 278, 288, 348, 371, 392, 482, 519 \}), "re_clean_currency":(\{ 113 \}), "re_movement_exit":(\{ 162 \}), "re_trading_deduct":(\{ 117 \}), "re_trading_query_assets":(\{ 121 \}), "rrectly":(\{ 57 \}), "st":(\{ 130 \}), "urier":(\{ 475 \}), "uriers":(\{ 120 \}), "veragetodetail":(\{ 580 \}), "vered":(\{ 103, 106, 109, 112, 549, 552 \}) ]), "cr":([ "eate":(\{ 49, 60, 63, 79, 148, 168, 225, 292, 297, 301, 305, 307, 310, 338, 470, 511, 522, 580, 600, 601 \}), "eate_configuration":(\{ 15 \}), "eate_object_from_template":(\{ 49 \}), "eate_tree":(\{ 303 \}), "eate_tree_output":(\{ 305 \}), "eate_tree_output_rec":(\{ 307 \}), "eate_tree_output_suf":(\{ 310 \}), "eate_tree_rec":(\{ 313 \}), "eatecoveragetodetail":(\{ 547 \}), "eates":(\{ 249, 303, 369, 378, 385, 448 \}), "eating":(\{ 597 \}), "eation":(\{ 313 \}), "on_stats":(\{ 167 \}), "oss-game":(\{ 110 \}) ]), "cu":([ "rrency":(\{ 113 \}), "rrent":(\{ 230, 231, 331, 383, 593, 596 \}), "rrently":(\{ 149 \}), "stomized":(\{ 130, 273, 274 \}) ]), "da":([ "emon":(\{ 570 \}), "ta":(\{ 4, 24, 117, 121, 140, 202, 302, 483, 587, 609 \}), "tabase":(\{ 54, 170, 480, 592, 593, 609 \}), "tabase'":(\{ 4 \}), "te":(\{ 132, 443 \}), "y":(\{ 341, 481 \}) ]), "db":([ "":(\{ 24, 243, 247, 369, 372, 407, 448 \}), "'s":(\{ 323 \}), "_prop":(\{ 54 \}), "g":(\{ 610 \}), "s":(\{ 335 \}) ]), "dc":([ "":(\{ 172, 173 \}) ]), "de":([ "ad":(\{ 491 \}), "aling":(\{ 414 \}), "als":(\{ 41, 51, 161 \}), "alt":(\{ 441 \}), "ath":(\{ 488 \}), "bug":(\{ 8, 9, 451, 453, 456, 458 \}), "bugmessage":(\{ 451 \}), "bugtitle":(\{ 453 \}), "bugvalue":(\{ 456 \}), "bugvalues":(\{ 458 \}), "cide":(\{ 163, 191, 195, 198, 228, 241, 245, 251, 272, 277, 309, 331, 380, 500, 519 \}), "cide-exec":(\{ 191 \}), "cide-init":(\{ 195 \}), "cide-post":(\{ 198 \}), "cides":(\{ 413 \}), "ciding":(\{ 264 \}), "clare":(\{ 72 \}), "duct":(\{ 117 \}), "f":(\{ 153 \}), "fault":(\{ 158, 159, 212, 334, 396, 489, 563 \}), "faults":(\{ 136 \}), "faulty":(\{ 50, 295 \}), "fend":(\{ 490 \}), "fined":(\{ 24, 119, 331, 418, 446 \}), "finenamespaces":(\{ 460 \}), "l":(\{ 208 \}), "lay":(\{ 211, 213, 229, 259, 279, 376 \}), "lay-exec":(\{ 211 \}), "lay-init":(\{ 213 \}), "layed":(\{ 169 \}), "lete":(\{ 180, 208, 210, 217 \}), "liver":(\{ 145, 475 \}), "liver_for":(\{ 475 \}), "liveries":(\{ 124, 129, 145, 288, 371, 480 \}), "livery":(\{ 154, 477 \}), "livery-exec":(\{ 154 \}), "mand":(\{ 226, 227 \}), "nied":(\{ 59 \}), "pending":(\{ 14 \}), "precated":(\{ 11, 62, 72, 111, 115, 136, 266, 323 \}), "scribe":(\{ 75, 134, 548 \}), "scripting":(\{ 417 \}), "scription":(\{ 158, 159, 432, 489, 503 \}), "scriptions":(\{ 11, 532, 534, 545, 574, 576, 578, 582, 584, 586 \}), "stroy":(\{ 22 \}), "tail":(\{ 474, 489, 563, 589, 590 \}), "tailed":(\{ 489 \}), "tails":(\{ 158, 159, 320 \}), "tailtocoverage":(\{ 547, 580 \}), "termine":(\{ 45, 171, 201, 380, 397, 479, 500, 599 \}), "termine_user":(\{ 88 \}), "termines":(\{ 151, 230, 595 \}) ]), "di":([ "alog":(\{ 32 \}), "e":(\{ 22, 476, 488, 491 \}), "ff":(\{ 285 \}), "fferences":(\{ 137 \}), "rect":(\{ 263 \}), "sable":(\{ 71, 343, 539, 551, 572 \}), "sband":(\{ 528 \}), "scards":(\{ 381 \}), "sconnect":(\{ 26, 164, 324 \}), "sconnected":(\{ 554 \}), "sconnects":(\{ 164 \}), "sguised":(\{ 582 \}), "smount":(\{ 46 \}), "smounting":(\{ 46 \}), "splay":(\{ 127, 131, 332, 338, 543 \}), "splay_prop":(\{ 141 \}), "splayed":(\{ 57, 60, 297 \}), "splays":(\{ 141, 341, 418, 433, 463, 607 \}), "stant-evoke":(\{ 62 \}), "stant_emit":(\{ 62, 65 \}), "stributed":(\{ 120 \}), "stributes":(\{ 70 \}), "sturbing":(\{ 23 \}), "v":(\{ 32 \}), "vs":(\{ 294 \}) ]), "dl":([ "g_sel":(\{ 28 \}), "g_set":(\{ 32 \}), "g_text":(\{ 40 \}) ]), "do":([ "":(\{ 6, 7, 11, 111, 115, 156, 241, 413, 473, 510, 546, 563, 568 \}), "abort":(\{ 315 \}), "addcatalog":(\{ 505 \}), "addgroup":(\{ 506 \}), "addnote":(\{ 318 \}), "addqueue":(\{ 322 \}), "addwhat":(\{ 507 \}), "assign":(\{ 325 \}), "associate":(\{ 328 \}), "attach":(\{ 332, 508 \}), "b":(\{ 234 \}), "backup":(\{ 335 \}), "calendar":(\{ 338 \}), "calendar_day":(\{ 341 \}), "calendar_new":(\{ 345 \}), "catalog":(\{ 510 \}), "charobj":(\{ 349 \}), "chatfeed":(\{ 353 \}), "chathide":(\{ 356 \}), "chatshow":(\{ 360 \}), "claim":(\{ 363 \}), "cleanup":(\{ 366 \}), "create":(\{ 511 \}), "createsearchdb":(\{ 369 \}), "createsearchdb_init":(\{ 372 \}), "createstats":(\{ 374 \}), "cron":(\{ 376 \}), "ctor":(\{ 554, 556, 560, 562, 569 \}), "current":(\{ 378 \}), "detach":(\{ 512 \}), "discard":(\{ 381 \}), "done":(\{ 383 \}), "es":(\{ 5, 322, 353, 438 \}), "esn't":(\{ 4 \}), "fileassist":(\{ 385 \}), "flag":(\{ 387 \}), "flaglist":(\{ 390 \}), "focus":(\{ 393 \}), "forget":(\{ 395 \}), "getassist":(\{ 398 \}), "help":(\{ 401, 513 \}), "info":(\{ 404 \}), "ing":(\{ 153 \}), "init":(\{ 407 \}), "link":(\{ 409 \}), "list":(\{ 515 \}), "listbyplayer":(\{ 411 \}), "listgroups":(\{ 516 \}), "listwhat":(\{ 413, 517 \}), "lock":(\{ 415 \}), "login":(\{ 418 \}), "logon":(\{ 420 \}), "ne-post":(\{ 240 \}), "note":(\{ 422 \}), "online":(\{ 423 \}), "opage":(\{ 424 \}), "open":(\{ 425 \}), "or":(\{ 125 \}), "popup":(\{ 426 \}), "prefer":(\{ 427 \}), "priority":(\{ 428 \}), "private":(\{ 429 \}), "public":(\{ 430 \}), "queue":(\{ 431 \}), "queuedesc":(\{ 432 \}), "queueinfo":(\{ 433 \}), "queuesme":(\{ 434 \}), "recap":(\{ 435 \}), "recent":(\{ 436 \}), "relay":(\{ 437 \}), "removecatalog":(\{ 518 \}), "removegroup":(\{ 520 \}), "removequeue":(\{ 438 \}), "removewhat":(\{ 521 \}), "rename":(\{ 439 \}), "retrieve":(\{ 441 \}), "return":(\{ 442 \}), "schedule":(\{ 443 \}), "search":(\{ 444 \}), "sendemail":(\{ 446 \}), "setassist":(\{ 448 \}), "settype":(\{ 450 \}), "shift":(\{ 452 \}), "shortclosed":(\{ 455 \}), "showall":(\{ 457 \}), "showclosed":(\{ 459 \}), "slide":(\{ 461 \}), "statbyqueue":(\{ 462 \}), "stats":(\{ 463 \}), "transfer":(\{ 464 \}), "tree":(\{ 465 \}), "twiki":(\{ 466 \}), "unlock":(\{ 467 \}), "watch":(\{ 468 \}), "wn":(\{ 229, 414, 476 \}) ]), "du":([ "e":(\{ 419 \}), "h":(\{ 513 \}), "mmy":(\{ 370 \}), "mp":(\{ 441 \}), "plicates":(\{ 23 \}) ]), "ea":([ "ch":(\{ 18, 73, 89, 139, 211, 222, 258, 260 \}), "sy":(\{ 466 \}), "t":(\{ 238, 493, 503 \}), "ten":(\{ 492 \}), "ting":(\{ 240, 241, 242, 244, 246, 248, 497, 503 \}), "ts":(\{ 238 \}) ]), "ed":([ "iting":(\{ 13, 16, 30, 58 \}) ]), "ef":([ "fect":(\{ 2 \}), "ficient":(\{ 414 \}) ]), "ei":([ "ther":(\{ 184, 260, 293, 517 \}) ]), "el":([ "ement":(\{ 25, 50, 295 \}) ]), "em":([ "ail":(\{ 446 \}), "erging":(\{ 589 \}), "it":(\{ 20, 65, 66, 111, 158, 159, 181, 451, 453, 456, 458, 502, 546, 548, 549, 550, 552, 554, 556, 558, 560, 562, 565, 567, 568, 569, 571, 573, 575 \}), "itapp":(\{ 10 \}), "itapptools":(\{ 24 \}), "its":(\{ 440, 504, 575, 608 \}), "its_alreadytreated":(\{ 546 \}), "its_applybandage":(\{ 548 \}), "its_cannotbandage":(\{ 549 \}), "its_currentlyhealing":(\{ 550 \}), "its_deadlywound":(\{ 502 \}), "its_detailnotwounded":(\{ 552 \}), "its_disconnecteddoctor":(\{ 554 \}), "its_disconnectedpatient":(\{ 556 \}), "its_feelingbetter":(\{ 558 \}), "its_finishedtreatmentsuccess":(\{ 560 \}), "its_movedaway":(\{ 562 \}), "its_noskill":(\{ 565 \}), "its_noskilllevel":(\{ 567 \}), "its_notwounded":(\{ 568 \}), "its_patientremovedbandage":(\{ 569 \}), "its_removebandage":(\{ 504 \}), "its_requiresbandages":(\{ 571 \}), "its_treatmentinfo":(\{ 573 \}), "itter":(\{ 570, 572, 577, 589, 590, 591 \}), "ote":(\{ 73, 245, 247 \}), "oting":(\{ 245, 247, 249, 252 \}) ]), "en":([ "able":(\{ 71, 541, 553, 577 \}), "abled":(\{ 343 \}), "countered":(\{ 509 \}), "d":(\{ 257 \}), "ding":(\{ 241 \}), "ergy":(\{ 238 \}), "gine":(\{ 300 \}), "ough":(\{ 241 \}), "queue":(\{ 477 \}), "queue_for_delivery":(\{ 477 \}), "sures":(\{ 57 \}), "ter":(\{ 5, 8, 36, 103, 109, 392 \}), "ter-a-room":(\{ 8 \}), "ter-from":(\{ 124, 589 \}), "ter-into":(\{ 392, 590 \}), "tered":(\{ 589 \}), "tering":(\{ 5, 124, 590 \}), "tire":(\{ 372 \}), "tries":(\{ 293 \}), "try":(\{ 289 \}), "vironment":(\{ 111, 142 \}) ]), "eq":([ "ual":(\{ 287, 294 \}), "ually":(\{ 19 \}) ]), "er":([ "ror":(\{ 212, 396, 471 \}) ]), "es":([ "":(\{ 92 \}), "cape_arguments":(\{ 80 \}), "caping":(\{ 80 \}) ]), "et":([ "c":(\{ 45, 86, 249, 334, 522 \}) ]), "ev":([ "al":(\{ 83 \}), "aluate":(\{ 158, 159 \}), "aluator":(\{ 83 \}), "ery":(\{ 73, 164, 165, 166, 234 \}), "eryone":(\{ 31, 176 \}), "erything":(\{ 187, 610 \}), "oke":(\{ 73, 102, 234, 283, 486, 487 \}), "oke-dob":(\{ 237, 486 \}), "oke-iob":(\{ 234, 239, 487 \}) ]), "ex":([ "act":(\{ 3 \}), "amine":(\{ 11 \}), "ecute":(\{ 169, 211, 234 \}), "ecuted":(\{ 160, 164, 165, 166, 200, 227, 240, 248, 260, 272, 275, 359, 498 \}), "ecutes":(\{ 222, 228 \}), "ecution":(\{ 12 \}), "ecutions":(\{ 69 \}), "ist":(\{ 322, 438 \}), "isting":(\{ 535 \}), "it":(\{ 162, 392 \}), "its":(\{ 68 \}), "plananitive":(\{ 513 \}), "plicitly":(\{ 72 \}), "plode":(\{ 136 \}), "port":(\{ 87 \}), "t":(\{ 359 \}), "tended":(\{ 126, 197 \}), "tensions":(\{ 53 \}), "tensive":(\{ 419 \}), "ternal":(\{ 61, 327 \}), "tract":(\{ 75, 86, 105, 152 \}), "tract_props":(\{ 86 \}), "tremes":(\{ 241 \}) ]), "fa":([ "il":(\{ 339 \}), "ilure":(\{ 484 \}), "int":(\{ 65 \}), "ll":(\{ 277 \}), "mily":(\{ 16, 483, 484 \}), "mily_resolve":(\{ 484 \}), "shion":(\{ 65 \}), "tal":(\{ 502 \}) ]), "fe":([ "ature":(\{ 43, 197, 246, 314, 414, 416 \}), "atures":(\{ 174 \}), "ed":(\{ 73 \}), "eder":(\{ 73 \}), "eling":(\{ 558 \}), "w":(\{ 104, 258 \}) ]), "fi":([ "gure":(\{ 507, 510, 511, 512, 517, 521 \}), "le":(\{ 603 \}), "led":(\{ 385, 424, 435, 436 \}), "nd":(\{ 29, 42, 142, 184, 355 \}), "nd-hook":(\{ 218 \}), "nd-instrument":(\{ 593 \}), "nd-leader":(\{ 594 \}), "nd_nip_object":(\{ 184 \}), "nds":(\{ 68, 593, 594, 596, 597, 600, 601 \}), "nished":(\{ 383, 560 \}), "rst":(\{ 14, 138, 509 \}), "x":(\{ 339 \}) ]), "fl":([ "ag":(\{ 387, 420 \}), "ags":(\{ 390 \}), "oat":(\{ 113 \}), "ush":(\{ 532, 534, 574, 576, 578, 582, 584, 586 \}) ]), "fo":([ "cus":(\{ 393 \}), "lder":(\{ 265, 267, 268, 270 \}), "llow":(\{ 551, 566 \}), "llowers":(\{ 555 \}), "llowing":(\{ 561, 564 \}), "llows":(\{ 566 \}), "od":(\{ 241, 503 \}), "r":(\{ 1, 4, 15, 17, 20, 22, 28, 32, 36, 40, 43, 46, 57, 77, 82, 87, 90, 94, 97, 98, 100, 107, 108, 123, 124, 126, 129, 130, 135, 142, 154, 174, 181, 187, 190, 197, 208, 213, 214, 215, 217, 231, 237, 239, 241, 243, 246, 249, 258, 264, 273, 274, 279, 283, 288, 289, 302, 309, 310, 311, 312, 316, 323, 330, 332, 344, 355, 359, 366, 371, 376, 393, 404, 411, 417, 424, 426, 427, 433, 440, 444, 446, 455, 457, 459, 460, 466, 468, 470, 472, 475, 477, 485, 486, 487, 489, 497, 502, 504, 554, 556, 560, 572, 575, 577, 588, 593, 603, 604, 610 \}), "rcearray":(\{ 72 \}), "rge":(\{ 286 \}), "rge_table":(\{ 286 \}), "rmat":(\{ 19, 286, 450 \}), "und":(\{ 4, 33, 37, 293 \}) ]), "fr":([ "ee":(\{ 130, 555 \}), "eemote":(\{ 251, 253, 323 \}), "eemoting":(\{ 251 \}), "equency'":(\{ 245, 251 \}), "om":(\{ 3, 26, 54, 65, 68, 75, 86, 93, 99, 101, 105, 117, 118, 164, 189, 220, 230, 236, 240, 247, 262, 278, 290, 331, 383, 398, 442, 452, 464, 470, 474, 525, 533, 544, 547, 566, 589, 592, 593 \}) ]), "fu":([ "nction":(\{ 22, 38, 53, 64, 70, 72, 74, 111, 115, 123, 136, 156, 157, 194, 202, 347, 351 \}), "nctionality":(\{ 64, 87, 88, 97, 100 \}), "nctions":(\{ 168, 202 \}) ]), "ga":([ "me":(\{ 54, 164, 165, 166 \}), "ther":(\{ 167 \}) ]), "ge":([ "neral":(\{ 407 \}), "neral_who":(\{ 538 \}), "neral_who2":(\{ 540 \}), "neral_who_debug":(\{ 542 \}), "nerate":(\{ 32, 119, 298, 547 \}), "nerated":(\{ 230 \}), "neric":(\{ 184, 381, 389, 447, 449 \}), "sture":(\{ 263 \}), "sture-dob":(\{ 263 \}), "t":(\{ 11, 77, 114, 143, 146, 265, 513, 529 \}), "t-groupstatus":(\{ 595 \}), "t-members":(\{ 596 \}), "t-quality":(\{ 597 \}), "t-starttime":(\{ 598 \}), "t-style":(\{ 599 \}), "t-tools":(\{ 600 \}), "t-values":(\{ 21 \}), "t-verbs":(\{ 601 \}), "t_group":(\{ 529 \}), "t_name":(\{ 75 \}), "t_prefername":(\{ 77 \}), "tprop":(\{ 143, 265 \}), "tprop-values":(\{ 146 \}), "ts":(\{ 54, 349, 398 \}), "tstatedesc":(\{ 417 \}) ]), "gi":([ "ve":(\{ 432 \}), "ven":(\{ 86, 105, 265, 268, 270, 417 \}) ]), "gl":([ "obal":(\{ 10, 56, 76, 168, 357, 478, 522, 523 \}), "obal-pre":(\{ 514 \}) ]), "go":([ "":(\{ 241, 277 \}), "-to-sleep":(\{ 274 \}) ]), "gr":([ "abbing":(\{ 241 \}), "abs":(\{ 230 \}), "eater":(\{ 241 \}), "oup":(\{ 506, 508, 517, 520, 525, 529, 530, 533, 594, 595, 596, 598, 602 \}), "oup_add":(\{ 530 \}), "oup_list":(\{ 531 \}), "oup_sub":(\{ 533 \}), "oups":(\{ 516, 517, 535 \}) ]), "gu":([ "ards":(\{ 566 \}) ]), "ha":([ "ck":(\{ 566 \}), "lting":(\{ 569 \}), "nd":(\{ 130, 140 \}), "nded":(\{ 563 \}), "ndle":(\{ 110, 602, 606 \}), "ndle_extreq_update":(\{ 327 \}), "ndler":(\{ 4, 43, 57, 97, 100, 116, 120, 130, 145, 212, 246, 247, 249, 253, 273, 274, 327, 334, 337, 344, 389, 396, 397, 403, 406, 488, 490, 491, 492, 494, 497, 499 \}), "ndler-post":(\{ 126 \}), "ndler_freemote":(\{ 253 \}), "ndles":(\{ 36, 157, 221, 224, 603, 608 \}), "ppiness":(\{ 254, 255, 269 \}), "s":(\{ 89, 136, 240, 414, 420, 554, 556, 560, 562, 569 \}), "ve":(\{ 154, 156, 169, 234, 420, 423, 473, 565 \}) ]), "he":([ "":(\{ 4 \}), "al":(\{ 537, 567, 571 \}), "aler":(\{ 565 \}), "aling":(\{ 546, 550, 568, 569, 573 \}), "ar":(\{ 158 \}), "artbeat":(\{ 22, 38, 67, 187, 222, 479, 610 \}), "artbeat_thread_running":(\{ 479 \}), "lp":(\{ 330, 401, 513, 603 \}), "r":(\{ 56 \}), "xadecimal":(\{ 39 \}) ]), "hi":([ "de":(\{ 356 \}), "de_tip":(\{ 55, 296 \}), "erarchical":(\{ 21, 25 \}), "nts":(\{ 30 \}), "s":(\{ 56 \}) ]), "ho":([ "ok":(\{ 87, 191, 195, 198, 211, 213, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 248, 275, 279, 309, 312, 498 \}), "ok's":(\{ 272 \}), "ok-script":(\{ 331 \}), "oks":(\{ 34, 221, 223 \}), "st":(\{ 8, 9 \}), "urly":(\{ 167 \}), "urs":(\{ 169, 435 \}), "w":(\{ 48 \}), "wever":(\{ 130 \}) ]), "ht":([ "ml":(\{ 299, 300, 301 \}) ]), "hu":([ "man":(\{ 44 \}), "man-readable":(\{ 289 \}), "nger":(\{ 241, 254, 271 \}), "ngrier":(\{ 242 \}), "ngry":(\{ 241, 244 \}), "nter":(\{ 490 \}) ]), "hv":([ "l":(\{ 21, 25, 29, 33, 37, 42, 47, 52 \}) ]), "i'":([ "m":(\{ 513 \}) ]), "ic":([ "":(\{ 179 \}) ]), "id":([ "entical":(\{ 88 \}), "entifier":(\{ 87, 355 \}), "le":(\{ 127 \}) ]), "if":([ "":(\{ 4, 25, 50, 59, 84, 85, 88, 102, 108, 118, 128, 140, 151, 154, 156, 169, 189, 203, 211, 229, 241, 244, 260, 261, 264, 279, 282, 293, 295, 322, 420, 423, 438, 448, 580, 595 \}) ]), "ig":([ "nore":(\{ 81, 356 \}) ]), "im":([ "plement":(\{ 130, 194, 314 \}), "plemented":(\{ 4, 234, 333 \}), "plements":(\{ 414 \}), "plode":(\{ 287, 294 \}), "plode_diff":(\{ 287, 294 \}) ]), "in":([ "":(\{ 4, 18, 21, 22, 24, 29, 34, 38, 42, 60, 63, 65, 68, 74, 87, 108, 130, 137, 143, 144, 146, 147, 150, 194, 199, 218, 226, 228, 241, 245, 251, 259, 264, 265, 267, 268, 270, 286, 297, 334, 359, 389, 400, 414, 419, 420, 421, 435, 446, 447, 448, 457, 469, 479, 480, 494, 504, 553, 562, 563, 589, 590, 596, 607 \}), "cluded":(\{ 607 \}), "cluding":(\{ 65 \}), "crement":(\{ 281 \}), "crementally":(\{ 154 \}), "crements":(\{ 238 \}), "fo":(\{ 341, 378, 404, 433, 457 \}), "form":(\{ 546, 549, 550, 552, 554, 556, 558, 560, 562, 565, 567, 568, 569, 571, 573 \}), "formation":(\{ 359 \}), "forms":(\{ 325 \}), "front":(\{ 445 \}), "herit":(\{ 87, 193, 311, 316, 339 \}), "heritage":(\{ 302 \}), "heritance":(\{ 178, 180 \}), "herited":(\{ 41, 51, 185, 227, 288, 371 \}), "it":(\{ 6, 120, 160, 190, 231, 233, 250, 252, 255, 258, 269, 348, 496, 501 \}), "it-post":(\{ 248, 275, 280, 498 \}), "it_popup":(\{ 579 \}), "it_values":(\{ 45 \}), "itial":(\{ 213, 407 \}), "itialization":(\{ 6, 190 \}), "itialize":(\{ 45, 280, 579 \}), "itializes":(\{ 120, 372 \}), "itiate":(\{ 66 \}), "put":(\{ 136 \}), "put-box":(\{ 28, 40, 55, 296 \}), "stance":(\{ 123 \}), "stead":(\{ 136, 266, 414 \}), "strument":(\{ 2, 593, 598, 605 \}), "strumental":(\{ 599 \}), "strumentals":(\{ 602, 606 \}), "struments":(\{ 1, 603, 604 \}), "teger":(\{ 400 \}), "tegers":(\{ 470 \}), "terface":(\{ 340 \}), "ternal":(\{ 7, 72, 178, 180, 191, 195, 198, 211, 213, 216, 218, 242, 281, 312 \}), "ternal-exec":(\{ 216 \}), "ternally":(\{ 194, 219, 220 \}), "terpret":(\{ 469, 519 \}), "to":(\{ 14, 44, 92, 124, 129, 130, 132, 136, 152, 155, 165, 189, 194, 288, 289, 293, 371, 441, 461, 466, 477, 491, 590, 591, 609 \}), "valid":(\{ 342 \}), "volves":(\{ 264 \}) ]), "io":([ "b":(\{ 20 \}) ]), "ip":([ "":(\{ 79 \}), "list":(\{ 79 \}) ]), "is":([ "":(\{ 4, 15, 17, 22, 23, 25, 32, 38, 48, 50, 53, 59, 60, 64, 68, 71, 82, 84, 85, 88, 89, 93, 97, 100, 118, 124, 127, 128, 129, 130, 131, 160, 164, 165, 166, 174, 185, 187, 190, 191, 194, 195, 198, 200, 202, 211, 213, 216, 227, 228, 231, 233, 234, 235, 236, 244, 248, 255, 256, 257, 258, 260, 262, 264, 269, 272, 273, 274, 275, 279, 282, 293, 295, 297, 317, 331, 357, 359, 389, 392, 397, 400, 419, 475, 479, 481, 498, 549, 552, 566, 595, 610 \}), "-set":(\{ 25 \}), "_badname":(\{ 82 \}), "nan":(\{ 85 \}), "sues":(\{ 41, 51 \}) ]), "it":([ "":(\{ 2, 4, 50, 60, 64, 79, 101, 120, 156, 158, 159, 185, 187, 211, 213, 227, 231, 238, 241, 273, 274, 293, 295, 297, 317, 322, 389, 438, 441, 442, 448, 549, 552, 610 \}), "'s":(\{ 229, 519 \}), "em":(\{ 97, 100, 130, 352, 473, 477 \}), "ems":(\{ 116, 120, 475 \}), "s":(\{ 519 \}), "self":(\{ 118, 194 \}) ]), "ja":([ "vascript":(\{ 55, 296 \}) ]), "je":([ "weler":(\{ 11 \}), "welry":(\{ 11 \}) ]), "js":([ "_clear_default":(\{ 50, 295 \}), "_tip":(\{ 55, 296 \}), "_welcome":(\{ 60, 297 \}) ]), "ka":([ "lle":(\{ 514 \}) ]), "ki":([ "ller":(\{ 380 \}) ]), "kn":([ "ights":(\{ 181 \}), "ightsemit":(\{ 181 \}), "ow":(\{ 4 \}) ]), "la":([ "st":(\{ 138, 435 \}), "stseen":(\{ 171, 201 \}), "yers":(\{ 414 \}) ]), "le":([ "ader":(\{ 594, 595 \}), "ading":(\{ 92 \}), "ast":(\{ 29 \}), "ave":(\{ 51, 163 \}), "ft":(\{ 440, 563, 590 \}), "ngth":(\{ 153, 291 \}), "tter":(\{ 14 \}), "vel":(\{ 451, 453, 456, 458, 473 \}) ]), "lf":([ "c":(\{ 87 \}) ]), "li":([ "b":(\{ 1, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 167, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 213, 216, 218, 219, 220, 221, 222, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 577, 579, 581, 583, 585, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610 \}), "braries":(\{ 34, 178, 180, 200, 202, 206, 210, 221, 223, 224, 419 \}), "brary":(\{ 4, 64, 160, 163, 190, 194, 234, 240, 252, 264, 273, 274, 304, 306, 308, 319, 326, 329, 336, 346, 350, 354, 361, 364, 367, 373, 375, 377, 379, 382, 384, 386, 388, 389, 391, 394, 397, 399, 402, 405, 408 \}), "fe":(\{ 454 \}), "ke":(\{ 86, 551 \}), "mited":(\{ 127 \}), "ne":(\{ 420 \}), "nes":(\{ 73, 104, 287 \}), "nk":(\{ 298 \}), "nkdie":(\{ 164, 171, 172, 173, 581 \}), "nks":(\{ 409 \}), "st":(\{ 21, 25, 27, 34, 59, 63, 69, 79, 120, 128, 143, 146, 149, 150, 169, 233, 255, 258, 267, 268, 269, 356, 360, 390, 413, 427, 458, 512, 513, 517, 530, 531, 533, 535, 536, 538, 540, 542, 596, 600, 601, 607 \}), "st'":(\{ 126 \}), "st-folder":(\{ 266 \}), "st_configurations":(\{ 63 \}), "st_folder":(\{ 266, 267 \}), "sted":(\{ 260 \}), "stening":(\{ 84, 91, 95, 127, 131 \}), "sting":(\{ 168, 465 \}), "stprop":(\{ 148 \}), "sts":(\{ 74, 401, 404, 411, 431, 436, 515, 516 \}), "ve":(\{ 38 \}) ]), "lo":([ "ad":(\{ 194, 334 \}), "ad_me":(\{ 194 \}), "aded":(\{ 34, 233, 248, 255, 258, 269, 275, 498 \}), "ads":(\{ 160 \}), "cate":(\{ 218 \}), "cated":(\{ 226 \}), "cation":(\{ 504 \}), "cked":(\{ 123 \}), "cks":(\{ 415 \}), "g":(\{ 87, 197, 314 \}), "gged":(\{ 73 \}), "gin":(\{ 165, 175, 176, 179, 181, 183, 186, 189, 193, 196, 199, 325, 468, 583 \}), "gin-script":(\{ 186 \}), "gout":(\{ 166, 207, 585 \}), "gs":(\{ 165, 189, 203, 420 \}), "ng":(\{ 378, 450, 554, 556 \}), "nger":(\{ 562 \}), "ok":(\{ 4, 232, 254, 271 \}), "oking":(\{ 241 \}), "okup":(\{ 88 \}), "op":(\{ 222, 376 \}), "st":(\{ 130 \}), "upe":(\{ 11 \}), "upes":(\{ 11 \}) ]), "lp":([ "compat":(\{ 88 \}) ]), "ls":([ "v":(\{ 29 \}) ]), "lz":([ "":(\{ 92 \}) ]), "ma":([ "de":(\{ 532, 534, 574, 576, 578, 582, 584, 586 \}), "in":(\{ 563 \}), "ke":(\{ 124, 129, 163, 176, 242, 250, 256, 257, 264, 348, 392 \}), "kes":(\{ 73 \}), "p":(\{ 592, 593 \}), "pped":(\{ 86 \}), "pping":(\{ 89, 93, 103, 106, 109, 112, 152, 446, 509, 547, 580, 609 \}), "ppings":(\{ 155 \}), "rked":(\{ 420 \}), "ss":(\{ 493 \}), "tches":(\{ 151 \}), "tching":(\{ 293 \}), "x":(\{ 33 \}), "ximum":(\{ 33 \}), "y":(\{ 276, 278 \}) ]), "me":([ "":(\{ 400, 492 \}), "mber":(\{ 595 \}), "mbers":(\{ 439, 531, 596 \}), "nu":(\{ 133 \}), "rge":(\{ 130, 155 \}), "rry":(\{ 76, 83, 141, 168, 178, 180, 202, 218 \}), "rry_add":(\{ 178 \}), "rry_delete":(\{ 180 \}), "rryized":(\{ 538, 540, 542 \}), "ssage":(\{ 381, 451, 453 \}), "ta":(\{ 483 \}) ]), "mg":([ "eneric":(\{ 176, 449, 460 \}), "marrach":(\{ 447 \}) ]), "mi":([ "n":(\{ 37 \}), "nimum":(\{ 37 \}), "nus":(\{ 287, 294 \}), "sc":(\{ 120 \}), "ssing":(\{ 556 \}) ]), "mo":([ "difications":(\{ 221, 224, 419 \}), "difier":(\{ 200 \}), "difies":(\{ 493 \}), "dify":(\{ 178, 180, 200, 221, 224, 225 \}), "ney":(\{ 117 \}), "nitoring":(\{ 434 \}), "od":(\{ 229, 230, 231, 232, 244, 247, 254, 261, 271, 280, 282 \}), "od-exec":(\{ 230 \}), "od-init":(\{ 231 \}), "ods":(\{ 233, 255, 258, 269, 276, 278 \}), "re":(\{ 96, 414 \}), "st":(\{ 42, 389, 436 \}), "unt-dob":(\{ 161 \}), "unted":(\{ 57 \}), "unting":(\{ 36, 161 \}), "unts":(\{ 41, 51 \}), "ve":(\{ 162, 474 \}), "vement":(\{ 36, 41, 51, 163 \}), "ves":(\{ 383, 461 \}) ]), "ms":([ "tamp":(\{ 170 \}), "v":(\{ 42 \}) ]), "mu":([ "ltiple":(\{ 86, 105 \}), "ltiply":(\{ 279 \}), "nge":(\{ 99 \}), "sic":(\{ 256, 257, 597, 600, 601, 607, 608 \}), "sical":(\{ 594, 596 \}), "sician":(\{ 258, 259, 261 \}), "sicians":(\{ 256, 257, 261 \}) ]), "na":([ "me":(\{ 75, 77, 184, 310, 456, 525, 526 \}), "mes":(\{ 458, 460 \}), "mespace":(\{ 214, 215, 416 \}) ]), "nc":([ "s":(\{ 321, 324, 333, 334, 337, 343, 347, 351, 370 \}) ]), "ne":([ "arby":(\{ 380, 475, 500 \}), "cessary":(\{ 419, 448 \}), "ed":(\{ 273, 274, 323, 546, 568 \}), "gative":(\{ 519 \}), "utral":(\{ 229, 280 \}), "w":(\{ 194, 219, 285, 311, 345, 372, 385, 414, 441, 448 \}), "wliechat":(\{ 179, 183 \}), "xt":(\{ 17, 108 \}) ]), "ni":([ "l":(\{ 84 \}), "p":(\{ 36, 64, 89, 93, 103, 106, 109, 112, 124, 129, 184, 197, 202, 214, 226, 235, 236, 237, 238, 239, 260, 262, 288, 302, 309, 312, 340, 359, 371, 392, 397, 416, 421, 486, 487, 488 \}), "p-core":(\{ 215, 416, 421 \}), "p-relations":(\{ 403, 406 \}), "pper":(\{ 74 \}), "ppers":(\{ 343, 354, 361, 364, 367, 368, 373, 375, 377, 379, 382, 384, 386, 388, 391, 394, 399, 402, 405, 408 \}) ]), "no":([ "":(\{ 514, 562, 565 \}), "n-nil":(\{ 33, 37, 47, 52 \}), "ne":(\{ 563 \}), "rth":(\{ 123 \}), "t":(\{ 4, 11, 60, 85, 111, 115, 156, 261, 264, 297, 322, 380, 438, 473, 500, 513, 546, 563, 568 \}), "te":(\{ 318, 422 \}), "tification":(\{ 209 \}), "tifications":(\{ 539, 541 \}), "w":(\{ 414, 558 \}) ]), "np":([ "c":(\{ 4, 34, 41, 51, 78, 97, 100, 120, 160, 161, 163, 174, 177, 229, 234, 252, 288, 317, 355, 359, 371, 414, 416, 419, 421, 491 \}), "c's":(\{ 18, 46, 57, 234, 302, 414 \}), "cask-dob":(\{ 174 \}) ]), "nr":([ "efs":(\{ 68 \}) ]), "nu":([ "mber":(\{ 231, 286 \}), "mbers":(\{ 79 \}), "meric":(\{ 85, 92 \}) ]), "ob":([ "ject":(\{ 4, 24, 49, 75, 77, 86, 89, 93, 105, 108, 117, 120, 121, 126, 135, 140, 148, 184, 331, 349, 359, 371, 398, 522 \}), "jects":(\{ 89, 93, 134, 143, 146, 150, 154, 265, 267, 268, 270 \}), "tains":(\{ 598 \}) ]), "oc":([ "casion":(\{ 163 \}), "curs":(\{ 211 \}) ]), "of":([ "":(\{ 3, 23, 27, 47, 50, 52, 63, 67, 68, 69, 76, 79, 80, 88, 89, 97, 100, 104, 119, 120, 125, 130, 134, 136, 137, 138, 141, 146, 148, 149, 169, 171, 194, 201, 203, 211, 220, 222, 231, 233, 250, 255, 258, 266, 267, 268, 269, 272, 286, 287, 291, 293, 294, 295, 348, 378, 397, 414, 419, 428, 434, 439, 440, 445, 458, 465, 470, 490, 493, 503, 514, 517, 538, 540, 542, 567, 573, 592, 593, 594, 595, 596, 599, 600, 601, 605, 607 \}), "f":(\{ 91, 539 \}), "fer":(\{ 120, 246, 260, 262, 264, 344, 497 \}), "fer-to":(\{ 412 \}), "fer-who":(\{ 264, 412 \}), "fering":(\{ 89, 264 \}), "fers":(\{ 116, 120, 264, 497 \}), "fline-page":(\{ 186 \}) ]), "ol":([ "d":(\{ 193, 285, 447, 481 \}) ]), "om":([ "ni-comm":(\{ 283 \}) ]), "on":([ "":(\{ 11, 14, 20, 59, 73, 77, 80, 81, 95, 117, 121, 122, 127, 128, 131, 134, 143, 146, 150, 163, 167, 187, 221, 224, 226, 227, 241, 265, 270, 286, 292, 298, 301, 325, 328, 359, 468, 541, 610 \}), "ce":(\{ 160 \}), "e":(\{ 3, 279, 464, 474 \}), "e-two":(\{ 137 \}), "line":(\{ 31, 127, 149 \}) ]), "op":([ "age":(\{ 186, 424 \}), "en":(\{ 411, 423, 425, 464 \}), "tion":(\{ 293 \}), "tional":(\{ 68 \}), "tionally":(\{ 56, 111, 525 \}) ]), "or":([ "":(\{ 4, 14, 56, 73, 75, 85, 108, 118, 184, 202, 227, 256, 257, 264, 267, 277, 287, 294, 380, 401, 413, 445, 453, 500, 519, 551, 563, 595, 598 \}), "der":(\{ 23, 130 \}) ]), "ot":([ "her":(\{ 18, 56, 139 \}) ]), "ou":([ "r":(\{ 241, 501 \}), "t":(\{ 130, 162, 203, 489, 507, 510, 511, 512, 517, 521 \}), "tcome":(\{ 490 \}), "tput":(\{ 44, 305, 307, 356, 360, 466 \}), "tta":(\{ 492 \}), "twards":(\{ 65 \}) ]), "ov":([ "er":(\{ 110, 140, 242 \}), "er-aged":(\{ 480 \}), "erridable":(\{ 546, 548, 549, 550, 552, 554, 556, 558, 560, 562, 565, 567, 568, 569, 571, 573 \}), "erride":(\{ 389 \}) ]), "ow":([ "n":(\{ 273, 274 \}) ]), "pa":([ "ge":(\{ 15, 17, 19, 35, 45 \}), "ges":(\{ 19 \}), "rent":(\{ 414 \}), "rse":(\{ 102, 192, 247, 299, 509 \}), "rse_arg_mapping":(\{ 509 \}), "rse_raw":(\{ 102 \}), "rse_tags":(\{ 300 \}), "rser":(\{ 299, 300 \}), "rsing":(\{ 372 \}), "rt":(\{ 97, 100, 264 \}), "rticular":(\{ 89, 147, 400, 475 \}), "ss":(\{ 156 \}), "ssed":(\{ 169 \}), "ssing":(\{ 566 \}), "st":(\{ 104 \}), "ste":(\{ 466 \}), "th":(\{ 222 \}), "tient":(\{ 554, 556, 560 \}), "ttern":(\{ 151 \}), "use":(\{ 211 \}), "y":(\{ 135 \}) ]), "pc":([ "":(\{ 380 \}) ]), "pe":([ "ople":(\{ 454 \}), "r":(\{ 171, 201 \}), "rform":(\{ 145, 504, 527, 575 \}), "rformed":(\{ 397 \}), "riod":(\{ 125 \}), "rmanently":(\{ 53 \}), "rson":(\{ 256, 257, 325, 563, 569 \}), "rsonal":(\{ 318 \}) ]), "pi":([ "ck":(\{ 331 \}), "pes":(\{ 403, 406 \}) ]), "pl":([ "aces":(\{ 56, 609 \}), "ay":(\{ 256, 261 \}), "ay-group":(\{ 602 \}), "ay-helpfile":(\{ 603 \}), "ay-post":(\{ 604 \}), "ay-pre":(\{ 605 \}), "ay-solo":(\{ 606 \}), "ay-stylefile":(\{ 607 \}), "ay_replace_strings":(\{ 608 \}), "ayage":(\{ 167 \}), "ayer":(\{ 259, 411, 420, 424, 546, 549, 550, 552, 558, 562, 565, 567, 568, 571, 573, 603, 609 \}), "ayers":(\{ 263, 423, 447 \}), "aying":(\{ 257, 259, 595, 598, 604, 605 \}), "ease":(\{ 266 \}), "us":(\{ 287, 294 \}) ]), "po":([ "pulation":(\{ 588 \}), "pup":(\{ 332, 340, 426, 579, 587 \}), "sition":(\{ 99 \}), "sitive":(\{ 519 \}), "ssible":(\{ 124, 129 \}), "ssibly":(\{ 575 \}), "st":(\{ 604 \}), "tentially":(\{ 264 \}) ]), "pr":([ "actice":(\{ 3 \}), "e":(\{ 156 \}), "e-existing":(\{ 49 \}), "e-parse":(\{ 249 \}), "e-parsing":(\{ 249 \}), "edator":(\{ 380, 493, 495, 497, 498, 500 \}), "efer":(\{ 98 \}), "eference":(\{ 98 \}), "eferred":(\{ 77, 427 \}), "eparation":(\{ 1 \}), "epare-play":(\{ 1 \}), "eparse":(\{ 249 \}), "esent":(\{ 43, 89, 93 \}), "esents":(\{ 43, 89, 93, 130 \}), "eserved":(\{ 514 \}), "esolve":(\{ 289 \}), "esuming":(\{ 475 \}), "ettify-resolve":(\{ 289 \}), "event":(\{ 566 \}), "evious":(\{ 342 \}), "ey":(\{ 380, 490, 491, 492, 494, 495, 500 \}), "ice":(\{ 133 \}), "int":(\{ 24 \}), "iority":(\{ 428 \}), "isoner":(\{ 189, 203 \}), "isoners":(\{ 189, 203 \}), "ivate":(\{ 429 \}), "oceed":(\{ 256 \}), "ocess":(\{ 188, 482, 569 \}), "ocess_red":(\{ 188 \}), "oduce":(\{ 102, 285 \}), "oduct":(\{ 47 \}), "op":(\{ 86 \}), "op2":(\{ 86 \}), "opcontainer":(\{ 522 \}), "operly":(\{ 123 \}), "operties":(\{ 86, 105, 137, 148, 286, 323, 414, 421, 447 \}), "operty":(\{ 23, 54, 87, 90, 94, 143, 146, 150, 213, 228, 265, 270, 414, 551, 553 \}), "opsearch":(\{ 105 \}), "opset":(\{ 90 \}), "opset2":(\{ 94 \}), "ovided":(\{ 264, 283 \}), "ox":(\{ 514 \}) ]), "pu":([ "blic":(\{ 430 \}), "rge":(\{ 101, 343, 480, 481 \}), "rge_body":(\{ 101 \}), "rge_deliveries":(\{ 480 \}), "rge_trash":(\{ 481 \}), "t":(\{ 445 \}) ]), "qu":([ "alitative":(\{ 597 \}), "ery":(\{ 108, 121, 400 \}), "ery_objects":(\{ 108 \}), "ery_relationship":(\{ 400 \}), "estion":(\{ 4 \}), "eue":(\{ 86, 310, 322, 328, 383, 393, 413, 415, 427, 429, 430, 432, 433, 438, 439, 441, 442, 450, 455, 457, 459, 461, 464, 467 \}), "eued":(\{ 124, 129 \}), "eues":(\{ 418, 431, 434, 446, 465 \}), "it":(\{ 166, 201, 203, 205, 207 \}), "its":(\{ 166 \}) ]), "ra":([ "ndemit":(\{ 111 \}), "ndom":(\{ 111, 162, 163, 499 \}), "ndomly":(\{ 331 \}), "nged":(\{ 519 \}), "w":(\{ 102 \}) ]), "re":([ "":(\{ 72, 222 \}), "-add":(\{ 316 \}), "-adds":(\{ 419 \}), "aches":(\{ 3 \}), "act":(\{ 2, 3, 133, 135, 161, 174, 234, 288, 371, 403, 406, 454, 589, 590, 591 \}), "act-post":(\{ 158, 159, 237, 239, 263, 264, 412, 486, 487 \}), "acted":(\{ 589, 590 \}), "action":(\{ 2, 115 \}), "ad":(\{ 133 \}), "ad-what":(\{ 133 \}), "adable":(\{ 44 \}), "call":(\{ 104, 543 \}), "ceives":(\{ 73 \}), "cent":(\{ 436 \}), "cipient":(\{ 475 \}), "cord":(\{ 48, 71 \}), "cord_command_parse":(\{ 192 \}), "cording":(\{ 18, 26, 185 \}), "cursive":(\{ 307, 313 \}), "cursively":(\{ 108 \}), "d":(\{ 188 \}), "freshes":(\{ 421 \}), "gister":(\{ 53, 347, 460 \}), "gister-hook":(\{ 219 \}), "gister_nip_function":(\{ 202 \}), "gister_signature":(\{ 347 \}), "gisters":(\{ 219 \}), "gistry":(\{ 202, 276, 278 \}), "late":(\{ 218 \}), "lations":(\{ 58, 397, 403, 406 \}), "lationship":(\{ 400 \}), "lay":(\{ 437 \}), "lay_chat":(\{ 107 \}), "lay_who_query":(\{ 110 \}), "lay_who_reply":(\{ 114 \}), "lays":(\{ 437 \}), "lease":(\{ 557 \}), "main":(\{ 144 \}), "maining":(\{ 537 \}), "move":(\{ 50, 93, 101, 189, 200, 210, 223, 236, 278, 295, 320, 438, 518, 520, 521, 525, 533, 555 \}), "moved":(\{ 240, 569 \}), "moves":(\{ 193, 395, 419 \}), "movesgchannel":(\{ 193 \}), "names":(\{ 439 \}), "peat":(\{ 119 \}), "place":(\{ 123, 273, 274 \}), "place_strings":(\{ 123 \}), "placement":(\{ 123, 130, 359, 497 \}), "placements":(\{ 608 \}), "places":(\{ 147, 416 \}), "ply":(\{ 482 \}), "port":(\{ 471, 478 \}), "porterror":(\{ 471 \}), "presentation":(\{ 138 \}), "quest":(\{ 114, 188, 327, 337, 351, 358, 362, 365, 389 \}), "quest-authority":(\{ 389 \}), "quest_identifier":(\{ 355 \}), "quest_status":(\{ 358 \}), "quest_update":(\{ 362 \}), "quest_where":(\{ 365 \}), "quests":(\{ 110 \}), "quire":(\{ 571 \}), "quired":(\{ 130, 353 \}), "set":(\{ 231 \}), "siding":(\{ 267 \}), "solve":(\{ 483, 484 \}), "solve_action":(\{ 519 \}), "solve_meta_family_data":(\{ 483 \}), "solves":(\{ 291 \}), "source":(\{ 472, 485 \}), "source-control":(\{ 7, 204 \}), "sponse":(\{ 126, 486, 487 \}), "sponsible":(\{ 187, 610 \}), "st":(\{ 194 \}), "start":(\{ 368 \}), "sticted":(\{ 128 \}), "strain":(\{ 551, 559 \}), "strained":(\{ 557 \}), "stricted":(\{ 128 \}), "sult":(\{ 113, 119, 482 \}), "sulting":(\{ 509 \}), "trieve":(\{ 441 \}), "turn":(\{ 17, 21, 25, 27, 33, 37, 47, 52, 79, 86, 92, 113, 119, 138, 149, 267, 268, 417, 442, 482, 484, 509 \}), "turned":(\{ 136, 400 \}), "turning":(\{ 287, 294 \}), "turns":(\{ 68, 84, 260, 398 \}), "v":(\{ 302, 304, 306, 308, 311, 314, 316, 319, 323, 326, 329, 333, 336, 339, 342, 346, 350, 354, 357, 361, 364, 367, 370, 373, 375, 377, 379, 382, 384, 386, 388, 391, 394, 396, 399, 402, 405, 408, 410, 412, 414, 416, 419, 421 \}), "verse_ctime":(\{ 132 \}) ]), "ri":([ "ght":(\{ 563 \}) ]), "ro":([ "of":(\{ 142 \}), "om":(\{ 56, 68, 124, 129, 154, 163, 241, 288, 331, 485, 562, 589, 590, 591 \}), "om-cleaning":(\{ 331 \}), "oms":(\{ 36, 41, 51, 157 \}), "p":(\{ 90, 94 \}), "ster":(\{ 189, 203 \}) ]), "ru":([ "le":(\{ 58 \}), "les":(\{ 144, 331 \}), "mour":(\{ 4 \}), "nning":(\{ 479 \}), "ns":(\{ 187, 376, 610 \}) ]), "sa":([ "dness":(\{ 271 \}), "me":(\{ 3, 562 \}), "y":(\{ 4 \}), "ys":(\{ 256, 257 \}) ]), "sc":([ "an":(\{ 264 \}), "an-dob":(\{ 288, 371 \}), "ans":(\{ 154, 359 \}), "ar":(\{ 584 \}), "ene":(\{ 61 \}), "hedule":(\{ 20 \}), "heduled":(\{ 12 \}), "reen":(\{ 330 \}), "ript":(\{ 1, 2, 3, 4, 8, 9, 11, 15, 17, 23, 32, 36, 41, 46, 48, 51, 57, 70, 71, 78, 84, 87, 89, 90, 93, 94, 97, 100, 107, 116, 120, 130, 141, 154, 160, 161, 164, 165, 166, 170, 172, 173, 174, 177, 178, 179, 180, 182, 183, 185, 187, 190, 196, 205, 207, 209, 218, 219, 220, 221, 222, 224, 227, 230, 231, 232, 234, 235, 236, 238, 240, 241, 242, 244, 246, 248, 250, 254, 256, 257, 260, 261, 262, 264, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 288, 317, 321, 324, 331, 335, 339, 344, 348, 359, 371, 376, 389, 397, 403, 406, 462, 490, 491, 493, 495, 498, 501, 519, 599, 602, 606, 610 \}), "ripts":(\{ 17, 218, 222, 234, 260, 262, 264 \}), "roll":(\{ 120 \}), "rollback":(\{ 543 \}) ]), "se":([ "arch":(\{ 86, 369, 372 \}), "archdb":(\{ 469, 470 \}), "archdb_decode":(\{ 469 \}), "archdb_encode":(\{ 470 \}), "arches":(\{ 444 \}), "cond":(\{ 138 \}), "condary":(\{ 389 \}), "conds":(\{ 44, 132, 171, 201 \}), "cret":(\{ 125 \}), "cure":(\{ 98 \}), "e":(\{ 85, 172, 196, 205, 423, 539, 541, 543 \}), "e-group":(\{ 526, 528 \}), "e-group's":(\{ 531 \}), "e-groups":(\{ 535 \}), "e-list":(\{ 524, 536, 544 \}), "e_notify":(\{ 209 \}), "lections":(\{ 28 \}), "lf-closing":(\{ 125 \}), "lf-triggered":(\{ 211 \}), "nd":(\{ 65, 67, 111, 118 \}), "nd_msg":(\{ 118 \}), "nds":(\{ 424, 446 \}), "nse":(\{ 158, 159 \}), "ntence":(\{ 482 \}), "ries":(\{ 80, 222, 287, 293, 294 \}), "rver":(\{ 328, 437 \}), "ssion":(\{ 18 \}), "ssiontime":(\{ 171, 201 \}), "t":(\{ 29, 42, 61, 64, 80, 87, 88, 90, 94, 98, 108, 118, 136, 150, 199, 213, 228, 261, 270, 286, 293, 301, 334, 414, 429, 430, 494 \}), "t-data":(\{ 609 \}), "thandedness":(\{ 563 \}), "tprop":(\{ 150, 200, 226, 228, 270 \}), "tprop-post":(\{ 206, 208, 210, 212, 214, 215, 217, 223, 225, 226, 227, 228, 320, 566, 574, 576, 578, 580, 582, 584, 586 \}), "tprop-trigger":(\{ 214, 215 \}), "tprop-triggers":(\{ 416 \}), "ts":(\{ 171, 201, 226, 315, 356, 360, 374, 393, 427, 448, 563 \}), "ttattoolocation":(\{ 474 \}), "tting":(\{ 26 \}), "ttings":(\{ 74 \}), "veral":(\{ 68 \}), "verity":(\{ 567 \}) ]), "sg":([ "":(\{ 193 \}) ]), "sh":([ "ell":(\{ 174, 237, 239, 264 \}), "ifts":(\{ 452 \}), "ort":(\{ 87, 450 \}), "ortcut-command":(\{ 243 \}), "ortens":(\{ 153 \}), "ould":(\{ 17, 202, 264, 389 \}), "ow":(\{ 360, 563 \}), "ow_tip":(\{ 55, 296 \}), "owhealingtime":(\{ 440 \}), "ows":(\{ 425, 434, 435, 455, 457, 459, 537 \}), "ut":(\{ 476 \}), "utdown":(\{ 204, 311, 316 \}) ]), "si":([ "g":(\{ 22, 67 \}), "g-hook":(\{ 154, 309, 312 \}), "gexec":(\{ 227, 228 \}), "gexecptr":(\{ 226 \}), "ghooks":(\{ 230 \}), "gnal":(\{ 67, 218, 219, 220, 222, 224, 225, 226, 227, 231, 280 \}), "gnals":(\{ 34, 224, 225 \}), "gnature":(\{ 347 \}), "gstream":(\{ 227 \}), "mple":(\{ 43, 84, 174, 264 \}), "mplified":(\{ 488 \}), "mply":(\{ 11 \}), "nce":(\{ 132 \}), "tuation":(\{ 490 \}), "ze":(\{ 119 \}) ]), "sk":([ "ill":(\{ 473, 565 \}), "otos":(\{ 290, 331 \}) ]), "sl":([ "ain":(\{ 317 \}), "ay":(\{ 352 \}), "ayed":(\{ 359 \}), "eep":(\{ 272, 274, 277 \}), "eep-script":(\{ 274 \}), "eeping":(\{ 272, 275, 277, 279, 281, 282 \}), "ib":(\{ 82 \}), "ightly":(\{ 244, 282 \}), "ow":(\{ 229 \}) ]), "sm":([ "ell":(\{ 159 \}) ]), "sn":([ "ake-mod":(\{ 503 \}) ]), "so":([ "":(\{ 123, 259 \}), "cials":(\{ 147 \}), "lo":(\{ 595, 606 \}), "meone":(\{ 2, 4, 41, 51, 81, 116, 122, 164, 165, 166, 234, 392, 440, 492, 550, 557, 559, 561, 571, 589, 590, 591 \}), "mething":(\{ 238, 241, 245, 251 \}), "mewhere":(\{ 263 \}), "rt":(\{ 99, 134 \}), "rt_briefed_objects":(\{ 134 \}), "und":(\{ 65 \}), "uth":(\{ 123 \}) ]), "sp":([ "ace":(\{ 462 \}), "aces":(\{ 460 \}), "awn":(\{ 317, 359, 414 \}), "awn-system":(\{ 317 \}), "awned":(\{ 177, 302, 494 \}), "awns":(\{ 414 \}), "ecial":(\{ 446 \}), "ecific":(\{ 29, 42, 68, 69, 77, 91, 95, 117, 121, 325, 328, 332, 341, 401, 472, 485, 531 \}), "ecified":(\{ 4, 56, 60, 153, 169, 245, 251, 286, 297, 424, 443 \}), "ecify":(\{ 87 \}), "lit-evoke":(\{ 136 \}), "oken":(\{ 482 \}), "ontaneous":(\{ 187, 610 \}), "ontaneously":(\{ 245, 251 \}) ]), "sq":([ "uint":(\{ 11 \}), "uinting":(\{ 11 \}) ]), "st":([ "affer":(\{ 420 \}), "amp":(\{ 168 \}), "ance":(\{ 57 \}), "ances":(\{ 57 \}), "andard":(\{ 70, 273, 274 \}), "art":(\{ 95, 177, 256, 302, 494, 499, 561, 605 \}), "art-handler":(\{ 499 \}), "art-script":(\{ 501 \}), "art_emit":(\{ 66 \}), "arting":(\{ 598 \}), "arts":(\{ 185 \}), "ate":(\{ 272, 273, 274, 279, 417 \}), "atistics":(\{ 463 \}), "ats":(\{ 167, 374 \}), "atus":(\{ 35, 452 \}), "ays":(\{ 171, 201 \}), "ep":(\{ 3 \}), "eps":(\{ 68 \}), "icks":(\{ 443 \}), "op":(\{ 91, 257, 359, 564 \}), "opped":(\{ 562 \}), "ore":(\{ 447, 587 \}), "ore_popup":(\{ 587 \}), "r":(\{ 136 \}), "ream":(\{ 226, 227, 228 \}), "rength":(\{ 519 \}), "ring":(\{ 80, 87, 92, 113, 119, 132, 136, 138, 151, 267, 284, 290, 291, 444, 469, 470, 482, 509 \}), "ring*":(\{ 293 \}), "ring_list":(\{ 138 \}), "rings":(\{ 123, 138 \}), "rip":(\{ 290 \}), "rip_skotos":(\{ 290 \}), "rlen":(\{ 291 \}), "rong":(\{ 65 \}), "uff":(\{ 5, 175 \}), "yle":(\{ 599 \}), "yles":(\{ 607 \}) ]), "su":([ "b":(\{ 109, 112, 217, 544 \}), "b-folders":(\{ 267 \}), "b_command":(\{ 236 \}), "b_mood":(\{ 278 \}), "b_offer":(\{ 262, 264 \}), "b_present":(\{ 93 \}), "bqueue":(\{ 461 \}), "bqueues":(\{ 393 \}), "btract":(\{ 262, 544 \}), "ccess":(\{ 484 \}), "ccessfully":(\{ 560 \}), "ch":(\{ 70, 130, 249 \}), "ffix":(\{ 310 \}), "m":(\{ 52 \}), "pport":(\{ 333, 370 \}), "pposed":(\{ 189, 203, 261 \}), "re":(\{ 73, 124, 129, 392, 513 \}) ]), "sw":([ "itches":(\{ 450 \}) ]), "sy":([ "nonym":(\{ 22 \}), "stem":(\{ 36, 96, 118, 182, 189, 194, 197, 203, 302, 317, 331, 340, 359, 419, 514, 607 \}), "supdate":(\{ 182 \}) ]), "t2":([ "":(\{ 610 \}) ]), "ta":([ "ble":(\{ 286, 292, 301, 378 \}), "gged":(\{ 287 \}), "gs":(\{ 290 \}), "ke":(\{ 130, 135, 264 \}), "ken":(\{ 124, 129 \}), "rget":(\{ 22, 56, 111, 493 \}), "rgets":(\{ 61 \}), "s":(\{ 372, 426, 427 \}), "sk":(\{ 332, 424, 428, 437, 443 \}), "sks":(\{ 436 \}), "ttoo":(\{ 474 \}) ]), "te":([ "ach":(\{ 48 \}), "leport":(\{ 9, 106, 112, 129, 591 \}), "leport-to-a-room":(\{ 9 \}), "leported":(\{ 591 \}), "leporting":(\{ 129 \}), "mplate":(\{ 49, 140, 299 \}), "mplate_object_store":(\{ 140 \}), "rm":(\{ 22 \}), "sting":(\{ 426, 462 \}), "xt":(\{ 40 \}) ]), "th":([ "an":(\{ 513 \}), "at":(\{ 2, 4, 84, 88, 89, 116, 123, 157, 211, 218, 234, 259, 264, 439, 481, 513, 517, 546, 549, 550, 552, 554, 556, 558, 560, 562, 565, 567, 568, 569, 571 \}), "e":(\{ 2, 3, 4, 5, 7, 11, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 42, 43, 45, 47, 48, 50, 52, 53, 54, 59, 64, 66, 67, 68, 70, 71, 73, 74, 77, 80, 87, 88, 89, 93, 97, 100, 103, 104, 106, 107, 108, 109, 112, 118, 119, 120, 124, 128, 129, 130, 137, 140, 141, 142, 147, 148, 154, 158, 159, 160, 163, 164, 165, 166, 168, 169, 187, 189, 190, 191, 193, 194, 195, 197, 198, 200, 202, 203, 211, 212, 213, 214, 215, 216, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 244, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 287, 288, 292, 294, 295, 298, 301, 303, 304, 306, 308, 309, 312, 317, 319, 326, 329, 331, 332, 335, 336, 343, 344, 346, 348, 349, 350, 353, 354, 359, 361, 364, 367, 369, 371, 372, 373, 375, 376, 377, 379, 382, 383, 384, 386, 388, 391, 394, 397, 398, 399, 400, 402, 404, 405, 407, 408, 414, 416, 417, 419, 420, 421, 422, 424, 427, 431, 434, 436, 437, 440, 441, 442, 443, 448, 466, 480, 486, 487, 489, 490, 491, 493, 497, 498, 499, 501, 503, 509, 513, 514, 515, 516, 517, 530, 533, 535, 536, 538, 540, 542, 545, 546, 547, 549, 550, 552, 554, 556, 558, 560, 562, 565, 567, 568, 569, 571, 573, 592, 593, 594, 598, 603, 607, 610 \}), "eir":(\{ 121, 134, 554, 556, 569 \}), "em":(\{ 189, 203, 263, 264, 325, 589, 590 \}), "ere":(\{ 260 \}), "ere's":(\{ 245, 251 \}), "erefore":(\{ 546, 568 \}), "ese":(\{ 86, 202 \}), "ey":(\{ 154, 259, 420, 423, 546, 549, 550, 552, 558, 562, 565, 567, 568, 569, 571 \}), "ey're":(\{ 261 \}), "ings":(\{ 130, 232, 249, 254, 264, 271 \}), "is":(\{ 3, 4, 15, 17, 22, 23, 32, 38, 48, 53, 57, 64, 70, 71, 74, 87, 89, 93, 97, 100, 116, 120, 130, 154, 160, 161, 163, 164, 165, 166, 174, 185, 187, 190, 191, 194, 195, 198, 202, 211, 213, 216, 219, 220, 221, 222, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 244, 248, 254, 256, 257, 260, 261, 262, 264, 271, 272, 273, 274, 275, 276, 278, 279, 282, 304, 306, 308, 319, 326, 329, 331, 336, 346, 350, 354, 357, 361, 364, 367, 373, 375, 377, 379, 382, 384, 386, 388, 389, 391, 394, 397, 399, 402, 403, 405, 406, 408, 414, 416, 419, 421, 493, 498, 515, 516, 519, 566, 589, 590, 591, 610 \}), "read":(\{ 22, 38, 67, 187, 222, 610 \}), "rough":(\{ 36, 64, 156, 162, 272, 372 \}), "ru":(\{ 283 \}) ]), "ti":([ "me":(\{ 125, 132, 164, 165, 166, 234, 242, 440, 537, 560, 598 \}), "mes":(\{ 573 \}), "mestamp":(\{ 173, 199, 207 \}), "p":(\{ 55, 296 \}), "red":(\{ 282 \}), "tle":(\{ 453 \}) ]), "tm":([ "":(\{ 256, 257 \}) ]), "to":([ "":(\{ 11, 19, 22, 23, 31, 32, 38, 39, 45, 48, 53, 55, 56, 60, 64, 67, 68, 70, 71, 84, 85, 87, 88, 89, 91, 93, 95, 99, 111, 116, 118, 120, 123, 127, 130, 136, 140, 145, 153, 156, 176, 178, 180, 194, 200, 202, 203, 206, 210, 218, 223, 225, 227, 231, 233, 235, 236, 241, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 269, 276, 277, 278, 296, 297, 318, 320, 325, 331, 332, 335, 339, 343, 354, 356, 359, 360, 361, 364, 367, 373, 375, 377, 379, 380, 382, 383, 384, 386, 387, 388, 391, 392, 394, 397, 399, 402, 403, 405, 406, 408, 413, 414, 419, 422, 423, 424, 437, 441, 442, 443, 449, 451, 452, 453, 454, 456, 458, 464, 473, 474, 500, 501, 503, 507, 508, 510, 511, 512, 517, 521, 524, 526, 530, 546, 548, 549, 550, 552, 554, 556, 558, 560, 562, 563, 565, 566, 567, 568, 569, 571, 573, 589, 590, 599, 600, 601, 602, 606 \}), "gether":(\{ 409 \}), "ggles":(\{ 35 \}), "o":(\{ 554, 556 \}), "ok":(\{ 492 \}), "ol":(\{ 13, 16, 30, 58 \}), "ols":(\{ 24, 600 \}), "p":(\{ 142, 436 \}), "p_env":(\{ 142 \}), "pic":(\{ 4 \}), "tal":(\{ 171, 201 \}), "uching":(\{ 519 \}), "wards":(\{ 234, 400 \}) ]), "tr":([ "ack":(\{ 71 \}), "acked":(\{ 18 \}), "acking":(\{ 71 \}), "ait":(\{ 4, 89, 93, 235, 236, 245, 251 \}), "aits":(\{ 74, 320, 499, 501 \}), "ansfer":(\{ 56 \}), "ansfers":(\{ 464 \}), "ash":(\{ 331, 344, 481 \}), "ash-taking":(\{ 344 \}), "eating":(\{ 440 \}), "eatment":(\{ 537, 560, 562, 569, 573 \}), "ee":(\{ 303, 305, 307, 313, 465 \}), "igger":(\{ 38, 164, 165, 166, 176, 200, 472, 485 \}), "igger_rcontrol":(\{ 485 \}), "iggered":(\{ 256, 257 \}), "iggers":(\{ 2, 258, 359 \}), "ue":(\{ 25, 84, 118, 260 \}), "ue\|false":(\{ 285 \}) ]), "tu":([ "rn":(\{ 14, 92, 359 \}), "rns":(\{ 132, 491 \}) ]), "tw":([ "eak":(\{ 144, 588 \}), "eak_pop":(\{ 588 \}), "iki":(\{ 466 \}), "ikize":(\{ 466 \}), "o":(\{ 18, 139, 414 \}) ]), "ty":([ "pe":(\{ 397 \}) ]), "ug":([ "ly":(\{ 566 \}), "lyzwochack":(\{ 566 \}) ]), "un":([ "adverb":(\{ 144 \}), "adverbian":(\{ 147 \}), "ignore":(\{ 122 \}), "ique":(\{ 355 \}), "less":(\{ 60, 136, 297 \}), "locks":(\{ 467 \}), "merge":(\{ 152 \}), "provoked":(\{ 211 \}), "ravelling":(\{ 504 \}), "register-hook":(\{ 220 \}), "registers":(\{ 220 \}), "set":(\{ 496 \}), "sets":(\{ 226 \}), "synchronize":(\{ 259 \}), "wear":(\{ 532 \}) ]), "up":([ "":(\{ 61, 64, 241, 286, 301, 331, 334 \}), "date":(\{ 78, 103, 106, 109, 112, 182, 302, 304, 306, 308, 311, 314, 316, 319, 323, 326, 327, 329, 333, 336, 339, 342, 346, 350, 354, 357, 361, 364, 367, 370, 373, 375, 377, 379, 382, 384, 386, 388, 391, 394, 396, 399, 402, 405, 408, 410, 412, 414, 416, 419, 421 \}), "dated":(\{ 302 \}), "dates":(\{ 304, 306, 308, 319, 326, 329, 336, 346, 350 \}) ]), "ur":([ "chain":(\{ 108 \}) ]), "us":([ "":(\{ 589, 590 \}), "age":(\{ 272 \}), "e":(\{ 11, 62, 64, 72, 111, 115, 136, 250, 264, 266, 348 \}), "ed":(\{ 11, 22, 23, 32, 38, 45, 48, 53, 64, 71, 84, 89, 93, 144, 147, 178, 180, 194, 200, 202, 206, 210, 218, 223, 225, 231, 235, 236, 260, 262, 276, 278, 397, 489, 597, 600, 601 \}), "eless":(\{ 389 \}), "er":(\{ 332 \}), "es":(\{ 366 \}), "ing":(\{ 19, 49, 55, 75, 144, 194, 296, 304, 306, 308, 317, 319, 326, 329, 334, 336, 346, 350, 354, 361, 364, 367, 373, 375, 377, 379, 382, 384, 386, 388, 391, 394, 399, 402, 405, 408, 603 \}), "ing_config":(\{ 69 \}) ]), "v2":([ "":(\{ 94 \}) ]), "va":([ "lue":(\{ 21, 25, 29, 33, 37, 39, 42, 86, 92, 113, 136, 213, 417, 456, 469, 470 \}), "lue2":(\{ 86 \}), "lues":(\{ 21, 45, 47, 52, 139, 146, 231, 458 \}), "r_extract":(\{ 152 \}), "r_merge":(\{ 155 \}), "riable":(\{ 72, 289, 456, 458 \}), "riable_indice":(\{ 152, 155 \}), "riables":(\{ 80, 152 \}), "rious":(\{ 70, 230, 232, 254, 271, 366, 516 \}) ]), "ve":([ "ctors":(\{ 71 \}), "rb":(\{ 102 \}), "rbs":(\{ 601 \}), "rsa":(\{ 219 \}), "rsion":(\{ 3, 76, 147, 380, 514, 538, 540, 542 \}), "rsions":(\{ 65 \}), "ry":(\{ 244, 282 \}) ]), "vi":([ "ce":(\{ 219 \}), "ew":(\{ 45 \}) ]), "vo":([ "lition":(\{ 494, 496 \}), "litional":(\{ 154 \}) ]), "wa":([ "iting":(\{ 154 \}), "lk":(\{ 21, 25, 33, 37, 47, 52 \}), "nt":(\{ 256 \}), "nts":(\{ 227 \}), "s":(\{ 4 \}), "tched":(\{ 395 \}), "tches":(\{ 468 \}), "y":(\{ 414 \}) ]), "we":([ "":(\{ 233, 241, 245, 251, 255, 258, 269, 280, 380, 500, 589, 590 \}), "'re":(\{ 241 \}), "ar":(\{ 534 \}), "ariness":(\{ 281 \}), "aring":(\{ 11 \}), "lcome":(\{ 17, 60, 297 \}), "ll":(\{ 519 \}), "re":(\{ 439, 569 \}) ]), "wh":([ "at":(\{ 359, 413, 507, 510, 511, 512, 517, 521 \}), "en":(\{ 160, 238, 248, 273, 274, 275, 317, 359, 489, 498, 504, 532, 534, 566, 574, 576, 578, 582, 584, 586, 597 \}), "enever":(\{ 2, 4, 41, 51, 185, 227, 228, 248, 272, 275, 498 \}), "ere":(\{ 359, 414 \}), "ether":(\{ 264, 380, 479, 500, 519 \}), "ich":(\{ 36, 41, 51, 126, 171, 201, 222, 288, 291, 359, 371, 490, 491 \}), "ilst":(\{ 11 \}), "isper-dob":(\{ 3 \}), "o":(\{ 110, 127, 131, 424 \}), "o-listing":(\{ 114 \}), "olist":(\{ 149 \}) ]), "wi":([ "ldcard":(\{ 151 \}), "ll":(\{ 4, 89, 116, 120, 123, 130, 163, 211, 213, 227, 229, 231, 232, 234, 241, 242, 244, 245, 251, 254, 256, 257, 260, 261, 271, 279, 282, 331, 519 \}), "th":(\{ 4, 18, 41, 51, 61, 92, 123, 139, 147, 161, 204, 219, 234, 241, 264, 273, 274, 287, 294, 302, 328, 381, 414, 416, 420, 441 \}), "thin":(\{ 41, 51 \}), "thout":(\{ 23, 75, 343 \}), "tness":(\{ 124, 129, 158, 159, 283, 392 \}) ]), "wo":([ "e":(\{ 265, 268, 270 \}), "rd":(\{ 153, 156, 445, 608 \}), "rd-list":(\{ 102 \}), "rd_smash":(\{ 153 \}), "rds":(\{ 20, 89, 136 \}), "rks":(\{ 156 \}), "uld":(\{ 264 \}), "und":(\{ 502, 527, 567, 586 \}), "unded":(\{ 504, 546, 568 \}), "unding":(\{ 527 \}) ]), "wr":([ "ap":(\{ 156 \}), "apper":(\{ 82 \}), "aps":(\{ 291 \}) ]), "ye":([ "lling":(\{ 157 \}) ]), "yo":([ "u":(\{ 156, 211, 264, 434, 468 \}), "ur":(\{ 273, 274, 318, 393, 427, 442 \}) ]), "ze":([ "ll":(\{ 514 \}), "ro":(\{ 92 \}) ]), "zl":([ "ink":(\{ 298 \}) ]) ])
      </Core:Property>
      <Core:Property property="locators">
         ([ 1:([ \<Lib:instruments\>:([ "lib:prepare-play":1, "react:blow-dob":2, "react:whisper-dob":3 ]) ]), 3:([ \<MOVED:20080918-114107:Lib:NIP:lib:rumours\>:([ "lib:handler:ask-about":4 ]), \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:([ "lib:entering":5, "lib:init":6, "lib:resource-control:internal":7 ]) ]), 4:([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:([ "global:command":10, "lib:abort":12, "lib:action:create_configuration":15, "lib:action:welcome":17, "lib:calc_schedule":20, "lib:configuration_tools":24, "lib:dlg_sel":28, "lib:dlg_set":32, "lib:dlg_text":40, "lib:init_values":45, "lib:js_clear_default":50, "lib:js_tip":55, "lib:js_welcome":60, "lib:list_configurations":63, "lib:start_emit":66, "lib:using_config":69 ]) ]), 5:([ \<Lib:common\>:([ "act-post:enter%host":8, "act-post:teleport%host":9, "act:squint":11, "lib:aan":14, "lib:add_page":19, "lib:arr_attach":23, "lib:body_list":27, "lib:broadcast":31, "lib:busy":35, "lib:char_to_hex":39, "lib:convsecs":44, "lib:create_object_from_template":49, "lib:db_prop":54, "lib:denied":59, "lib:distant-evoke":62, "lib:distant_emit":65, "lib:exits":68, "lib:forcearray":72, "lib:get_name":75, "lib:iplist":79, "lib:is_badname":82, "lib:isnan":85, "lib:lookup":88, "lib:lz":92, "lib:more":96, "lib:munge":99, "lib:parse_raw":102, "lib:propsearch":105, "lib:query_objects":108, "lib:randemit":111, "lib:reaction":115, "lib:repeat":119, "lib:replace_strings":123, "lib:restricted":128, "lib:reverse_ctime":132, "lib:sort_briefed_objects":134, "lib:split-evoke":136, "lib:string_list":138, "lib:template_object_store":140, "lib:top_env":142, "lib:unadverb":144, "lib:unadverbian":147, "lib:wholist":149, "lib:wildcard":151, "lib:word_smash":153, "lib:wrap":156, "lib:yelling":157, "witness:sense/hear":158, "witness:sense/smell":159 ]), \<MOVED:20080918-114107:Lib:NIP:basefuns\>:([ "lib:bedit":13, "lib:comm":16, "lib:connect":18, "lib:die":22, "lib:disconnect":26, "lib:hints":30, "lib:list":34, "lib:live":38, "lib:present":43, "lib:record":48, "lib:register":53, "lib:relations":58, "lib:scene":61, "lib:set":64, "lib:sig":67, "lib:tracking":71, "lib:traits":74, "lib:update":78 ]), \<Lib:hvl\>:([ "lib:get-values":21, "lib:is-set":25, "lib:lsv":29, "lib:max":33, "lib:min":37, "lib:msv":42, "lib:product":47, "lib:sum":52 ]) ]), 6:([ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>:([ "act-post:enter":36, "act:approach":41, "act:dismount":46, "act:leave":51, "act:stance":57 ]), \<Neoct:Staff:Actions:+return\>:([ "global:action":56 ]), \<Lib:chatlib\>:([ "lib:chat":70, "lib:feed":73, "lib:get_prefername":77, "lib:ignore":81, "lib:listening":84, "lib:log":87, "lib:off":91, "lib:on":95, "lib:prefer":98, "lib:purge_body":101, "lib:recall":104, "lib:relay_chat":107, "lib:relay_who_query":110, "lib:relay_who_reply":114, "lib:send_msg":118, "lib:unignore":122, "lib:w":127, "lib:who":131 ]), \<Neoct:Staff:Actions:+setp\>:([ "global:action":76, "lib:escape_arguments":80, "lib:eval":83, "lib:extract_props":86, "lib:propset":90, "lib:propset2":94 ]) ]), 7:([ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:([ "lib:core:add_present":89, "lib:core:sub_present":93, "lib:handler:ask":97, "lib:handler:ask-for":100 ]), \<MOVED:20080918-114107:Lib:NIP:lib:courier\>:([ "act-post:enter%nip:core":103, "act-post:teleport%nip:core":106, "act:enter%nip:core":109, "act:teleport%nip:core":112, "lib:handler:offers:addressed":116, "lib:init":120, "witness:enter-from%nip:core":124, "witness:teleport%nip:core":129 ]), \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:([ "lib:core_clean_currency":113, "lib:core_trading_deduct":117, "lib:core_trading_query_assets":121, "lib:handler-post:ask":126, "lib:handler:ask-for":130, "react:read-what":133, "react:take":135 ]), \<Lib:door\>:([ "lib:self-closing":125 ]), \<Lib:property\>:([ "lib:comp_count":137, "lib:comp_value":139, "lib:display_prop":141, "lib:getprop":143, "lib:getprop-values":146, "lib:listprop":148, "lib:setprop":150, "lib:var_extract":152, "lib:var_merge":155 ]) ]), 8:([ \<MOVED:20080918-114107:Lib:NIP:signals:DELIVERY\>:([ "lib:handler:deliver":145 ]) ]), 9:([ \<MOVED:20080918-114107:Lib:NIP:hooks:delivery\>:([ "lib:delivery:delivery-exec":154 ]), \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>:([ "lib:init":160, "react:mount-dob":161 ]) ]), 10:([ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:([ "lib:core_movement_exit":162, "lib:movement:decide":163 ]), \<Lib:connection\>:([ "act-post:linkdie":164, "act-post:login":165, "act-post:quit":166, "lib:cron_stats":167, "lib:delayed":169, "lib:linkdie:lastseen":171, "lib:linkdie:see":172, "lib:linkdie:timestamp":173, "lib:login:assist":175, "lib:login:converttomgeneric":176, "lib:login:ic:newliechat":179, "lib:login:knightsemit":181, "lib:login:newliechat":183, "lib:login:opage":186, "lib:login:prisoners":189, "lib:login:removesgchannel":193, "lib:login:see":196, "lib:login:timestamp":199, "lib:quit:lastseen":201, "lib:quit:prisoners":203, "lib:quit:see":205, "lib:quit:timestamp":207, "lib:see_notify":209 ]) ]), 11:([ \<MOVED:20080918-114107:Lib:NIP:lib:asking\>:([ "react:npcask-dob":174 ]), \<Lib:NIP:core\>:([ "act:start":177, "lib:core:merry_add":178, "lib:core:merry_delete":180, "lib:core:sysupdate":182, "lib:find_nip_object":184, "lib:heartbeat":187, "lib:init":190, "lib:load_me":194, "lib:log":197, "lib:modify:libraries":200, "lib:register_nip_function":202, "lib:shutdown":204, "lib:t2:dbg":610, "setprop-post:add":206, "setprop-post:del":208, "setprop-post:delete":210, "setprop-post:error":212, "setprop-post:nip":214, "setprop-post:nip-core":215, "setprop-post:sub":217 ]), \<MOVED:20080918-114107:Lib:NIP:EXT:record\>:([ "act-post:command":185, "lib:process_red":188, "lib:record_command_parse":192 ]) ]), 12:([ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>:([ "lib:decide:decide-exec":191, "lib:decide:decide-init":195, "lib:decide:decide-post":198 ]), \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>:([ "lib:delay:delay-exec":211, "lib:delay:delay-init":213 ]), \<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>:([ "lib:internal:internal-exec":216 ]), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:([ "lib:core:find-hook":218, "lib:core:register-hook":219, "lib:core:unregister-hook":220, "lib:modify:hooks":221, "setprop-post:hook":223 ]), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:([ "lib:calc_sighookpath":222, "lib:modify:signals":224, "setprop-post:signal":225 ]), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:([ "setprop-post:sigexecptr":226, "setprop-post:sigstream":227 ]), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:([ "setprop-post:decide":228 ]), \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>:([ "lib:mood:delay":229, "lib:mood:mood-exec":230, "lib:mood:mood-init":231 ]), \<MOVED:20080918-114107:Lib:NIP:lib:anger\>:([ "lib:anger:mood":232, "lib:init":233 ]), \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>:([ "lib:commanding":234, "lib:core:add_command":235, "lib:core:sub_command":236, "react-post:evoke-dob%nip:core":237, "react-post:evoke-iob%nip:core":239 ]), \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:([ "act:eat%nip:core":238, "lib:done-post":240, "lib:eating:decide":241, "lib:eating:internal":242, "lib:eating:mood":244, "lib:handler:offer:eating":246, "lib:hook:init-post":248, "lib:init":250 ]), \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:([ "lib:behave":243, "lib:emoting:decide":245, "lib:handler:emoting:parse":247, "lib:handler:emoting:preparse":249, "lib:init":252 ]), \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>:([ "lib:freemoting:decide":251, "lib:handler_freemote":253 ]), \<MOVED:20080918-114107:Lib:NIP:lib:happiness\>:([ "lib:happiness:mood":254, "lib:init":255 ]), \<MOVED:20080918-114107:Lib:NIP:lib:musician\>:([ "lib:command:music:begin":256, "lib:command:music:end":257, "lib:init":258, "lib:musician:delay":259, "lib:musician:mood":261, "react-post:gesture-dob":263 ]), \<MOVED:20080918-114107:Lib:NIP:lib:offers\>:([ "lib:core:add_offer":260, "lib:core:sub_offer":262, "react-post:offer-who":264 ]), \<Lib:woe\>:([ "lib:getprop":265, "lib:list-folder":266, "lib:list_folder":267, "lib:objects":268, "lib:setprop":270 ]), \<MOVED:20080918-114107:Lib:NIP:lib:sadness\>:([ "lib:init":269, "lib:sadness:mood":271 ]), \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:([ "lib:act:sleep:state":272, "lib:handler:state:awake":273, "lib:handler:state:sleep":274, "lib:hook:init-post":275, "lib:sleeping:decide":277, "lib:sleeping:delay":279, "lib:sleeping:internal":281, "lib:sleeping:mood":282 ]), \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>:([ "lib:core:add_mood":276, "lib:core:sub_mood":278, "lib:init-post":280 ]), \<MOVED:20080918-114107:Lib:NIP:lib:omni-comm\>:([ "witness:evoke%omni-comm":283 ]), \<Lib:ascii\>:([ "lib:callback_parse":284, "lib:diff":285, "lib:forge_table":286, "lib:implode_diff":287, "lib:presolve":289, "lib:strip_skotos":290, "lib:strlen":291, "lib:table":292 ]), \<MOVED:20080918-114107:Lib:NIP:lib:delivery-area\>:([ "react:scan-dob%nip:core":288 ]) ]), 13:([ \<Lib:html\>:([ "lib:array_to_options":293, "lib:implode_diff":294, "lib:js_clear_default":295, "lib:js_tip":296, "lib:js_welcome":297, "lib:link":298, "lib:parse":299, "lib:parse_tags":300, "lib:table":301 ]) ]), 14:([ \<Lib:Assist:lib:assistlibs\>:([ "lib:create_tree":303, "lib:create_tree_output":305, "lib:create_tree_output_rec":307, "lib:create_tree_output_suf":310, "lib:create_tree_rec":313, "lib:doabort":315, "lib:doaddnote":318, "lib:doaddqueue":322, "lib:doassign":325, "lib:doassociate":328, "lib:doattach":332, "lib:dobackup":335, "lib:docalendar":338, "lib:docalendar_day":341, "lib:docalendar_new":345, "lib:docharobj":349, "lib:dochatfeed":353, "lib:dochathide":356, "lib:dochatshow":360, "lib:doclaim":363, "lib:docleanup":366, "lib:docreatesearchdb":369, "lib:docreatesearchdb_init":372, "lib:docreatestats":374, "lib:docron":376, "lib:docurrent":378, "lib:dodiscard":381, "lib:dodone":383, "lib:dofileassist":385, "lib:doflag":387, "lib:doflaglist":390, "lib:dofocus":393, "lib:doforget":395, "lib:dogetassist":398, "lib:dohelp":401, "lib:doinfo":404, "lib:doinit":407, "lib:dolink":409, "lib:dolistbyplayer":411, "lib:dolistwhat":413, "lib:dolock":415, "lib:dologin":418, "lib:dologon":420, "lib:donote":422, "lib:doonline":423, "lib:doopage":424, "lib:doopen":425, "lib:dopopup":426, "lib:doprefer":427, "lib:dopriority":428, "lib:doprivate":429, "lib:dopublic":430, "lib:doqueue":431, "lib:doqueuedesc":432, "lib:doqueueinfo":433, "lib:doqueuesme":434, "lib:dorecap":435, "lib:dorecent":436, "lib:dorelay":437, "lib:doremovequeue":438, "lib:dorename":439, "lib:doretrieve":441, "lib:doreturn":442, "lib:doschedule":443, "lib:dosearch":444, "lib:dosendemail":446, "lib:dosetassist":448, "lib:dosettype":450, "lib:doshift":452, "lib:doshortclosed":455, "lib:doshowall":457, "lib:doshowclosed":459, "lib:doslide":461, "lib:dostatbyqueue":462, "lib:dostats":463, "lib:dotransfer":464, "lib:dotree":465, "lib:dotwiki":466, "lib:dounlock":467, "lib:dowatch":468, "lib:searchdb_decode":469, "lib:searchdb_encode":470 ]), \<MOVED:20080918-114107:Lib:NIP:updates\>:([ "lib:update:1":302, "lib:update:10":304, "lib:update:11":306, "lib:update:12":308, "lib:update:13":311, "lib:update:14":314, "lib:update:15":316, "lib:update:16":319, "lib:update:17":323, "lib:update:18":326, "lib:update:19":329, "lib:update:2":333, "lib:update:20":336, "lib:update:21":339, "lib:update:22":342, "lib:update:23":346, "lib:update:24":350, "lib:update:25":354, "lib:update:26":357, "lib:update:27":361, "lib:update:28":364, "lib:update:29":367, "lib:update:3":370, "lib:update:30":373, "lib:update:31":375, "lib:update:32":377, "lib:update:33":379, "lib:update:34":382, "lib:update:35":384, "lib:update:36":386, "lib:update:37":388, "lib:update:38":391, "lib:update:39":394, "lib:update:4":396, "lib:update:40":399, "lib:update:41":402, "lib:update:42":405, "lib:update:43":408, "lib:update:44":410, "lib:update:5":412, "lib:update:6":414, "lib:update:7":416, "lib:update:8":419, "lib:update:9":421 ]) ]), 15:([ \<MOVED:20080918-114107:Lib:NIP:hooks:nip\>:([ "lib:nip:decide":309, "lib:nip:internal":312 ]), \<MOVED:20080918-114107:Lib:NIP:EXT:spawn\>:([ "lib:system":317, "setprop-post:appearance":320 ]), \<MOVED:20080918-114107:Lib:NIP:NCS\>:([ "lib:connect":321, "lib:disconnect":324, "lib:handle_extreq_update":327, "lib:help":330, "lib:load":334, "lib:ncs:handler":337, "lib:popup":340, "lib:purge":343, "lib:register_signature":347, "lib:request":351, "lib:request_identifier":355, "lib:request_status":358, "lib:request_update":362, "lib:request_where":365, "lib:restart":368 ]), \<MOVED:20080918-114107:Lib:NIP:hooks:room-cleaning\>:([ "lib:room-cleaning:decide":331 ]), \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>:([ "lib:handler:offer:trash":344, "lib:init":348, "lib:slay":352 ]), \<MOVED:20080918-114107:Lib:NIP:lib:spawn-control\>:([ "act:stop":359 ]) ]), 16:([ \<MOVED:20080918-114107:Lib:NIP:lib:delivery-object\>:([ "react:scan-dob%nip:core":371 ]), \<MOVED:20080918-114107:Lib:NIP:lib:killer\>:([ "lib:predator:decide":380 ]), \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>:([ "lib:handler:request-authority":389, "witness:enter-into%nip:core":392 ]), \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:([ "lib:handler:relations":397, "lib:query_relationship":400, "react:command-dob%nip-relations":403, "react:command-iob%nip-relations":406 ]), \<MOVED:20080918-114107:MGeneric:DB:StateDB\>:([ "lib:getstatedesc":417 ]), \<MOVED:20080918-114107:MGeneric:DB:Healing\>:([ "lib:showhealingtime":440 ]), \<MOVED:20080918-114107:MGeneric:DB:Death\>:([ "react:+resurrect-dob":454 ]), \<MOVED:20080918-114107:MGeneric:DB:General\>:([ "lib:aan":445, "lib:backuppreconvertedplayer":447, "lib:converttomgeneric":449, "lib:debugmessage":451, "lib:debugtitle":453, "lib:debugvalue":456, "lib:debugvalues":458, "lib:definenamespaces":460, "lib:reporterror":471, "lib:settattoolocation":474 ]), \<MOVED:20080918-114107:MGeneric:DB:Alteration\>:([ "lib:changedonceemit":473, "lib:cleardetaildescription":489 ]), \<MOVED:20080918-114107:Lib:NIP:API\>:([ "lib:area_trigger_rcontrol":472, "lib:deliver_for":475, "lib:die":476, "lib:enqueue_for_delivery":477, "lib:heartbeat_thread_running":479, "lib:purge_deliveries":480, "lib:purge_trash":481, "lib:resolve_meta_family_data":483, "lib:trigger_rcontrol":485 ]), \<MOVED:20080918-114107:Neoct:Staff:Verbs:+areport\>:([ "global:command":478 ]) ]), 17:([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:([ "lib:core:reply":482, "lib:family_resolve":484, "react-post:evoke-dob%nip:communicate":486, "react-post:evoke-iob%nip:communicate":487 ]), \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:([ "act:nip/die":488, "lib:handler:prey:defend":490, "lib:handler:prey:die":491, "lib:handler:prey:eaten":492, "lib:handler:start:prey":494, "lib:init":496 ]), \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:([ "act:eat%predator":493, "lib:act:predator:attack":495, "lib:handler:offer:eating":497, "lib:hook:init-post":498, "lib:predator:decide":500 ]), \<MOVED:20080918-114107:Lib:NIP:lib:spawn-traits\>:([ "lib:handler:start:traits":499, "lib:init":501 ]), \<MOVED:20080918-114107:MGeneric:Data:default:WoundDB\>:([ "lib:emits_deadlywound":502, "lib:emits_removebandage":504 ]), \<MOVED:20080918-114107:Lib:NIP:extra:snake\>:([ "act-desc:eat":503 ]), \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:([ "lib:doaddcatalog":505, "lib:doaddgroup":506, "lib:doaddwhat":507, "lib:doattach":508, "lib:docatalog":510, "lib:docreate":511, "lib:dodetach":512, "lib:dohelp":513, "lib:dolist":515, "lib:dolistgroups":516, "lib:dolistwhat":517, "lib:doremovecatalog":518, "lib:doremovegroup":520, "lib:doremovewhat":521 ]) ]), 18:([ \<Lib:args\>:([ "lib:parse_arg_mapping":509 ]), \<MOVED:20080918-114107:Neoct:Base:Actions:zthrow\>:([ "global-pre:action":514 ]), \<MOVED:20060501-050056:Lib:NIP:lib:act-interpreter\>:([ "lib:core:resolve_action":519 ]), \<Neoct:Staff:Actions:+see\>:([ "global:action":523, "lib:add":524, "lib:char_from_group":525, "lib:char_to_group":526, "lib:disband":528, "lib:get_group":529, "lib:group_add":530, "lib:group_list":531, "lib:group_sub":533, "lib:groups":535, "lib:list":536, "lib:off":539, "lib:on":541, "lib:recall":543, "lib:sub":544 ]) ]), 19:([ \<MOVED:20080918-114107:Lib:NIP:lib:wounding\>:([ "lib:wound":527 ]), \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "act-post:unwear":532, "act-post:wear":534, "act:heal":537, "lib:cleardescriptionscache":545, "lib:createcoveragetodetail":547, "lib:sethandedness":563, "setprop-post:alteration":574, "setprop-post:appearance":576, "setprop-post:bruise":578, "setprop-post:detailtocoverage":580, "setprop-post:disguised":582, "setprop-post:scar":584, "setprop-post:wound":586 ]), \<SLib:staff\>:([ "lib:general_who":538, "lib:general_who2":540, "lib:general_who_debug":542 ]), \<MOVED:20080918-114107:MGeneric:Data:default:Healing\>:([ "lib:emits_alreadytreated":546, "lib:emits_applybandage":548, "lib:emits_cannotbandage":549, "lib:emits_currentlyhealing":550, "lib:emits_detailnotwounded":552, "lib:emits_disconnecteddoctor":554, "lib:emits_disconnectedpatient":556, "lib:emits_feelingbetter":558, "lib:emits_finishedtreatmentsuccess":560, "lib:emits_movedaway":562, "lib:emits_noskill":565, "lib:emits_noskilllevel":567, "lib:emits_notwounded":568, "lib:emits_patientremovedbandage":569, "lib:emits_requiresbandages":571, "lib:emits_treatmentinfo":573 ]) ]), 20:([ \<Lib:follows\>:([ "lib:disable":551, "lib:enable":553, "lib:free":555, "lib:release":557, "lib:restrain":559, "lib:start":561, "lib:stop":564, "setprop-post:follow:uglyzwochack":566 ]) ]), 44:([ \<Lib:emitter\>:([ "lib:daemon":570, "lib:disable":572, "lib:emit":575, "lib:enable":577, "lib:init_popup":579, "lib:linkdie":581, "lib:login":583, "lib:logout":585, "lib:store_popup":587, "lib:tweak_pop":588, "react:enter-from%emitter":589, "react:enter-into%emitter":590, "react:teleport%emitter":591 ]) ]), 225:([ \<Ironclaw:Lib:Skills:Music\>:([ "lib:clear-mapping":592, "lib:find-instrument":593, "lib:find-leader":594, "lib:get-groupstatus":595, "lib:get-members":596, "lib:get-quality":597, "lib:get-starttime":598, "lib:get-style":599, "lib:get-tools":600, "lib:get-verbs":601, "lib:play-group":602, "lib:play-helpfile":603, "lib:play-post":604, "lib:play-pre":605, "lib:play-solo":606, "lib:play-stylefile":607, "lib:play_replace_strings":608, "lib:set-data":609 ]) ]) ])
      </Core:Property>
      <Core:Property property="meriadoc">
         ([ 0:([ 1:([ "actions":([  ]), "generated":1379322118, "libraries":([  ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Preparation script for instruments." ]), "fix":(\{ ([ "content":"TRUE;" ]), ([ "content":"FALSE;" ]) \}) ]), "socials":([  ]) ]), 2:([ "actions":([  ]), "generated":1379322119, "libraries":([ \<Lib:common\>:([ "distant_emit":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Reaction script that triggers the instrument effect whenever someone blows it." ]) ]), "socials":([  ]) ]), 3:([ "actions":([  ]), "generated":1379322125, "libraries":([ \<Lib:common\>:([ "distant_emit":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"\\"Practice\\" version of the exact same script as the blow-dob script. This one reaches about one step away from the actor." ]) ]), "socials":([  ]) ]), 4:([ "actions":([  ]), "generated":1379322127, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-27", "Zwoc" \}), "content":"Added removal of common initial words like 'the', 'a' etc." ]) \}) ]) ]), "d":([ "content":"Rumour handler; this script is called whenever someone asks an NPC (with the 'rumours' library implemented) about *something*. It will look in the specified data object ('nip:trait:rumour:database') for the topic in question, or say \\"(S)He doesn't know anything about that.\\" if it was not found." ]) ]), "socials":([  ]) ]), 5:([ "actions":([  ]), "generated":1379322131, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:([ "heartbeat":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:1, \<Data:NIP:NCS\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-04-03", "Zwoc" \}), "content":"Added check for \\"udat:possessed\\" as well, to avoid confusion in testing nippers." ]) \}) ]) ]), "d":([ "content":"Does the appropriate enter/connect stuff." ]) ]), "socials":([  ]) ]), 6:([ "actions":([  ]), "generated":1379322132, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Do initialization" ]) ]), "socials":([  ]) ]), 7:([ "actions":([  ]), "generated":1379322133, "libraries":([  ]), "objects":([ \<Data:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"Do the actual resource-control code" ]) ]), "socials":([  ]) ]), 8:([ "actions":([  ]), "generated":1379322141, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Host enter-a-room debug script." ]) ]), "socials":([  ]) ]), 9:([ "actions":([  ]), "generated":1379322142, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Host teleport-to-a-room debug script." ]) ]), "socials":([  ]) ]), 10:([ "actions":([  ]), "generated":1379322143, "libraries":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:([ "abort":1, "calc_schedule":1, "start_emit":1 ]) ]), "objects":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:1 ]), "options":([ "d":([ "content":"EmitApp command." ]) ]), "socials":([  ]) ]), 11:([ "actions":([  ]), "generated":1379322143, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"[DEPRECATED; DO NOT USE] Squint act script; used by the jeweler loupes to get examine descriptions on jewelry by simply squinting whilst wearing a loupe." ]) ]), "socials":([  ]) ]), 12:([ "actions":([  ]), "generated":1379322144, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Abort a scheduled execution." ]) ]), "socials":([  ]) ]), 13:([ "actions":([  ]), "generated":1379322144, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:bedit\>:1 ]), "options":([ "d":([ "content":"Behavior editing tool." ]) ]), "socials":([  ]) ]), 14:([ "actions":([  ]), "generated":1379322144, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Turn \$what into \\"a \$what\\" or \\"an \$what\\", depending on the first letter." ]) ]), "socials":([  ]) ]), 15:([ "actions":([  ]), "generated":1379322145, "libraries":([  ]), "objects":([ \<SID:TheVault\>:1 ]), "options":([ "d":([ "content":"This is the action script for the create_configuration page." ]) ]), "socials":([  ]) ]), 16:([ "actions":([  ]), "generated":1379322145, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:comm\>:1 ]), "options":([ "d":([ "content":"Comm family editing tool." ]) ]), "socials":([  ]) ]), 17:([ "actions":([  ]), "generated":1379322146, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the action script for the welcome page. All action scripts should return the next \\"page\\"." ]) ]), "socials":([  ]) ]), 18:([ "actions":([  ]), "generated":1379322146, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Connect two NPC's with each other in a tracked recording session." ]), "syntax":([ "content":"\\"+nip \<NPC#1\> and \<NPC#2\> \\\\\\"connect ID [BID]\\\\\\" -- Connect \<NPC#1\> and \<NPC#2\> with each other in a recording, using the common track vector \<ID\>. Optionally use a specific behavior ID. Otherwise ID will be used as BID. Read about this on troll.\\";" ]) ]), "socials":([  ]) ]), 19:([ "actions":([  ]), "generated":1379322146, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Add a page (\$message) to \$user using the +opage format. Pages are appended equally, also." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 20:([ "actions":([  ]), "generated":1379322147, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Calculate schedule for emit based on \$(iob:words)." ]) ]), "socials":([  ]) ]), 21:([ "actions":([  ]), "generated":1379322148, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Walk the HVL (hierarchical value list) and return all the values in an array." ]) ]), "socials":([  ]) ]), 22:([ "actions":([  ]), "generated":1379322147, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This function is used to destroy the heartbeat thread in a CNPC. (synonym for +nip [target] \\"sig term\\")" ]) ]), "socials":([  ]) ]), 23:([ "actions":([  ]), "generated":1379322147, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"This script is used to add (attach) a property to an array, without causing duplicates and without disturbing the order of the array." ]) ]), "socials":([  ]) ]), 24:([ "actions":([  ]), "generated":1379322148, "libraries":([  ]), "objects":([ \<Data:DB:EmitAppTools\>:1 ]), "options":([ "d":([ "content":"Print the configuration tools, as defined in the data object Data:DB:EmitAppTools" ]) ]), "socials":([  ]) ]), 25:([ "actions":([  ]), "generated":1379322149, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Walk the HVL (hierarchical value list) and return TRUE if any element is TRUE." ]) ]), "socials":([  ]) ]), 26:([ "actions":([  ]), "generated":1379322148, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Disconnect from the recording setting." ]), "syntax":([ "content":"\\"+nip \<subject\> \\\\\\"disconnect\\\\\\" -- If no subject given, the possessed body of the actor is used.\\";" ]) ]), "socials":([  ]) ]), 27:([ "actions":([  ]), "generated":1379322148, "libraries":([ \<Lib:common\>:([ "get_name":1, "wholist":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "author":([ "content":"Jess Brickner" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog + author/since entries." ]) \}) ]) ]), "d":([ "content":"Return a list of bodies" ]), "since":([ "content":"December 15th, 2003" ]), "state":([ "content":"STABLE" ]) ]), "socials":([  ]) ]), 28:([ "actions":([  ]), "generated":1379322149, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"An input-box for selections." ]) ]), "socials":([  ]) ]), 29:([ "actions":([  ]), "generated":1379322150, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Find the least specific value set in the HVL." ]) ]), "socials":([  ]) ]), 30:([ "actions":([  ]), "generated":1379322149, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:hints\>:1 ]), "options":([ "d":([ "content":"Behavior editing tool." ]) ]), "socials":([  ]) ]), 31:([ "actions":([  ]), "generated":1379322149, "libraries":([ \<Lib:common\>:([ "wholist":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Broadcast to everyone online." ]) ]), "socials":([  ]) ]), 32:([ "actions":([  ]), "generated":1379322150, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is used to generate the code for the dialog box \<DIV\>." ]) ]), "socials":([  ]) ]), 33:([ "actions":([  ]), "generated":1379322151, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Walk the HVL and return the maximum non-nil value found." ]) ]), "socials":([  ]) ]), 34:([ "actions":([  ]), "generated":1379322150, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"List the libraries/signals/hooks loaded in an NPC." ]), "syntax":([ "content":"+nip \<CNPC\> \\"list\\"" ]) ]), "socials":([  ]) ]), 35:([ "actions":([  ]), "generated":1379322150, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Jess Brickner" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Toggles page:busy status." ]) ]), "socials":([  ]) ]), 36:([ "actions":([  ]), "generated":1379322152, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The act-post:enter script for the mounting system (NIP), which handles movement through rooms." ]) ]), "socials":([  ]) ]), 37:([ "actions":([  ]), "generated":1379322152, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Walk the HVL and return the minimum non-nil value found." ]) ]), "socials":([  ]) ]), 38:([ "actions":([  ]), "generated":1379322151, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"This function is used to trigger the heartbeat thread in a CNPC." ]) ]), "socials":([  ]) ]), 39:([ "actions":([  ]), "generated":1379322151, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Convert char \$ch to a hexadecimal value." ]) ]), "socials":([  ]) ]), 40:([ "actions":([  ]), "generated":1379322152, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"An input-box for text." ]) ]), "socials":([  ]) ]), 41:([ "actions":([  ]), "generated":1379322153, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Approach script, inherited whenever someone mounts an NPC, which deals with movement issues within rooms." ]) ]), "socials":([  ]) ]), 42:([ "actions":([  ]), "generated":1379322153, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Find the most specific value set in the HVL." ]) ]), "socials":([  ]) ]), 43:([ "actions":([  ]), "generated":1379322152, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Simple handler for the presents feature." ]) ]), "socials":([  ]) ]), 44:([ "actions":([  ]), "generated":1379322152, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Converts seconds into human readable output" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 45:([ "actions":([  ]), "generated":1379322153, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Initialize the values used to determine the page to view, etc." ]) ]), "socials":([  ]) ]), 46:([ "actions":([  ]), "generated":1379322154, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Script for dismounting NPC's." ]) ]), "socials":([  ]) ]), 47:([ "actions":([  ]), "generated":1379322154, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Walk the HVL and return the product of non-nil values." ]) ]), "socials":([  ]) ]), 48:([ "actions":([  ]), "generated":1379322153, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>:1 ]), "options":([ "d":([ "content":"This is the 'recording' script, used to teach CNPC's how to act." ]), "syntax":([ "content":"\\"record [start\|stop\|switch] [Woe:for:behavior:DB] mood/condition\\"" ]) ]), "socials":([  ]) ]), 49:([ "actions":([  ]), "generated":1379322153, "libraries":([  ]), "objects":([ \<Lib:common\>:1, \<Neoct:Data:Types:Object\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Create an object using a pre-existing template." ]) ]), "socials":([  ]) ]), 50:([ "actions":([  ]), "generated":1379322154, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Remove the contents of an element if it is defaulty." ]) ]), "socials":([  ]) ]), 51:([ "actions":([ \<MOVED:20080918-114107:Neoct:IC:Actions:leave\>:1 ]), "generated":1379322155, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Leave script, inherited whenever someone mounts an NPC, which deals with movement issues within rooms." ]) ]), "socials":([  ]) ]), 52:([ "actions":([  ]), "generated":1379322155, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Walk the HVL and return the sum of non-nil values." ]) ]), "socials":([  ]) ]), 53:([ "actions":([  ]), "generated":1379322154, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "d":([ "content":"This function is used to permanently add a function to the +nip extensions." ]), "syntax":([ "content":"\\"register function_name in_object\\"" ]) ]), "socials":([  ]) ]), 54:([ "actions":([  ]), "generated":1379322154, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]), ([ "arguments":(\{ "2010-02-08", "Zwoc" \}), "content":"Changed global vars to local vars. This should be done everywhere!" ]) \}) ]) ]), "d":([ "content":"Gets a property from the game database" ]) ]), "socials":([  ]) ]), 55:([ "actions":([  ]), "generated":1379322155, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Add a JavaScript tip to an input-box using show_tip() and hide_tip()." ]) ]), "socials":([  ]) ]), 56:([ "actions":([  ]), "generated":1379322156, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<Lib:chatlib\>:([ "log":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Neoct:Staff:Actions:+return\>:1, \<Lib:chatlib\>:1 ]), "options":([ "d":([ "content":"Transfer a target to his or her room, or optionally other specified places." ]) ]), "socials":([  ]) ]), 57:([ "actions":([ \<Neoct:Stances:UrStanceAction\>:1 ]), "generated":1379322156, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Stance handler for mounted NPC's. This script ensures stances are displayed correctly." ]) ]), "socials":([  ]) ]), 58:([ "actions":([  ]), "generated":1379322155, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:relations\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "May 15 13:45, 2006", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Relations rule editing tool." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"May 15 13:45, 2006" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 59:([ "actions":([  ]), "generated":1229160896, "libraries":([ \<Lib:common\>:([ "denied":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Checks if account is on the denied list" ]) ]), "socials":([  ]) ]), 60:([ "actions":([  ]), "generated":1379322156, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Create a welcome box, unless it is specified to not be displayed in \$body." ]) ]), "socials":([  ]) ]), 61:([ "actions":([  ]), "generated":1379322156, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Set up a scene with external targets." ]) ]), "socials":([  ]) ]), 62:([ "actions":([  ]), "generated":1379322155, "libraries":([ \<Lib:common\>:([ "distant":1, "distant_emit":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"[DEPRECATED; Use common::distant_emit()!]" ]) ]), "socials":([  ]) ]), 63:([ "actions":([  ]), "generated":1379322157, "libraries":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:([ "js_clear_default":1, "js_tip":1 ]) ]), "objects":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:1 ]), "options":([ "d":([ "content":"Create a list of configurations in \$body." ]) ]), "socials":([  ]) ]), 64:([ "actions":([  ]), "generated":1379322157, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1, \<MOVED:20080918-114107:Lib:NIP:updates\>:1 ]), "options":([ "d":([ "content":"This function is used to set up a CNPC library to use the NIP core functionality. It is called through +nip." ]), "syntax":([ "content":"\\"set Woe:for:object\\"" ]) ]), "socials":([  ]) ]), 65:([ "actions":([  ]), "generated":1379322156, "libraries":([ \<Lib:common\>:([ "distant_emit":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added delay to loop." ]) \}) ]) ]), "d":([ "content":"Send an emit from a center and outwards in a circular fashion, including strong and faint sound versions." ]), "since":([ "content":"2001" ]), "state":([ "content":"STABLE" ]) ]), "socials":([  ]) ]), 66:([ "actions":([  ]), "generated":1379322158, "libraries":([ \<Lib:common\>:([ "convsecs":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Initiate the emit." ]) ]), "socials":([  ]) ]), 67:([ "actions":([  ]), "generated":1379322158, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Send a signal to the heartbeat thread of a CNPC." ]), "syntax":([ "content":"+nip \<CNPC\> \\"sig \<SIGNAL\>\\"" ]) ]), "socials":([  ]) ]), 68:([ "actions":([  ]), "generated":1379322157, "libraries":([ \<Lib:common\>:([ "exits":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Finds and returns an array of NRefs of exits in a specific room. Optional is also to 'spread' the check several steps away from the room." ]) ]), "socials":([  ]) ]), 69:([ "actions":([  ]), "generated":1379322159, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"List all executions of a specific configuration." ]) ]), "socials":([  ]) ]), 70:([ "actions":([  ]), "generated":1379322160, "libraries":([ \<Lib:chatlib\>:([ "feed":1, "send_msg":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<SkotOS:Chatlines\>:1 ]), "options":([ "d":([ "content":"This script distributes the various function calls to the chat channels, such as the standard 'on', 'off', 'recall' commands." ]), "note":(\{ ([ "content":"Message sent, but you have this channel turned off.\\");" ]) \}), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 71:([ "actions":([  ]), "generated":1379322159, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the 'tracking' script, used to enable/disable track record vectors." ]), "syntax":([ "content":"\\"tracking\\"" ]) ]), "socials":([  ]) ]), 72:([ "actions":([  ]), "generated":1229160900, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"[DEPRECATED; Use internal Arr() function!] Explicitly (re)declare a variable as an array." ]) ]), "socials":([  ]) ]), 73:([ "actions":([  ]), "generated":1379322161, "libraries":([ \<Lib:common\>:([ "wholist":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"The feeder makes sure every logged on chatter receives each evoke or emote on all chat lines." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 74:([ "actions":([  ]), "generated":1379322160, "libraries":([ \<Lib:ascii\>:([ "table":1 ]) ]), "objects":([ \<Lib:ascii\>:1 ]), "options":([ "d":([ "content":"This function lists settings in the nipper." ]) ]), "socials":([  ]) ]), 75:([ "actions":([  ]), "generated":1379322158, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Extract a name from an object without using briefs or Describe()." ]) ]), "socials":([  ]) ]), 76:([ "actions":([  ]), "generated":1379322164, "libraries":([ \<Lib:common\>:([ "denied":1, "lookup":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-19", "Zwoc" \}), "content":"Removed common::denied usage." ]) \}) ]) ]), "d":([ "content":"Merry version of +setprop." ]) ]), "socials":([  ]) ]), 77:([ "actions":([  ]), "generated":1379322162, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1, "log":1 ]) ]), "objects":([ \<Lib:chatlib\>:1 ]), "options":([ "d":([ "content":"Get the preferred name for a specific object on the chatline." ]) ]), "socials":([  ]) ]), 78:([ "actions":([  ]), "generated":1379322161, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "d":([ "content":"NPC update script." ]) ]), "socials":([  ]) ]), 79:([ "actions":([  ]), "generated":1379322159, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Create a list of IP numbers and return it as an array." ]) ]), "socials":([  ]) ]), 80:([ "actions":([  ]), "generated":1379322165, "libraries":([ \<Neoct:Staff:Actions:+setp\>:([ "escape_arguments":1 ]) ]), "objects":([ \<Neoct:Staff:Actions:+setp\>:1 ]), "options":([ "d":([ "content":"Set a series of variables based on the string \$query, allowing escaping." ]) ]), "socials":([  ]) ]), 81:([ "actions":([  ]), "generated":1379322163, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Ignore someone on a chatline." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 82:([ "actions":([  ]), "generated":1379322160, "libraries":([ \<SLib:common\>:([ "is_badname":1 ]) ]), "objects":([ \<SLib:common\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Sep 26 14:33, 2005", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Is \$name bad? (Wrapper for SLib:common/is_badname.)" ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Sep 26 14:33, 2005" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 83:([ "actions":([  ]), "generated":1379322166, "libraries":([ \<Neoct:Staff:Actions:+setp\>:([ "tmp_fun":1 ]) ]), "objects":([ \<Neoct:Staff:Actions:+setp\>:1 ]), "options":([ "d":([ "content":"Merry Evaluator." ]) ]), "socials":([  ]) ]), 84:([ "actions":([  ]), "generated":1379322164, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Simple script that returns TRUE if \$body is listening to \$channel. If \$body is nil, \$actor is used." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 85:([ "actions":([  ]), "generated":1379322161, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Check to see if \$value is numeric or not." ]) ]), "socials":([  ]) ]), 86:([ "actions":([  ]), "generated":1379322167, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Extract multiple properties from a given object and a given \\"search queue\\" and return these as mapped arrays (like ([ \\"prop\\" : \\"value\\", \\"prop2\\" : \\"value2\\", etc. ])" ]) ]), "socials":([  ]) ]), 87:([ "actions":([  ]), "generated":1379322165, "libraries":([ \<Lib:chatlib\>:([ "chat":1 ]) ]), "objects":([ \<Lib:chatlib\>:1 ]), "options":([ "d":([ "content":"Inherit this in any script to add LFC functionality. Set the property (export:)#id# to a short string, to specify the identifier for the hook." ]) ]), "socials":([  ]) ]), 88:([ "actions":([  ]), "generated":1379322162, "libraries":([ \<Lib:LPCompat\>:([ "determine_user":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:LPCompat\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-02", "Zwoc" \}), "content":"Modified lookup to use central code rather than call SLib:common version." ]) \}) ]) ]), "d":([ "content":"Lookup a character \$name. If \$possessed is set, the functionality is identical to that of Lib:LPCompat/determine_user." ]), "since":([ "content":"2002" ]) ]), "socials":([  ]) ]), 89:([ "actions":([  ]), "generated":1379322168, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is used to add an object to the presents mapping \\"nip:trait:present:objects\\". Each object has an array of words that will 'trigger' the offering of the particular object." ]) ]), "socials":([  ]) ]), 90:([ "actions":([  ]), "generated":1379322168, "libraries":([ \<Neoct:Staff:Actions:+setp\>:([ "extract_props":1, "propset2":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Neoct:Staff:Actions:+setp\>:1 ]), "options":([ "d":([ "content":"Property set script for +setp(rop)." ]) ]), "socials":([  ]) ]), 91:([ "actions":([  ]), "generated":1379322166, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Stop listening to a specific chatlib channel." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 92:([ "actions":([  ]), "generated":1379322163, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]), ([ "arguments":(\{ "2006-07-24", "Zwoc" \}), "content":"Clean-up." ]) \}) ]) ]), "d":([ "content":"Turn a numeric value (\$val) into a string, and return with leading zero(es) (\$lzs #)." ]) ]), "socials":([  ]) ]), 93:([ "actions":([  ]), "generated":1379322169, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is used to remove an object from the presents mapping \\"nip:trait:present:objects\\"." ]) ]), "socials":([  ]) ]), 94:([ "actions":([  ]), "generated":1379322169, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<Neoct:Staff:Actions:+setp\>:([ "escape_arguments":1, "eval":1, "extract_props":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Neoct:Staff:Actions:+setp\>:1, \<Data:DB:spb\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Apr 26 2006 17:00", "Zwoc" \}), "content":"Added catching of errors when setting a property. The error is emitted to the actor without the full trace output." ]) \}) ]) ]), "d":([ "content":"Property set script for +setp(rop). (v2.0)" ]) ]), "socials":([  ]) ]), 95:([ "actions":([  ]), "generated":1379322167, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Start listening to a specific chatlib channel." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 96:([ "actions":([  ]), "generated":1379322164, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"'MORE' system command." ]) ]), "socials":([  ]) ]), 97:([ "actions":([  ]), "generated":1379322170, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is part of the core of the ask \<npc\> for \<item\> functionality." ]) ]), "socials":([  ]) ]), 98:([ "actions":([  ]), "generated":1379322168, "libraries":([ \<Lib:common\>:([ "get_name":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Set appearance preference for a channel. (secure)" ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 99:([ "actions":([  ]), "generated":1379322165, "libraries":([ \<Lib:common\>:([ "munge":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "author":([ "content":"???" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Applies sort position from array A to array B" ]), "required":([ "section":([  ]) ]), "since":([ "content":"???" ]) ]), "socials":([  ]) ]), 100:([ "actions":([  ]), "generated":1379322171, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:([ "presents_extension_allow":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:1 ]), "options":([ "d":([ "content":"This script is part of the core of the ask \<npc\> for \<item\> functionality." ]) ]), "socials":([  ]) ]), 101:([ "actions":([  ]), "generated":1379322169, "libraries":([ \<Lib:woe\>:([ "list-folder":1 ]) ]), "objects":([ \<Lib:woe\>:1 ]), "options":([ "d":([ "content":"Purge a body (remove it from all chatlines)." ]) ]), "socials":([  ]) ]), 102:([ "actions":([  ]), "generated":1379322166, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Parse a raw verb \$line and produce a word-list (\$raw_words) and an evoke (\$raw_evoke), if applicable." ]), "since":([ "content":"2004" ]), "state":([ "content":"STABLE" ]) ]), "socials":([  ]) ]), 103:([ "actions":([  ]), "generated":1379322172, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Update the covered mapping (add)." ]) ]), "socials":([  ]) ]), 104:([ "actions":([  ]), "generated":1379322170, "libraries":([ \<Lib:common\>:([ "more":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Recall the past few lines of a channel." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 105:([ "actions":([  ]), "generated":1379322167, "libraries":([ \<Lib:common\>:([ "propsearch":1, "wildcard":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-07-12", "Orcsuit" \}), "content":"Function placed in common::, and" ]) \}) ]) ]), "d":([ "content":"Extract multiple properties from a given object and a given" ]), "since":([ "content":"July 21, 2006" ]) ]), "socials":([  ]) ]), 106:([ "actions":([  ]), "generated":1379322173, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Update the covered mapping (add)." ]) ]), "socials":([  ]) ]), 107:([ "actions":([  ]), "generated":1379322171, "libraries":([  ]), "objects":([ \<Data:info\>:1 ]), "options":([ "d":([ "content":"The relay_chat script for the chatlib." ]) ]), "socials":([  ]) ]), 108:([ "actions":([  ]), "generated":1379322168, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Recursively query for the next object (or \$which, if set) in the UrChain." ]), "since":([ "content":"Sun, 06 Mar 2005" ]), "state":([ "content":"STABLE" ]) ]), "socials":([  ]) ]), 109:([ "actions":([  ]), "generated":1379322174, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Update the covered mapping (sub)." ]) ]), "socials":([  ]) ]), 110:([ "actions":([  ]), "generated":1379322172, "libraries":([ \<Lib:common\>:([ "wholist":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Handle channel WHO requests over cross-game." ]) ]), "socials":([  ]) ]), 111:([ "actions":([  ]), "generated":1379322169, "libraries":([  ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"[DEPRECATED FUNCTION; DO NOT USE] Send a random emit to an environment, and (optionally) an actor/target." ]) ]), "socials":([  ]) ]), 112:([ "actions":([  ]), "generated":1379322175, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Update the covered mapping (sub)." ]) ]), "socials":([  ]) ]), 113:([ "actions":([  ]), "generated":1379322176, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Clean a float currency value (\$value) and return string result." ]) ]), "socials":([  ]) ]), 114:([ "actions":([  ]), "generated":1379322173, "libraries":([  ]), "objects":([ \<Data:info\>:1 ]), "options":([ "d":([ "content":"Get a who-listing request." ]) ]), "socials":([  ]) ]), 115:([ "actions":([  ]), "generated":1379322170, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"DEPRECATED FUNCTION; DO NOT USE" ]) ]), "socials":([  ]) ]), 116:([ "actions":([  ]), "generated":1379322176, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<MOVED:20080918-114107:Lib:NIP:API\>:([ "purge_deliveries":1 ]) ]), "objects":([ \<Lib:common\>:1, \<MOVED:20080918-114107:Lib:NIP:API\>:1 ]), "options":([ "d":([ "content":"This script will accept any items that are addressed to someone." ]) ]), "socials":([  ]) ]), 117:([ "actions":([  ]), "generated":1379322177, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:([ "core_clean_currency":1, "core_trading_query_assets":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:1 ]), "options":([ "d":([ "content":"Deduct money from \$actor, based on a specific CDO (cash data object)." ]) ]), "socials":([  ]) ]), 118:([ "actions":([  ]), "generated":1379322174, "libraries":([ \<Lib:chatlib\>:([ "chat":1 ]) ]), "objects":([ \<Lib:chatlib\>:1 ]), "options":([ "d":([ "content":"Send \$message to \$line (from \$actor, or, if \$system is set (TRUE), from the system itself)." ]) ]), "socials":([  ]) ]), 119:([ "actions":([  ]), "generated":1379322171, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Generate a string of characters defined by \$what of size \$size and return the result." ]) ]), "socials":([  ]) ]), 120:([ "actions":([  ]), "generated":1379322177, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script initializes couriers and adds the object NPC:misc:scroll to the list of distributed items. It will also add lib:handler:offer:addressed to the offers chain." ]) ]), "socials":([  ]) ]), 121:([ "actions":([  ]), "generated":1379322178, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Query an object on their assets, based on a specific CDO (cash data object)." ]), "note":(\{ ([ "content":"" ]) \}) ]), "socials":([  ]) ]), 122:([ "actions":([  ]), "generated":1379322175, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Unignore someone on a chatline." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 123:([ "actions":([  ]), "generated":1379322172, "libraries":([ \<Lib:common\>:([ "replace_strings":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Replace strings with locked replacement (for consistency) so that for instance \\"north to south and south to north\\" will function properly." ]) ]), "socials":([  ]) ]), 124:([ "actions":([  ]), "generated":1379322178, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Make sure anyone entering the room is taken into account for possible queued deliveries." ]) ]), "socials":([  ]) ]), 125:([ "actions":([  ]), "generated":1379322180, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Close a secret door automatically after a period of time." ]) ]), "socials":([  ]) ]), 126:([ "actions":([  ]), "generated":1379322179, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Extended ask response, which checks for a 'item list' object." ]) ]), "socials":([  ]) ]), 127:([ "actions":([  ]), "generated":1379322176, "libraries":([ \<Lib:common\>:([ "wholist":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:common\>:1, \<SkotOS:Chatlines\>:1 ]), "options":([ "d":([ "content":"Display who is listening on a channel, limited to \\"Online\\" and \\"Idle/Away\\"." ]) ]), "socials":([  ]) ]), 128:([ "actions":([  ]), "generated":1379322173, "libraries":([ \<Lib:common\>:([ "restricted":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Checks if account is on the resticted list." ]) ]), "socials":([  ]) ]), 129:([ "actions":([  ]), "generated":1379322179, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Make sure anyone teleporting into the room is taken into account for possible queued deliveries." ]) ]), "socials":([  ]) ]), 130:([ "actions":([ \<Neoct:Trading:Actions:offer\>:1 ]), "generated":1379322180, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:([ "core_clean_currency":1, "core_trading_query_assets":1 ]), \<Lib:ascii\>:([ "table":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:1, \<Lib:ascii\>:1 ]), "options":([ "d":([ "content":"Replacement for the \\"presents\\" lib 'ask-for' handler, this script will take into account cost of item. The ability to hand out \\"free\\" things is lost, however, and a customized merge of this and the presents v. is required in order to implement such." ]) ]), "socials":([  ]) ]), 131:([ "actions":([  ]), "generated":1379322177, "libraries":([  ]), "objects":([ \<UserAPI:UDatD\>:1, \<SkotOS:Chatlines\>:1 ]), "options":([ "d":([ "content":"Display who is listening on a channel." ]), "revision":([ "content":"this.revision;" ]) ]), "socials":([  ]) ]), 132:([ "actions":([  ]), "generated":1379322174, "libraries":([ \<Lib:common\>:([ "isnan":1, "reverse_ctime":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Turns a time/date string into seconds since 1/1/70" ]), "optional":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 133:([ "actions":([  ]), "generated":1379322181, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Read a price menu." ]) ]), "socials":([  ]) ]), 134:([ "actions":([  ]), "generated":1379322175, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Describe(\$objects[i]))) \{" ]) ]), "socials":([  ]) ]), 135:([ "actions":([  ]), "generated":1379322182, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Accept and pay for an object." ]) ]), "socials":([  ]) ]), 136:([ "actions":([  ]), "generated":1379322176, "libraries":([  ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"[DEPRECATED FUNCTION; USE explode(\<str\>, \\" \\") instead!] Convert a string value into an array of words. Input defaults to \$evoke unless \$split has been set. String array returned." ]) ]), "socials":([  ]) ]), 137:([ "actions":([  ]), "generated":1379322184, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Compute the amount of differences in one-two properties." ]) ]), "socials":([  ]) ]), 138:([ "actions":([  ]), "generated":1379322177, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Return a string representation of an array of strings (\$list) as \\"\<first\>, \<second\>, \<...\> and \<last\>\\"" ]) ]), "socials":([  ]) ]), 139:([ "actions":([  ]), "generated":1379322185, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Compare any two values with each other." ]), "note":(\{ ([ "content":"if the value type of \$left and \$right differs, the return value is automagically FALSE (not the same)" ]) \}) ]), "socials":([  ]) ]), 140:([ "actions":([  ]), "generated":1379322178, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Commit template object data and (if applicable) hand over to the commit_call." ]) ]), "socials":([  ]) ]), 141:([ "actions":([  ]), "generated":1379322186, "libraries":([  ]), "objects":([ \<SkotOS:Merry\>:1 ]), "options":([ "d":([ "content":"Displays the contents of a merry script." ]) ]), "socials":([  ]) ]), 142:([ "actions":([  ]), "generated":1379322179, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Find the top/roof environment for \$what." ]) ]), "socials":([  ]) ]), 143:([ "actions":([  ]), "generated":1379322187, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Get property on all objects in a list." ]) ]), "socials":([  ]) ]), 144:([ "actions":([  ]), "generated":1379322180, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Using basic rules, tweak an adverb; used e.g. in remain and appear." ]) ]), "socials":([  ]) ]), 145:([ "actions":([  ]), "generated":1379322188, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Perform all deliveries to \$recipient." ]), "note":(\{ ([ "content":"NO CHECKS ARE MADE to see if the NPC is in the same room as the \$recipient." ]) \}) ]), "socials":([  ]) ]), 146:([ "actions":([  ]), "generated":1379322188, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Get values of property on all objects in a list." ]) ]), "socials":([  ]) ]), 147:([ "actions":([  ]), "generated":1379322181, "libraries":([ \<Lib:common\>:([ "unadverb":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Unadverbian replaces adverbs used in particular socials with the adjective version." ]) ]), "socials":([  ]) ]), 148:([ "actions":([  ]), "generated":1379322189, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Create an array of all the properties of an object." ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 149:([ "actions":([  ]), "generated":1379322182, "libraries":([  ]), "objects":([ \<TextIF:Info\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Removed setting of \$who before returning. If your script called wholist without using the return-value,         you need to do so from here on." ]) \}) ]) ]), "d":([ "content":"Return a list of bodies currently online." ]) ]), "socials":([  ]) ]), 150:([ "actions":([  ]), "generated":1379322190, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Set property on all objects in list." ]) ]), "socials":([  ]) ]), 151:([ "actions":([  ]), "generated":1379322183, "libraries":([ \<Lib:common\>:([ "wildcard":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "author":([ "content":"James Sanders (orcsuit)" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-07-12", "Orcsuit" \}), "content":"Function created." ]) \}) ]) ]), "d":([ "content":"Determines if a string matches a pattern." ]) ]), "socials":([  ]) ]), 152:([ "actions":([  ]), "generated":1379322191, "libraries":([ \<Lib:property\>:([ "var_extract":1 ]) ]), "objects":([ \<Lib:property\>:1 ]), "options":([ "d":([ "content":"Extract (unmerge) a mapping into VARIABLE_indice variables." ]) ]), "socials":([  ]) ]), 153:([ "actions":([  ]), "generated":1379322184, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Shortens a word to specified length by doing \\"abc...def\\"" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 154:([ "actions":([  ]), "generated":1379322192, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This sig-hook script scans the room for volitional objects, and incrementally checks if they have a delivery waiting." ]) ]), "socials":([  ]) ]), 155:([ "actions":([  ]), "generated":1379322192, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Merge VARIABLE_indice arrays into mappings." ]) ]), "socials":([  ]) ]), 156:([ "actions":([  ]), "generated":1379322185, "libraries":([ \<Lib:ascii\>:([ "strlen":1 ]) ]), "objects":([ \<Lib:ascii\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"A word wrap function. Works best if you pass it through PRE() but you do not have to." ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 157:([ "actions":([  ]), "generated":1379322186, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Function that handles yelling across rooms." ]) ]), "socials":([  ]) ]), 158:([ "actions":([  ]), "generated":1379322187, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Witness a sense/hear action and evaluate the details:default:description:react-post:sense/hear construct and emit it." ]) ]), "socials":([  ]) ]), 159:([ "actions":([  ]), "generated":1379322188, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Witness a sense/smell action and evaluate the details:default:description:react-post:sense/smell construct and emit it." ]) ]), "socials":([  ]) ]), 160:([ "actions":([  ]), "generated":1379322196, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>:([ "find_nip_object":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>:1 ]), "options":([ "d":([ "content":"This script is executed once, when an NPC loads the 'mounting' library." ]) ]), "socials":([  ]) ]), 161:([ "actions":([  ]), "generated":1379322197, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script deals with mounting an NPC." ]) ]), "socials":([  ]) ]), 162:([ "actions":([  ]), "generated":1379322200, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Move out through a random exit." ]) ]), "socials":([  ]) ]), 163:([ "actions":([  ]), "generated":1379322201, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:([ "core_movement_exit":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:1 ]), "options":([ "d":([ "content":"This library will make an NPC leave the room on occasion, at random." ]) ]), "socials":([  ]) ]), 164:([ "actions":([  ]), "generated":1379322204, "libraries":([  ]), "objects":([ \<UserAPI:UDatD\>:1, \<Data:connection\>:1 ]), "options":([ "d":([ "content":"Disconnect (linkdie) connection trigger. This script is executed every time someone disconnects from the game." ]) ]), "socials":([  ]) ]), 165:([ "actions":([  ]), "generated":1379322205, "libraries":([  ]), "objects":([ \<Data:connection\>:1 ]), "options":([ "d":([ "content":"Login connection trigger. This script is executed every time someone logs into the game." ]) ]), "socials":([  ]) ]), 166:([ "actions":([  ]), "generated":1379322206, "libraries":([  ]), "objects":([ \<Data:connection\>:1 ]), "options":([ "d":([ "content":"Logout (quit) trigger. This script is executed every time someone quits the game." ]) ]), "socials":([  ]) ]), 167:([ "actions":([  ]), "generated":1379322207, "libraries":([ \<Lib:common\>:([ "wholist":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Gather hourly stats on playage." ]) ]), "socials":([  ]) ]), 168:([ "actions":([  ]), "generated":1229160948, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Create a merry stamp listing the merry functions." ]) ]), "socials":([  ]) ]), 169:([ "actions":([  ]), "generated":1379322208, "libraries":([  ]), "objects":([ \<Data:connection\>:1 ]), "options":([ "changelog":([ "section":([  ]) ]), "d":([ "content":"Delayed connection aspect. If the specified amount of hours have passed, execute the delayed connections list." ]) ]), "socials":([  ]) ]), 170:([ "actions":([  ]), "generated":1229160949, "libraries":([ \<Lib:common\>:([ "get_name":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Data:_raw:MERIADOC\>:1, \<Data:mstamp\>:1 ]), "options":([ "author":([ "content":"\\"+\$author+\\"\\\\n\\":\\"\\")+" ]), "d":([ "content":"%s\\\\n%s\\", \$dummy, \$description, \$dummy ) == 3)\{" ]), "email":([ "content":"\\"+\$email+\\"\\\\n\\";" ]) ]), "socials":([  ]) ]), 171:([ "actions":([  ]), "generated":1379322210, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"+lastseen -- Sets sessiontime and total which determine average amount of seconds a character stays connected per connection." ]) ]), "socials":([  ]) ]), 172:([ "actions":([  ]), "generated":1379322211, "libraries":([ \<Lib:connection\>:([ "see_notify":1 ]) ]), "objects":([ \<Lib:connection\>:1 ]), "options":([ "d":([ "content":"+see linkdie (DC) script." ]) ]), "socials":([  ]) ]), 173:([ "actions":([  ]), "generated":1379322212, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Timestamp linkdie (DC) script." ]) ]), "socials":([  ]) ]), 174:([ "actions":([  ]), "generated":1379322208, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is a simple shell for NPC ask features." ]) ]), "socials":([  ]) ]), 175:([ "actions":([  ]), "generated":1379322213, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dologon":1 ]) ]), "objects":([ \<Data:DB:assist:AssistGeneralDB\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Assist alert stuff." ]) ]), "socials":([  ]) ]), 176:([ "actions":([  ]), "generated":1379322215, "libraries":([  ]), "objects":([ \<Generic:UrMale\>:1, \<MOVED:20080918-114107:MGeneric:UrHuman\>:1, \<Generic:UrFemale\>:1 ]), "options":([ "d":([ "content":"conversion trigger to make everyone MGeneric." ]) ]), "socials":([  ]) ]), 177:([ "actions":([  ]), "generated":1379322212, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Spawned NPC control script." ]) ]), "socials":([  ]) ]), 178:([ "actions":([  ]), "generated":1379322213, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Internal script used by modify:libraries to add merry inheritance." ]) ]), "socials":([  ]) ]), 179:([ "actions":([  ]), "generated":1379322217, "libraries":([ \<Lib:chatlib\>:([ "chat":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Data:info\>:1, \<Data:DB:chat:new\>:1 ]), "options":([ "d":([ "content":"NewlieChat login script." ]) ]), "socials":([  ]) ]), 180:([ "actions":([  ]), "generated":1379322214, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Internal script used by modify:libraries to delete merry inheritance." ]) ]), "socials":([  ]) ]), 181:([ "actions":([  ]), "generated":1379322218, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"davog\\": \$actor.\\"base:maxfatigue:local\\" = \$fatigue + 0.2; break;" ]) ]), "socials":([  ]) ]), 182:([ "actions":([  ]), "generated":1379322215, "libraries":([  ]), "objects":([ \<Lib:NIP:updates\>:1 ]), "options":([ "d":([ "content":"System update script." ]), "state":([ "content":"= \$system )" ]) ]), "socials":([  ]) ]), 183:([ "actions":([  ]), "generated":1379322219, "libraries":([ \<Lib:chatlib\>:([ "chat":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Data:info\>:1 ]), "options":([ "d":([ "content":"NewlieChat login script." ]) ]), "socials":([  ]) ]), 184:([ "actions":([  ]), "generated":1379322216, "libraries":([  ]), "objects":([ \<Data:info\>:1, \<Data:NIP:system\>:1 ]), "options":([ "d":([ "content":"Find a NIP object by name, either absolute or generic" ]) ]), "socials":([  ]) ]), 185:([ "actions":([  ]), "generated":1379322218, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>:([ "record_command_parse":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>:1 ]), "options":([ "d":([ "content":"This script is inherited by a CNPC whenever it starts recording behavior." ]) ]), "socials":([  ]) ]), 186:([ "actions":([  ]), "generated":1379322220, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Account offline-page login-script." ]) ]), "socials":([  ]) ]), 187:([ "actions":([  ]), "generated":1379322217, "libraries":([ \<Lib:NIP:core\>:([ "calc_sighookpath":1, "core_exit_trigger":1 ]), \<MOVED:20080918-114107:Lib:NIP:API\>:([ "heartbeat_thread_running":1 ]), \<Lib:NIP:NCS\>:([ "connect":1, "disconnect":1 ]) ]), "objects":([ \<Lib:NIP:core\>:1, \<MOVED:20080918-114107:Lib:NIP:API\>:1, \<Lib:NIP:NCS\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Apr 14 2006 18:26", "Zwoc" \}), "content":"Added check to see if stabilizing became infinite, and aborted if so." ]) \}) ]) ]), "d":([ "content":"This script is the heartbeat thread. It runs 24/7 on all active CNPC's, and is responsible for everything spontaneous." ]), "summary":([ "content":"The heartbeat thread is built up of hooks and signals.  Each signal is executed according to its priority, and each hook in each  signal is called according to its named priority (pre, regular, exec, post)  specified in Data:NIP:system/executors.   More information on this topic, and how to write your own hooks/signals, is available  on builder's TWiki at:    http://troll.skotos.net/twiki/bin/view/Builders/NIPSystemReference" ]) ]), "socials":([  ]) ]), 188:([ "actions":([  ]), "generated":1379322219, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Feb 17 15:07, 2006", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Process Red request." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Feb 17 15:07, 2006" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 189:([ "actions":([  ]), "generated":1379322221, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Prisoner system check. If actor logs into a \\"cell\\" area, remove them from the supposed roster." ]) ]), "socials":([  ]) ]), 190:([ "actions":([  ]), "generated":1379322218, "libraries":([ \<Lib:NIP:NCS\>:([ "load":1 ]) ]), "objects":([ \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"This is the initialization script for the core \\"library\\"." ]) ]), "socials":([  ]) ]), 191:([ "actions":([  ]), "generated":1379322220, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2005-12-26", "Zwoc" \}), "content":"Modded reference from (nil) \$SIG_EXEC to 0x050." ]) \}) ]) ]), "d":([ "content":"This is the internal decide:decide-exec hook." ]) ]), "socials":([  ]) ]), 192:([ "actions":([  ]), "generated":1379322220, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Parse." ]) ]), "socials":([  ]) ]), 193:([ "actions":([  ]), "generated":1379322222, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Removes the old bilbo SG inherit" ]) ]), "socials":([  ]) ]), 194:([ "actions":([  ]), "generated":1379322219, "libraries":([ \<Lib:NIP:NCS\>:([ "load":1 ]) ]), "objects":([ \<Lib:NIP:core\>:1, \<Data:NIP:system\>:1, \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"This function is called by the 'set' +nip function to implement the core base in a new CNPC. The core base is used to load the rest of the core library into the system internally, using the core system itself." ]) ]), "socials":([  ]) ]), 195:([ "actions":([  ]), "generated":1379322221, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the internal decide:decide-init hook." ]) ]), "socials":([  ]) ]), 196:([ "actions":([  ]), "generated":1379322223, "libraries":([ \<Lib:connection\>:([ "see_notify":1 ]) ]), "objects":([ \<Lib:connection\>:1 ]), "options":([ "d":([ "content":"+see login script." ]) ]), "socials":([  ]) ]), 197:([ "actions":([  ]), "generated":1379322220, "libraries":([ \<Lib:chatlib\>:([ "chat":1 ]) ]), "objects":([ \<Lib:chatlib\>:1 ]), "options":([ "d":([ "content":"Extended LOG feature for the NIP system." ]) ]), "socials":([  ]) ]), 198:([ "actions":([  ]), "generated":1379322222, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the internal decide:decide-post hook." ]) ]), "socials":([  ]) ]), 199:([ "actions":([  ]), "generated":1379322225, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Set timestamp in \$actor." ]) ]), "socials":([  ]) ]), 200:([ "actions":([  ]), "generated":1379322221, "libraries":([ \<Lib:common\>:([ "arr_attach":1 ]), \<Lib:NIP:core\>:([ "find_nip_object":1, "init":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:NIP:core\>:1 ]), "options":([ "author":([ "content":"Kalle Alm," ]), "d":([ "content":"The libraries modifier is executed by the setprop trigger and is used to add/remove CNPC libraries." ]) ]), "socials":([  ]) ]), 201:([ "actions":([  ]), "generated":1379322226, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"+lastseen -- Sets sessiontime and total which determine average amount of seconds a character stays connected per connection." ]) ]), "socials":([  ]) ]), 202:([ "actions":([  ]), "generated":1379322222, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1, \<Data:NIP:functions\>:1 ]), "options":([ "d":([ "content":"This function is (should be) used to add merry functions to the Data:NIP:functions registry. These functions are used by +nip to control and/or configure CNPC bodies and/or libraries." ]) ]), "socials":([  ]) ]), 203:([ "actions":([  ]), "generated":1379322227, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Prisoner system check. If actor logs out of a \\"cell\\" area, add them to the supposed roster." ]) ]), "socials":([  ]) ]), 204:([ "actions":([  ]), "generated":1379322223, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Shutdown command (compatible with resource-control)." ]) ]), "socials":([  ]) ]), 205:([ "actions":([  ]), "generated":1379322228, "libraries":([ \<Lib:connection\>:([ "see_notify":1 ]) ]), "objects":([ \<Lib:connection\>:1 ]), "options":([ "d":([ "content":"+see quit script." ]) ]), "socials":([  ]) ]), 206:([ "actions":([  ]), "generated":1379322226, "libraries":([ \<Lib:NIP:core\>:([ "modify:libraries":1 ]) ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "d":([ "content":"Used to add libraries to CNPC's." ]) ]), "socials":([  ]) ]), 207:([ "actions":([  ]), "generated":1379322229, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Quit (logout) timestamp script." ]) ]), "socials":([  ]) ]), 208:([ "actions":([  ]), "generated":1379322227, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Alias for delete" ]) ]), "socials":([  ]) ]), 209:([ "actions":([  ]), "generated":1379322230, "libraries":([ \<Lib:chatlib\>:([ "log":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:chatlib\>:1, \<Data:DB:+see\>:1 ]), "options":([ "d":([ "content":"+see notification script" ]) ]), "socials":([  ]) ]), 210:([ "actions":([  ]), "generated":1379322228, "libraries":([ \<Lib:NIP:core\>:([ "modify:libraries":1 ]) ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "author":([ "content":"Kalle Alm (StoryCoder Kalle)," ]), "d":([ "content":"Used to remove libraries to CNPC's." ]), "syntax":([ "content":"+setp [target] \\"delete [library-name]\\"" ]) ]), "socials":([  ]) ]), 211:([ "actions":([  ]), "generated":1379322229, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the internal delay:delay-exec hook. It will execute the actual pause that occurs between each of the CNPC's unprovoked actions (self-triggered if you will)." ]) ]), "socials":([  ]) ]), 212:([ "actions":([  ]), "generated":1379322229, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The default error handler." ]) ]), "socials":([  ]) ]), 213:([ "actions":([  ]), "generated":1379322230, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([  ]) ]), "d":([ "content":"This is the internal delay:delay-init hook. It will set the initial value for the \$NPC_PAUSE property." ]) ]), "socials":([  ]) ]), 214:([ "actions":([  ]), "generated":1379322230, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The setprop-trigger for the NIP namespace." ]) ]), "socials":([  ]) ]), 215:([ "actions":([  ]), "generated":1379322231, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The setprop-trigger for the NIP-CORE namespace." ]) ]), "socials":([  ]) ]), 216:([ "actions":([  ]), "generated":1379322233, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the internal internal:internal-exec hook." ]) ]), "socials":([  ]) ]), 217:([ "actions":([  ]), "generated":1379322232, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Alias for delete" ]) ]), "socials":([  ]) ]), 218:([ "actions":([  ]), "generated":1379322237, "libraries":([  ]), "objects":([ \<Data:NIP:system\>:1 ]), "options":([ "d":([ "content":"Internal script used to locate all merry scripts that relate to a certain hook and signal, in a certain script." ]) ]), "socials":([  ]) ]), 219:([ "actions":([  ]), "generated":1379322238, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script internally registers a new hook with a signal (and vice versa)." ]) ]), "socials":([  ]) ]), 220:([ "actions":([  ]), "generated":1379322239, "libraries":([  ]), "objects":([ \<Data:NIP:system\>:1 ]), "options":([ "d":([ "content":"This script internally unregisters a hook from the chain of a signal." ]) ]), "socials":([  ]) ]), 221:([ "actions":([  ]), "generated":1379322240, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm (StoryCoder Kalle)," ]), "d":([ "content":"This script handles the hook modifications on CNPC libraries." ]) ]), "socials":([  ]) ]), 222:([ "actions":([  ]), "generated":1379322241, "libraries":([  ]), "objects":([ \<Data:NIP:system\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2005-08-29", "Zwoc" \}), "content":"Updated script to use npc:sys:sighookpath instead of nip-core:sighookpath." ]), ([ "arguments":(\{ "2005-08-29", "Zwoc" \}), "content":"Optimized script to use local variables and fixed sizes instead of repeated sizeof() calls." ]) \}) ]) ]), "d":([ "content":"This script (re)calculates the signal/hook path which contains the series of scripts the heartbeat thread executes each loop." ]), "revision":([ "content":"2" ]), "since":([ "content":"2003" ]) ]), "socials":([  ]) ]), 223:([ "actions":([  ]), "generated":1379322241, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm (StoryCoder Kalle)," ]), "d":([ "content":"Used to add/remove hooks to libraries." ]), "note":(\{ ([ "content":"The \\"SIG-ID\\" property is optional, and is only meaningful during" ]) \}), "syntax":([ "content":"" ]) ]), "socials":([  ]) ]), 224:([ "actions":([  ]), "generated":1379322242, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "d":([ "content":"This script handles the signal modifications on CNPC libraries." ]), "email":([ "content":"kalle@marrach.skotos.net" ]), "required":([ "section":([ "var":(\{ ([ "arguments":(\{ "\$SIGNAL_ID", "string" \}), "content":"the name of the signal" ]), ([ "arguments":(\{ "\$SIGNAL_PRI", "int" \}), "content":"the signal priority" ]) \}) ]) ]) ]), "socials":([  ]) ]), 225:([ "actions":([  ]), "generated":1379322243, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:([ "modify:signals":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "d":([ "content":"Used to create/modify signals." ]), "email":([ "content":"kalle@marrach.skotos.net" ]), "note":(\{ ([ "content":"If SIGNAL-PRIORITY is not set, the signal in question will be REMOVED." ]) \}), "syntax":([ "content":"+setp [target] \\"signal \<SIGNAL-ID\> [\<SIGNAL-PRIORITY\>]\\"" ]) ]), "socials":([  ]) ]), 226:([ "actions":([  ]), "generated":1379322245, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:1 ]), "options":([ "d":([ "content":"The SIGEXECptr setprop hook sets and unsets the signal stream hook (located in Lib:NIP:lib:stream) on demand." ]) ]), "socials":([  ]) ]), 227:([ "actions":([  ]), "generated":1379322246, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the signal stream hook. It will be inherited on demand whenever a hook or signal wants a certain script to be executed whenever the SIGEXEC signal is caught." ]) ]), "socials":([  ]) ]), 228:([ "actions":([  ]), "generated":1379322249, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This setprop hook executes the \\"SIGEXEC\\" stream (0x050) whenever the property \\"DECIDE\\" is set in \\"this\\"." ]) ]), "socials":([  ]) ]), 229:([ "actions":([  ]), "generated":1379322261, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This hook will slow the NPC down a bit if it's neutral." ]) ]), "socials":([  ]) ]), 230:([ "actions":([  ]), "generated":1379322262, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script grabs the analysis generated from the various mood sighooks and determines the CNPC's current mood." ]) ]), "socials":([  ]) ]), 231:([ "actions":([  ]), "generated":1379322263, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the init script for the mood signal hook(s). It will reset a number of values used to calculate the CNPC's current mood." ]) ]), "socials":([  ]) ]), 232:([ "actions":([  ]), "generated":1379322265, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will look at various things and bump the 'ANGRY' mood accordingly." ]) ]), "socials":([  ]) ]), 233:([ "actions":([  ]), "generated":1379322266, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"As the anger lib is loaded, we add 'ANGRY' to the list of moods." ]) ]), "socials":([  ]) ]), 234:([ "actions":([  ]), "generated":1379322269, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is called by the react:evoke-iob/dob scripts, and any NPC's that have the commanding library implemented will execute this every time someone acts towards the NPC (with an evoke)." ]) ]), "socials":([  ]) ]), 235:([ "actions":([  ]), "generated":1379322270, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is used to add a script to the command chain \\"nip:trait:commands\\"." ]), "note":(\{ ([ "content":"" ]) \}) ]), "socials":([  ]) ]), 236:([ "actions":([  ]), "generated":1379322271, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is used to remove a script from the command chain \\"nip:trait:commands\\"." ]) ]), "socials":([  ]) ]), 237:([ "actions":([  ]), "generated":1379322272, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Shell for 'lib:commanding'" ]) ]), "socials":([  ]) ]), 238:([ "actions":([  ]), "generated":1379322273, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script increments the CNPC's energy when it eats something." ]) ]), "socials":([  ]) ]), 239:([ "actions":([  ]), "generated":1379322273, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Shell for 'lib:commanding'" ]) ]), "socials":([  ]) ]), 240:([ "actions":([  ]), "generated":1379322274, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The lib:done-post script, executed after the \\"eating\\" library has been removed from a CNPC." ]) ]), "socials":([  ]) ]), 241:([ "actions":([ \<Allegory:Neoct:Actions:E:eat\>:1 ]), "generated":1379322275, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:([ "log":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:1 ]), "options":([ "d":([ "content":"This script will check if we're hungry enough to do something about it, and based on our hunger, we will go to greater extremes, ending up with looking in the room we're in for food and grabbing it if we can and are hungry enough." ]) ]), "socials":([  ]) ]), 242:([ "actions":([  ]), "generated":1379322276, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The internal eating script will make the CNPC hungrier over time." ]) ]), "socials":([  ]) ]), 243:([ "actions":([  ]), "generated":1379322277, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:([ "handler:emoting:parse":1, "handler_freemote":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Apr 26 2006 12:50", "Zwoc" \}), "content":"Added steal-frequency functionality." ]) \}) ]) ]), "d":([ "content":"Shortcut-command for behavior DB calls." ]), "summary":([ "content":"Scripts like these are not entirely recommended, as it breaches the foundational regulations   of NIP script names, but it has been deemed entitled to make behavior calls simpler." ]) ]), "socials":([  ]) ]), 244:([ "actions":([  ]), "generated":1379322277, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will alter the mood slightly if the CNPC is very hungry." ]) ]), "socials":([  ]) ]), 245:([ "actions":([  ]), "generated":1379322278, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:([ "handler:emoting:parse":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "d":([ "content":"There's a chance (specified in 'nip:trait:emoting:frequency') we will spontaneously emote something." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"2003" ]), "summary":([ "content":"The emoting:decide script is a signal-hook executed every heartbeat on a nipper with emoting capacities (which includes about 99% of the currently-existing ones). The script determines whether the NPC should emote this time or not." ]) ]), "socials":([  ]) ]), 246:([ "actions":([  ]), "generated":1379322278, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The offer script for the eating CNPC feature." ]) ]), "socials":([  ]) ]), 247:([ "actions":([  ]), "generated":1379322279, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:([ "handler:emoting:preparse":1, "handler_freemote":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2004-05-19", "Zwoc" \}), "content":"Updated the Social() call to use a flattened array rather than an ugly                                 switch() case checking sizeof(\$e_obj)." ]), ([ "arguments":(\{ "2004-10-30", "Zwoc" \}), "content":"Added (time), (title) and (name). A static solution that I don't much                                 like, and I intend to replace it as soon as I can, with an extension                                 library of some sort." ]), ([ "arguments":(\{ "2005-08-29", "Zwoc" \}), "content":"Optimized and cleaned script up a bit. Prepared for TOD feature instead                                 of static TOD code at top." ]), ([ "arguments":(\{ "2006-02-03", "Zwoc" \}), "content":"Fixed 'this' bug in title, name, etc. to be \$actor instead." ]), ([ "arguments":(\{ "2006-02-03", "Zwoc" \}), "content":"Moved name, title, etc. stuff into separate (thus overridable) script." ]), ([ "arguments":(\{ "2006-02-10", "Zwoc" \}), "content":"Removed check if inherit exists (necessary for transition)." ]), ([ "arguments":(\{ "Apr 14 2006 17:58", "Zwoc" \}), "content":"Added call to handler_freemote if no emote data found." ]) \}) ]) ]), "d":([ "content":"Parse an emote from db \$db, mood \$mood." ]), "optional":([ "section":([ "var":(\{ ([ "arguments":(\{ "\$role", "int" \}), "content":"The role in the mood which is to be behaved; usually randomized by the script." ]) \}) ]) ]), "required":([ "section":([ "var":(\{ ([ "arguments":(\{ "\$db", "bdo" \}), "content":"An object reference to the behavior-data object from which the emoting data is to be retrieved." ]), ([ "arguments":(\{ "\$mood", "string" \}), "content":"The mood which is to be behaved, where \\"db\\" is the universal reference for the \\"anything\\"-mode." ]) \}) ]) ]), "since":([ "content":"2003" ]) ]), "socials":([  ]) ]), 248:([ "actions":([  ]), "generated":1379322279, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is executed 1) when the eating hook is loaded, and 2) whenever another hook is loaded." ]) ]), "socials":([  ]) ]), 249:([ "actions":([  ]), "generated":1379322280, "libraries":([  ]), "objects":([ \<Data:NIP:system\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Feb  2 20:40, 2006", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Pre-parse for emoting. The pre-parsing creates things such as \$time, \$name, \$title, etc." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Feb  2 20:40, 2006" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 250:([ "actions":([  ]), "generated":1379322280, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Make use of the \\"add_offer\\" core script." ]) ]), "socials":([  ]) ]), 251:([ "actions":([  ]), "generated":1379322281, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>:([ "handler_freemote":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>:1 ]), "options":([ "d":([ "content":"There's a chance (specified in 'nip:trait:freemoting:frequency') we will spontaneously freemote something." ]), "note":(\{ ([ "content":"" ]) \}) ]), "socials":([  ]) ]), 252:([ "actions":([  ]), "generated":1379322281, "libraries":([  ]), "objects":([ \<Data:NIP:system\>:1 ]), "options":([ "d":([ "content":"Add the emoting library to the NPC." ]) ]), "socials":([  ]) ]), 253:([ "actions":([  ]), "generated":1379322282, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Apr 14 2006 17:53", "Zwoc" \}), "content":"Added oneof handling and cleaned code up in general." ]), ([ "arguments":(\{ "Apr 25 2006 19:56", "Zwoc" \}), "content":"Added pipe-separation for specified emits to actor." ]) \}) ]) ]), "d":([ "content":"Freemote handler." ]), "todo":(\{ ([ "content":"make sure there are individual emits for every target so that \\"\$(this) glares at \$(actor)\\" doesn't resolve to \\"A nipper glares at Kalle\\" for Kalle, but instead \\"A nipper glares at you\\"." ]) \}) ]), "socials":([  ]) ]), 254:([ "actions":([  ]), "generated":1379322285, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will look at various things (e.g.i.a. hunger) and bump the 'HAPPY' mood accordingly." ]) ]), "socials":([  ]) ]), 255:([ "actions":([  ]), "generated":1379322286, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"As the happiness lib is loaded, we add 'HAPPY' to the list of moods." ]) ]), "socials":([  ]) ]), 256:([ "actions":([  ]), "generated":1379322289, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will make the musicians want to play, and is triggered as the authoritative person [tm] says \\"Begin\\", \\"Proceed\\" or \\"Start\\" to the musicians." ]) ]), "socials":([ \<Socials:Verbs:B:begin\>:1 ]) ]), 257:([ "actions":([  ]), "generated":1379322290, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will make the musicians stop playing, and is triggered as the authoritative person [tm] says \\"Stop\\", \\"End\\" or \\"Conclude\\" to the musicians." ]) ]), "socials":([ \<Socials:Verbs:E:end\>:1 ]) ]), 258:([ "actions":([  ]), "generated":1379322291, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"As the musician lib is loaded, we add 'PLAY' to the list of moods. We also add the 'begin'/'end' command triggers (and a few aliases for each)." ]) ]), "socials":([  ]) ]), 259:([ "actions":([  ]), "generated":1379322292, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Unsynchronize the player(s) so that they aren't playing in chunks." ]) ]), "socials":([  ]) ]), 260:([ "actions":([  ]), "generated":1379322293, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is used to add a script to the offer chain \\"nip:offer:scripts\\". Each script listed there will be executed and if either returns a TRUE, the offer will be accepted." ]) ]), "socials":([  ]) ]), 261:([ "actions":([  ]), "generated":1379322293, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will set the \\"PLAY\\" mood to 20 if the musicians are supposed to play, and to 0 if they're not." ]) ]), "socials":([  ]) ]), 262:([ "actions":([  ]), "generated":1379322294, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is used to subtract a script from the offer chain \\"nip:offer:scripts\\"." ]) ]), "socials":([  ]) ]), 263:([ "actions":([  ]), "generated":1379322294, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Gesture players to direct them somewhere." ]) ]), "socials":([  ]) ]), 264:([ "actions":([ \<MOVED:20080918-114107:Neoct:Trading:Actions:accept\>:1, \<MOVED:20080918-114107:Neoct:Trading:Actions:refuse\>:1 ]), "generated":1379322295, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is a simple shell for any scripts that would potentially scan offers and take part in deciding whether or not the offer should be accepted. If you are about to make an addition to a CNPC that involves offering things to them, use the \\"lib:core:add_offer\\" and \\"lib:core:sub_offer\\" scripts provided with this library." ]) ]), "socials":([  ]) ]), 265:([ "actions":([  ]), "generated":1379322297, "libraries":([ \<Lib:woe\>:([ "objects":1 ]) ]), "objects":([ \<Lib:woe\>:1 ]), "options":([ "d":([ "content":"Get property on all WOE objects in a given WOE folder." ]) ]), "socials":([  ]) ]), 266:([ "actions":([  ]), "generated":1379322298, "libraries":([ \<Lib:woe\>:([ "list_folder":1 ]) ]), "objects":([ \<Lib:woe\>:1 ]), "options":([ "d":([ "content":"[deprecated] Please use list_folder instead of list-folder." ]) ]), "socials":([  ]) ]), 267:([ "actions":([  ]), "generated":1379322299, "libraries":([  ]), "objects":([ \</usr/System/sys/idd\>:1 ]), "options":([ "d":([ "content":"Return a string list of objects, sub-folders or both residing in a folder." ]) ]), "socials":([  ]) ]), 268:([ "actions":([  ]), "generated":1379322300, "libraries":([  ]), "objects":([ \</usr/System/sys/idd\>:1 ]), "options":([ "d":([ "content":"Return list of all WOE objects in a given WOE folder." ]) ]), "socials":([  ]) ]), 269:([ "actions":([  ]), "generated":1379322301, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"As the happiness lib is loaded, we add 'SAD' to the list of moods." ]) ]), "socials":([  ]) ]), 270:([ "actions":([  ]), "generated":1379322301, "libraries":([ \<Lib:woe\>:([ "objects":1 ]) ]), "objects":([ \<Lib:woe\>:1 ]), "options":([ "d":([ "content":"Set property on all WOE objects in a given WOE folder." ]) ]), "socials":([  ]) ]), 271:([ "actions":([  ]), "generated":1379322302, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will look at various things (e.g.i.a. hunger) and bump the 'SAD' mood accordingly." ]) ]), "socials":([  ]) ]), 272:([ "actions":([  ]), "generated":1379322305, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is executed whenever the CNPC changes state (awake/sleep), through the usage of e.g. the \\"sleeping\\" hook's lib:sleeping:decide script." ]), "state":([ "content":"\\"+\$argv[0] );" ]) ]), "socials":([  ]) ]), 273:([ "actions":([  ]), "generated":1379322306, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the standard awakening script. Replace it with your own library when the need for a customized awake-script arise." ]) ]), "socials":([  ]) ]), 274:([ "actions":([  ]), "generated":1379322307, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is the standard go-to-sleep script. Replace it with your own library when the need for a customized sleep-script arise." ]) ]), "socials":([  ]) ]), 275:([ "actions":([  ]), "generated":1379322308, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script is executed 1) when the sleeping hook is loaded, and 2) whenever another hook is loaded." ]) ]), "socials":([  ]) ]), 276:([ "actions":([  ]), "generated":1379322309, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script (may be) used to add moods to the CNPC moods registry." ]) ]), "socials":([  ]) ]), 277:([ "actions":([  ]), "generated":1379322309, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:([ "handler:state:awake":1, "handler:state:sleep":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:1 ]), "options":([ "d":([ "content":"Sleeping decide script. \\"Go to sleep or fall awake?\\"" ]), "state":([ "content":"sleep\\");" ]) ]), "socials":([  ]) ]), 278:([ "actions":([  ]), "generated":1379322310, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script (may be) used to remove moods from the CNPC moods registry." ]) ]), "socials":([  ]) ]), 279:([ "actions":([  ]), "generated":1379322310, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Delay script for the sleeping hook. This one will multiply the delay by 4 if the state is asleep." ]) ]), "socials":([  ]) ]), 280:([ "actions":([  ]), "generated":1379322311, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"We initialize the MOOD signal and add a basic mood we call \\"NEUTRAL\\"." ]) ]), "socials":([  ]) ]), 281:([ "actions":([  ]), "generated":1379322311, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Internal sleeping script. Increment weariness." ]) ]), "socials":([  ]) ]), 282:([ "actions":([  ]), "generated":1379322312, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will alter the mood slightly if the CNPC is very tired." ]) ]), "socials":([  ]) ]), 283:([ "actions":([  ]), "generated":1379322313, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Evoke witness for the communicate lib (provided thru omni-comm)." ]) ]), "socials":([  ]) ]), 284:([ "actions":([  ]), "generated":1379322317, "libraries":([  ]), "objects":([ \<Lib:ascii\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Sep 17 13:42, 2005", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Callback-parse a string." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Sep 17 13:42, 2005" ]), "state":([ "content":"EXPERIMENTAL" ]), "summary":([ "content":"The callback_parse function is a string-parser which allows callbacks to any amount of Merry functions.    It takes two arguments, \$rules and \$data. \$rules is a 3-point array which lists the callbacks in the order        (\{ \\"id=start-\>end\\", flags, \<callback-ob\>, ... \}).    E.g. (\{ \\"mikiword=[-\>]\\", ascii::.PARSE_TWIN_ESCAPABLE, \<Neoct:Miki:Plugins:Mikiword\> \})    Any rule which begins with [ and ends with ] that is not preceded by an odd number of ['s and not succeeded    by an odd number of ]'s (PARSE_TWIN_ESCAPABLE) will trigger a call-to-replace to \\"preparse\\" and \\"parse\\" in    \<Neoct:Miki:Plugins:Mikiword\>.    Each foreign parser will receive \$data as the substring which the start and end rules wrap around. If the parser returns    a -1 it means the parser aborted the action and that the wrap should be ignored. Otherwise, the value of \$data will    replace the tag. The \$flags map contains 0 or 1, depending on whether the parser is currently within a particular tag.    \<p/\>    The parser preparses before parsing; a hash-map sorted by # of characters in the parse-expression is generated in the preparse    session, and the \\"preparse\\" function is called in each foreign parser. The purpose of the preparsing is to 1) figure out the order    in which the parsing should occur (lowest # of characters in parse-execution have highest priority), and 2) figure out which    expressions should be ignored.    The preparser can declare that all parsing should be ignored between start-point and end-point by setting the \$parselock boolean.    Optionally, the flag ascii::.PARSE_LOCK can be used.    If the callback object is nil, the parser will consider the rule flag-action-only.    \<p/\>    The result is returned as a string." ]) ]), "socials":([  ]) ]), 285:([ "actions":([  ]), "generated":1379322318, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Feb 14 08:05, 2006", "Zwoc" \}), "content":"Added script to codebase." ]), ([ "arguments":(\{ "Apr 13 09:34, 2007", "Zwoc" \}), "content":"Added \$ignore_spacing flag." ]) \}) ]) ]), "d":([ "content":"Compare \$data (old) and \$datab (new) and produce a diff. Accepts \$ignore_spacing (TRUE\|FALSE)." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Feb 14 08:05, 2006" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 286:([ "actions":([  ]), "generated":1379322319, "libraries":([ \<Lib:ascii\>:([ "forge_table":1, "table":1 ]), \<Lib:html\>:([ "table":1 ]) ]), "objects":([ \<Lib:ascii\>:1, \<Lib:html\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2005-09-01", "Zwoc" \}), "content":"Initiated forge_table() script." ]), ([ "arguments":(\{ "2005-09-02", "Zwoc" \}), "content":"Added \$map option." ]) \}) ]) ]), "d":([ "content":"Forge a table array based on a number of properties set up in a specified format." ]), "note":(\{ ([ "content":"The \$types mapping may optionally contain references to what the various columns' properties are;    the default is \\"string\\", but the following exist as well:        \\"boolean\\" (1 or 0 or nil) - will render as \\"yes\\" or \\"no\\" on-screen        \\"mixed\\"                   - will be dump_value()'d instead of Str()'d -- use this if the forging errors" ]) \}), "optional":([ "section":([ "var":(\{ ([ "arguments":(\{ "\$primary", "string" \}), "content":"A string defining which column is the primary; e.g. \\"name\\"" ]), ([ "arguments":(\{ "\$types", "mapping" \}), "content":"A mapping of type declarations; e.g. ([ \\"admin\\" : \\"boolean\\" ])" ]), ([ "arguments":(\{ "\$bools", "mapping" \}), "content":"A boolean transformation map; e.g. ([ \\"admin\\" : (\{ \\"yes\\", \\"no\\" \}) ])" ]), ([ "arguments":(\{ "\$primary_wrap", "string" \}), "content":"Wrap the primary to this with %VALUE% replaced with the primary value." ]), ([ "arguments":(\{ "\$map", "mapping" \}), "content":"A map repointing headers to variables, e.g. ([ \\"Administrator\\" : \\"admin\\" ])" ]) \}) ]) ]), "required":([ "section":([ "var":(\{ ([ "arguments":(\{ "\$columns", "string*" \}), "content":"A string array of columns; e.g. (\{ \\"name\\", \\"email\\", \\"admin\\" \})" ]), ([ "arguments":(\{ "\$entries", "mixed*" \}), "content":"An array containing the primary keys, e.g. (\{ \\"kalle\\", \\"lucy\\", \\"george\\" \})" ]), ([ "arguments":(\{ "\$data", "mapping" \}), "content":"A mapping (if \$primary) or array with data for each column by primary key or index,                                 where each element is a mapping which contains data for all other columns; e.g.                                    ([ \\"kalle\\" : ([ \\"email\\" : \\"kalle@mortalis.skotos.net\\", \\"admin\\" : 1 ]) ])                                 or (\{ ([ \\"name\\" : \\"kalle\\", \\"email\\" : \\"kalle@mortalis.skotos.net\\", \\"admin\\" : 1 ]) \})" ]) \}) ]) ]), "since":([ "content":"Sep 1, 2005" ]), "state":([ "content":"EXPERIMENTAL" ]), "summary":([ "content":"There are two functions which relate to tables in SkotOS -- ascii::table() and html::table(). Both work on exactly the same type of property (named \$content) but one produces output suitable for preformated clients and the other produces output in HTML. The purpose of the ascii::forge_table() function is to provide a middle-layer which can process an object set up properly and convert its settings into a table." ]), "syntax":([ "content":"content ascii::forge_table(\$object: \<object\>[, \$namespace: \<string\>])" ]) ]), "socials":([  ]) ]), 287:([ "actions":([  ]), "generated":1379322320, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Mar 22 17:31, 2006", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Implode a \$diff, returning a series of tagged lines with the class plus, minus or equal." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Mar 22 17:31, 2006" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 288:([ "actions":([  ]), "generated":1379322321, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Script inherited into the ROOM which acts as the NPC for deliveries." ]) ]), "socials":([  ]) ]), 289:([ "actions":([  ]), "generated":1379322321, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Prettify-resolve variable into a human-readable entry for +pprint." ]) ]), "socials":([  ]) ]), 290:([ "actions":([  ]), "generated":1379322322, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Sep  5 19:31, 2005", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Strip SkotOS tags from a string." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Sep  5 19:31, 2005" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 291:([ "actions":([  ]), "generated":1379322323, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Advanced string length of \$s, which wraps around \<atag\> and \<acmd\> resolves." ]) ]), "socials":([  ]) ]), 292:([ "actions":([  ]), "generated":1379322325, "libraries":([ \<Lib:ascii\>:([ "strlen":1 ]) ]), "objects":([ \<Lib:ascii\>:1 ]), "options":([ "d":([ "content":"Create an ASCII-table based on the 2-dim. array \$content." ]) ]), "socials":([  ]) ]), 293:([ "actions":([  ]), "generated":1379322329, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Sep  5 16:22, 2005", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Convert a string* (\$array) into a series of \<option\> entries, if \$selected is found matching either, it is set." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Sep  5 16:22, 2005" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 294:([ "actions":([  ]), "generated":1379322330, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Mar  1 15:24, 2006", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Implode a \$diff, returning a series of divs with the class plus, minus or equal." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Mar  1 15:24, 2006" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 295:([ "actions":([  ]), "generated":1379322331, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Remove the contents of an element if it is defaulty." ]) ]), "socials":([  ]) ]), 296:([ "actions":([  ]), "generated":1379322332, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Add a JavaScript tip to an input-box using show_tip() and hide_tip()." ]), "note":(\{ ([ "content":"this requires the presence of the two javascripts show_tip() and hide_tip()." ]) \}) ]), "socials":([  ]) ]), 297:([ "actions":([  ]), "generated":1379322334, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Create a welcome box, unless it is specified to not be displayed in \$body." ]) ]), "socials":([  ]) ]), 298:([ "actions":([  ]), "generated":1379322335, "libraries":([ \<Lib:html\>:([ "link":1 ]) ]), "objects":([ \<Lib:html\>:1 ]), "options":([ "d":([ "content":"Generate a \<zlink\> based on the arguments." ]) ]), "socials":([  ]) ]), 299:([ "actions":([  ]), "generated":1379322336, "libraries":([ \<Lib:html\>:([ "parse":1, "parse_tags":1 ]) ]), "objects":([ \<Lib:html\>:1 ]), "options":([ "author":([ "content":"\$book.\\"book:author\\";" ]), "d":([ "content":"HTML Template parser." ]) ]), "socials":([  ]) ]), 300:([ "actions":([  ]), "generated":1379322337, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"HTML parser engine." ]) ]), "socials":([  ]) ]), 301:([ "actions":([  ]), "generated":1379322340, "libraries":([ \<Lib:html\>:([ "table":1 ]) ]), "objects":([ \<Lib:html\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2005-09-01", "Zwoc" \}), "content":"Cleaned script up and added \$style." ]) \}) ]) ]), "d":([ "content":"Create a HTML table based on the Lib:ascii argument set up." ]), "optional":([ "section":([ "var":(\{ ([ "arguments":(\{ "\$spacing", "int" \}), "content":"Cellspacing." ]), ([ "arguments":(\{ "\$padding", "int" \}), "content":"Cellpadding." ]), ([ "arguments":(\{ "\$rules", "string" \}), "content":"Table rules attribute (e.g. \\"cols\\")" ]), ([ "arguments":(\{ "\$separator", "string" \}), "content":"Separator string." ]), ([ "arguments":(\{ "\$alignment", "string" \}), "content":"Table alignment." ]), ([ "arguments":(\{ "\$width", "string" \}), "content":"Table width declaration." ]), ([ "arguments":(\{ "\$height", "string" \}), "content":"Table height declaration." ]), ([ "arguments":(\{ "\$style", "string" \}), "content":"Table CSS style declaration." ]) \}) ]) ]), "required":([ "section":([ "var":(\{ ([ "arguments":(\{ "\$content", "matrix" \}), "content":"A table content matrix." ]) \}) ]) ]), "since":([ "content":"2003" ]), "state":([ "content":"STABLE" ]), "summary":([ "content":"Any rows (sub-arrays) that are replaced with    the string \\"-\\" are regarded as separators.    Example:     \$content =       (\{         (\{ \\"Name\\", \\"Address\\", \\"Phone #\\" \}),         \\"-\\",         (\{ \\"George\\", \\"George rd. 5\\", \\"145-456-678\\" \})       \})    Would result in      \<table border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"5\\"\>        \<tr\>           \<td\>\<b\>Name\</b\>\</td\>           \<td\>\<b\>Address\</b\>\</td\>           \<td\>\<b\>Phone #\</b\>\</td\>        \</tr\>        \<tr\>           \<td colspan=3\>\<hr\>\</td\>        \</tr\>        \<tr\>          \<td\>George\</td\>          \<td\>George rd. 5\</td\>          \<td\>145-456-678\</td\>        \</tr\>   \</table\>" ]), "syntax":([ "content":"string html::table(\$content: \<matrix\>[, \$spacing: \<int\>, \$padding: \<int\>, \$rules: \<string\>, \$separator: \<string\>, \$alignment: \<string\>, \$width: \<string\>, \$height: \<string\>, \$style: \<string\>])" ]) ]), "socials":([  ]) ]), 302:([ "actions":([  ]), "generated":1379322344, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "d":([ "content":"2003-08-31 Rev. 0-1: Data:NIP:system inheritage updated with act:start for spawned NPC's." ]) ]), "socials":([  ]) ]), 303:([ "actions":([  ]), "generated":1379322344, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "create_tree_rec":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Creates the tree" ]) ]), "socials":([  ]) ]), 304:([ "actions":([  ]), "generated":1379322345, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:1 ]), "options":([ "d":([ "content":"2003-11-17 Rev. 9-10: This update updates any CNPC's using the 'eating' library." ]) ]), "socials":([  ]) ]), 305:([ "actions":([  ]), "generated":1379322345, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "create_tree_output_rec":1, "create_tree_output_suf":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Create tree output" ]) ]), "socials":([  ]) ]), 306:([ "actions":([  ]), "generated":1379322346, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:([ "behavior":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1, \<MOVED:20080918-114107:Lib:NIP:updates\>:1 ]), "options":([ "d":([ "content":"2003-11-18 Rev. 10-11: This update updates any CNPC's using the 'emoting' library." ]) ]), "socials":([  ]) ]), 307:([ "actions":([  ]), "generated":1379322346, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "create_tree_output_rec":1, "create_tree_output_suf":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Create tree output recursive" ]) ]), "socials":([  ]) ]), 308:([ "actions":([  ]), "generated":1379322347, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:1 ]), "options":([ "d":([ "content":"2003-11-21 Rev. 11-12: This update updates any CNPC's using the 'predator' library." ]) ]), "socials":([  ]) ]), 309:([ "actions":([  ]), "generated":1379322348, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The DECIDE sig-hook for the nip hook." ]) ]), "socials":([  ]) ]), 310:([ "actions":([  ]), "generated":1379322347, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Create suffix for queue name" ]) ]), "socials":([  ]) ]), 311:([ "actions":([  ]), "generated":1379322348, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:([ "shutdown":1 ]) ]), "objects":([ \<Lib:NIP:core\>:1, \<MOVED:20080918-114107:Lib:NIP:updates\>:1 ]), "options":([ "d":([ "content":"2003-11-26 Rev. 12-13: Add new inherit for ::shutdown();" ]) ]), "socials":([  ]) ]), 312:([ "actions":([  ]), "generated":1379322382, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The INTERNAL sig-hook for the nip hook." ]) ]), "socials":([  ]) ]), 313:([ "actions":([  ]), "generated":1379322348, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "create_tree_rec":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Tree creation recursive" ]) ]), "socials":([  ]) ]), 314:([ "actions":([  ]), "generated":1379322382, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "d":([ "content":"2003-11-27 Rev. 13-14: Implement log feature." ]) ]), "socials":([  ]) ]), 315:([ "actions":([  ]), "generated":1379322382, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Sets abort." ]) ]), "socials":([  ]) ]), 316:([ "actions":([  ]), "generated":1379322384, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:([ "shutdown":1 ]) ]), "objects":([ \<Lib:NIP:core\>:1, \<MOVED:20080918-114107:Lib:NIP:updates\>:1 ]), "options":([ "d":([ "content":"2003-12-20 Rev. 14-15: Re-add inherit for ::shutdown();" ]) ]), "socials":([  ]) ]), 317:([ "actions":([  ]), "generated":1379322383, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The spawn system script, called by any NPC using the spawn-system when it is slain." ]) ]), "socials":([  ]) ]), 318:([ "actions":([  ]), "generated":1379322384, "libraries":([ \<Lib:common\>:([ "reverse_ctime":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Adds a note to your personal calendar" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 319:([ "actions":([  ]), "generated":1379322385, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:1 ]), "options":([ "d":([ "content":"2003-12-21 Rev. 15-16: This update updates any CNPC's using the 'predator' library." ]) ]), "socials":([  ]) ]), 320:([ "actions":([  ]), "generated":1379322384, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Add/remove appearance traits to details." ]) ]), "socials":([  ]) ]), 321:([ "actions":([  ]), "generated":1379322388, "libraries":([ \<Lib:NIP:NCS\>:([ "register_signature":1, "request_identifier":1 ]) ]), "objects":([ \<Data:NIP:NCS\>:1, \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"NCS connect script." ]) ]), "socials":([  ]) ]), 322:([ "actions":([  ]), "generated":1379322385, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Add a Queue if it does not exist" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 323:([ "actions":([  ]), "generated":1379322386, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>:1 ]), "options":([ "d":([ "content":"2004-02-17 Rev. 16-17: Deprecated properties for freemote db's need auto-adjustment." ]) ]), "socials":([  ]) ]), 324:([ "actions":([  ]), "generated":1379322389, "libraries":([  ]), "objects":([ \<Data:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"NCS disconnect script." ]) ]), "socials":([  ]) ]), 325:([ "actions":([  ]), "generated":1379322386, "libraries":([ \<Lib:common\>:([ "get_name":1, "lookup":1 ]), \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Jun 29 2006 12:03", "Zwoc" \}), "content":"Fixed \\"assignee is nil\\" issue at line 92." ]) \}) ]) ]), "d":([ "content":"Assigns an assist to a specific person and informs them on login." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 326:([ "actions":([  ]), "generated":1379322388, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:1 ]), "options":([ "d":([ "content":"2004-03-23 Rev. 17-18: This update updates any CNPC's using the 'resource-control' library." ]) ]), "socials":([  ]) ]), 327:([ "actions":([  ]), "generated":1379322390, "libraries":([ \<Lib:common\>:([ "convsecs":1 ]), \<MOVED:20080918-114107:Lib:NIP:NCS\>:([ "log":1 ]) ]), "objects":([ \<Lib:common\>:1, \<MOVED:20080918-114107:Lib:NIP:updates\>:1, \<Data:NIP:NCS\>:1, \<MOVED:20080918-114107:Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"External Request handler - UPDATE" ]), "revision":([ "content":"\$\{MOVED:20080918-114107:Lib:NIP:updates\}.\\"system:revision\\";" ]) ]), "socials":([  ]) ]), 328:([ "actions":([  ]), "generated":1379322388, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Associate a queue with an account on a specific server" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 329:([ "actions":([  ]), "generated":1379322389, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:1 ]), "options":([ "d":([ "content":"2004-03-30 Rev. 18-19: This update updates any CNPC's using the 'movement' library." ]) ]), "socials":([  ]) ]), 330:([ "actions":([  ]), "generated":1379322391, "libraries":([ \<Lib:ascii\>:([ "table":1 ]) ]), "objects":([ \<Lib:ascii\>:1, \<Data:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"Help screen for +NCS" ]) ]), "socials":([  ]) ]), 331:([ "actions":([  ]), "generated":1379322392, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:hooks:room-cleaning\>:([ "slay":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:hooks:room-cleaning\>:1 ]), "options":([ "d":([ "content":"The room-cleaning decide hook-script. This script will randomly pick up trash from \\"the current room.\\" An object is defined as trash according to the SkotOS Trash System rules." ]) ]), "socials":([  ]) ]), 332:([ "actions":([  ]), "generated":1379322389, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Display the attachment popup to the user for a specific assist/task." ]) ]), "socials":([  ]) ]), 333:([ "actions":([  ]), "generated":1379322390, "libraries":([ \<Lib:NIP:NCS\>:([ "load":1 ]) ]), "objects":([ \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"2003-08-31 Rev. 1-2: NCS support implemented." ]) ]), "socials":([  ]) ]), 334:([ "actions":([  ]), "generated":1379322392, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"Set NCS up in \$NPC using default handler etc." ]) ]), "socials":([  ]) ]), 335:([ "actions":([  ]), "generated":1379322390, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "log":1 ]) ]), "objects":([ \<Data:DB:assist:AssistGeneralDB\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Sep 19 19:26, 2005", "Zwoc" \}), "content":"Put in assist before the two ::log() entries, since CronDaemon doesn't play well otherwise." ]) \}) ]) ]), "d":([ "content":"Script to backup the assist DBs." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 336:([ "actions":([  ]), "generated":1379322391, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:([ "wound":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:1, \<MOVED:20080918-114107:Lib:NIP:lib:wounding\>:1 ]), "options":([ "d":([ "content":"2004-03-30 Rev. 19-20: This update updates any CNPC's using the 'wounding' library." ]) ]), "socials":([  ]) ]), 337:([ "actions":([  ]), "generated":1379322393, "libraries":([ \<Lib:common\>:([ "convsecs":1 ]), \<Lib:NIP:NCS\>:([ "handle_extreq_update":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"NCS request handler (basic)." ]) ]), "socials":([  ]) ]), 338:([ "actions":([  ]), "generated":1379322391, "libraries":([ \<Lib:common\>:([ "reverse_ctime":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Create and display calendar" ]), "optional":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 339:([ "actions":([  ]), "generated":1379322392, "libraries":([  ]), "objects":([ \<Lib:NIP:base:lib:stream\>:1 ]), "options":([ "d":([ "content":"2004-04-23 Rev. 20-21: Fail to inherit base script fix." ]) ]), "socials":([  ]) ]), 340:([ "actions":([  ]), "generated":1379322393, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"NIP Control System popup interface." ]) ]), "socials":([  ]) ]), 341:([ "actions":([  ]), "generated":1379322392, "libraries":([ \<Lib:common\>:([ "isnan":1, "reverse_ctime":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Displays specific day info" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 342:([ "actions":([  ]), "generated":1379322393, "libraries":([  ]), "objects":([ \<Lib:NIP:base:lib:stream\>:1 ]), "options":([ "d":([ "content":"2004-04-23 Rev. 21-22: Previous update invalid." ]) ]), "socials":([  ]) ]), 343:([ "actions":([  ]), "generated":1379322395, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:([ "disconnect":1, "log":1 ]) ]), "objects":([ \<Data:NIP:NCS\>:1, \<MOVED:20080918-114107:Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"Disable any nippers connected to the NCS without actually being enabled." ]) ]), "socials":([  ]) ]), 344:([ "actions":([  ]), "generated":1379322396, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>:([ "slay":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>:1 ]), "options":([ "d":([ "content":"The offer script for the trash-taking CNPC's." ]) ]), "socials":([  ]) ]), 345:([ "actions":([  ]), "generated":1379322393, "libraries":([ \<Lib:common\>:([ "isnan":1, "reverse_ctime":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Data:DB:assist:AssistCalendarDB\>:1 ]), "options":([ "d":([ "content":"New calendar code" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 346:([ "actions":([  ]), "generated":1379322394, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:([ "handler_freemote":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>:1, \<MOVED:20080918-114107:Lib:NIP:updates\>:1 ]), "options":([ "d":([ "content":"2004-05-19 Rev. 22-23: This update updates any CNPC's using the 'freemoting' library." ]) ]), "socials":([  ]) ]), 347:([ "actions":([  ]), "generated":1379322396, "libraries":([  ]), "objects":([ \<Data:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"NCS signature register function." ]) ]), "socials":([  ]) ]), 348:([ "actions":([  ]), "generated":1379322397, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Make use of the \\"add_offer\\" core script." ]) ]), "socials":([  ]) ]), 349:([ "actions":([  ]), "generated":1379322394, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Gets the character object" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 350:([ "actions":([  ]), "generated":1379322395, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:1 ]), "options":([ "d":([ "content":"2004-08-07 Rev. 23-24: This update updates any CNPC's using the 'trading' library." ]) ]), "socials":([  ]) ]), 351:([ "actions":([  ]), "generated":1379322397, "libraries":([  ]), "objects":([ \<Data:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"NCS request function." ]) ]), "socials":([  ]) ]), 352:([ "actions":([  ]), "generated":1379322398, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Slay an item." ]) ]), "socials":([  ]) ]), 353:([ "actions":([  ]), "generated":1379322395, "libraries":([ \<Lib:chatlib\>:([ "feed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Data:DB:chat:tas\>:1 ]), "options":([ "d":([ "content":"Does all the required chatfeeding" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 354:([ "actions":([  ]), "generated":1379322396, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:wearer\>:1 ]), "options":([ "d":([ "content":"2004-08-17 Rev. 24-25: This update applies to all nippers using the 'wearer' library." ]) ]), "socials":([  ]) ]), 355:([ "actions":([  ]), "generated":1379322398, "libraries":([  ]), "objects":([ \<Data:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"Find a unique identifier for an NPC." ]) ]), "socials":([  ]) ]), 356:([ "actions":([  ]), "generated":1379322396, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Sets chatline ignore list to hide output." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 357:([ "actions":([  ]), "generated":1379322397, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"2004-08-23 Rev. 25-26: This update is global." ]) ]), "socials":([  ]) ]), 358:([ "actions":([  ]), "generated":1379322399, "libraries":([ \<Lib:ascii\>:([ "table":1 ]), \<Lib:NIP:NCS\>:([ "request":1 ]) ]), "objects":([ \<Lib:ascii\>:1, \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"+NCS 'status' request." ]) ]), "socials":([  ]) ]), 359:([ "actions":([  ]), "generated":1379322400, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:EXT:spawn\>:([ "system":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:spawn\>:1 ]), "options":([ "d":([ "content":"Executed when an NPC is slayed, the act:stop script triggers the lib:system script in Lib:NIP:EXT:spawn, which in turn scans the area object for information on when/what/where to spawn a replacement." ]) ]), "socials":([  ]) ]), 360:([ "actions":([  ]), "generated":1379322397, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Sets chatline show list to show output." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 361:([ "actions":([  ]), "generated":1379322398, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>:1 ]), "options":([ "d":([ "content":"2004-10-13 Rev. 26-27: This update applies to all nippers using the 'musician' library." ]) ]), "socials":([  ]) ]), 362:([ "actions":([  ]), "generated":1379322400, "libraries":([ \<Lib:common\>:([ "convsecs":1 ]), \<Lib:ascii\>:([ "table":1 ]), \<MOVED:20080918-114107:Lib:NIP:NCS\>:([ "log":1 ]), \<Lib:NIP:NCS\>:([ "request":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<MOVED:20080918-114107:Lib:NIP:NCS\>:1, \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"+NCS 'update' request." ]) ]), "socials":([  ]) ]), 363:([ "actions":([  ]), "generated":1379322398, "libraries":([ \<Lib:common\>:([ "get_name":1 ]), \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "docreatestats":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Claims assist" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 364:([ "actions":([  ]), "generated":1379322399, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>:1 ]), "options":([ "d":([ "content":"2004-10-27 Rev. 27-28: This update applies to all nippers using the 'trash-taker' library." ]) ]), "socials":([  ]) ]), 365:([ "actions":([  ]), "generated":1379322401, "libraries":([ \<Lib:NIP:NCS\>:([ "request":1 ]) ]), "objects":([ \<Data:NIP:NCS\>:1, \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"\$siz[\$ind[\$i]][\$j];" ]) ]), "socials":([  ]) ]), 366:([ "actions":([  ]), "generated":1379322399, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Cleanup Code for Various Uses" ]) ]), "socials":([  ]) ]), 367:([ "actions":([  ]), "generated":1379322400, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>:1 ]), "options":([ "d":([ "content":"2004-10-29 Rev. 28-29: This update applies to all nippers using the 'courier' library." ]) ]), "socials":([  ]) ]), 368:([ "actions":([  ]), "generated":1379322402, "libraries":([ \<Lib:common\>:([ "convsecs":1 ]), \<MOVED:20080918-114107:Lib:NIP:NCS\>:([ "log":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Data:NIP:NCS\>:1, \<MOVED:20080918-114107:Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"Restart all nippers." ]) ]), "socials":([  ]) ]), 369:([ "actions":([  ]), "generated":1379322400, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Creates the search db" ]) ]), "socials":([  ]) ]), 370:([ "actions":([  ]), "generated":1379322401, "libraries":([ \<Lib:NIP:NCS\>:([ "load":1 ]) ]), "objects":([ \<Lib:NIP:NCS\>:1 ]), "options":([ "d":([ "content":"2003-09-23 Rev. 2-3: NCS support dummy." ]) ]), "socials":([  ]) ]), 371:([ "actions":([  ]), "generated":1379322404, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Script inherited into the OBJECT which acts as the NPC for deliveries." ]) ]), "socials":([  ]) ]), 372:([ "actions":([  ]), "generated":1379322401, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "docreatesearchdb":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Initializes the new search db, parsing through entire TAS db." ]) ]), "socials":([  ]) ]), 373:([ "actions":([  ]), "generated":1379322402, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:1 ]), "options":([ "d":([ "content":"2004-11-01 Rev. 29-30: This update applies to all nippers using the 'resource-control' library." ]) ]), "socials":([  ]) ]), 374:([ "actions":([  ]), "generated":1379322402, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Sets appropriate stats" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 375:([ "actions":([  ]), "generated":1379322403, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:1 ]), "options":([ "d":([ "content":"2004-11-16 Rev. 30-31: This update applies to all nippers using the 'resource-control' library." ]) ]), "socials":([  ]) ]), 376:([ "actions":([  ]), "generated":1379322403, "libraries":([ \<Lib:common\>:([ "get_name":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dobackup":1, "log":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Runs the delay loop for the backup script." ]) ]), "socials":([  ]) ]), 377:([ "actions":([  ]), "generated":1379322404, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1 ]), "options":([ "d":([ "content":"2005-05-12 Rev. 31-32: This update applies to all nippers using the 'emoting' library." ]) ]), "socials":([  ]) ]), 378:([ "actions":([  ]), "generated":1379322404, "libraries":([ \<Lib:common\>:([ "get_name":1 ]), \<Lib:ascii\>:([ "table":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Creates a long table of all assist info" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 379:([ "actions":([  ]), "generated":1379322405, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1, \<Data:NIP:system\>:1 ]), "options":([ "d":([ "content":"2005-05-15 Rev. 32-33: This update applies to all nippers using the 'emoting' library." ]) ]), "socials":([  ]) ]), 380:([ "actions":([  ]), "generated":1379322408, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:killer\>:([ "behave":1, "core_movement_exit":1, "wound":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:killer\>:1 ]), "options":([ "d":([ "content":"Determine whether we choose to attack nearby prey or not. (PC killer version)" ]), "todo":(\{ ([ "content":"Dynamicise this bit. It's too static at the moment.]" ]) \}) ]), "socials":([  ]) ]), 381:([ "actions":([  ]), "generated":1379322405, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "doclaim":1, "dodone":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Discards an assist with a generic message" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 382:([ "actions":([  ]), "generated":1379322406, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1 ]), "options":([ "d":([ "content":"2006-02-03 Rev. 33-34: This update applies to all nippers using the 'emoting' library." ]) ]), "socials":([  ]) ]), 383:([ "actions":([  ]), "generated":1379322406, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docharobj":1, "dochatfeed":1, "docreatestats":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<SkotOS:Assistd\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "changelog":([ "section":([  ]) ]), "d":([ "content":"Moves an assist from the current queue to the finished queue." ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 384:([ "actions":([  ]), "generated":1379322407, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:1 ]), "options":([ "d":([ "content":"2006-02-14 Rev. 34-35: This update applies to all nippers using the 'prey' library." ]) ]), "socials":([  ]) ]), 385:([ "actions":([  ]), "generated":1379322407, "libraries":([ \<Lib:common\>:([ "get_name":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "doclaim":1, "docreatestats":1, "dodone":1, "dosendemail":1, "dosetassist":1 ]) ]), "objects":([ \<SkotOS:Assistd\>:1, \<Lib:common\>:1, \<Data:info\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "changelog":([ "section":([  ]) ]), "d":([ "content":"Creates a new filed assist" ]), "note":(\{ ([ "content":"\\"!TAS! (\\" + short_time(time()) + \\"): There is an issue the mapping:queues:forward setup. No such queue: \\" +" ]), ([ "content":"\\"!TAS! (\\" + short_time(time()) + \\"): This task has been transferred to server '\\" +" ]), ([ "content":"\$notes + \$note;" ]) \}) ]), "socials":([  ]) ]), 386:([ "actions":([  ]), "generated":1379322408, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:1 ]), "options":([ "d":([ "content":"2006-02-20 Rev. 35-36: This update applies to all nippers using the 'resource-control' library." ]) ]), "socials":([  ]) ]), 387:([ "actions":([  ]), "generated":1379322408, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Adds a flag to an assist" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 388:([ "actions":([  ]), "generated":1379322410, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>:1 ]), "options":([ "d":([ "content":"2006-03-06 Rev. 36-37: This update applies to all nippers using the 'guarding' library." ]) ]), "socials":([  ]) ]), 389:([ "actions":([  ]), "generated":1379322415, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Authority request script. This is generic and useless in most cases, and a secondary library should override it." ]) ]), "socials":([ \<Socials:Verbs:P:peer\>:1 ]) ]), 390:([ "actions":([  ]), "generated":1379322410, "libraries":([ \<Lib:ascii\>:([ "table":1 ]) ]), "objects":([ \<Lib:ascii\>:1 ]), "options":([ "d":([ "content":"List available flags" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 391:([ "actions":([  ]), "generated":1379322415, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:1 ]), "options":([ "d":([ "content":"2006-04-25 Rev. 37-38: This update applies to all nippers using the 'emoting' library." ]) ]), "socials":([  ]) ]), 392:([ "actions":([  ]), "generated":1379322416, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Make sure someone is authorized to enter an exit." ]) ]), "socials":([  ]) ]), 393:([ "actions":([  ]), "generated":1379322415, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Sets your queue focus for subqueues" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 394:([ "actions":([  ]), "generated":1379322416, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>:1 ]), "options":([ "d":([ "content":"2006-04-26 Rev. 38-39: This update applies to all nippers using the 'freemoting' library." ]) ]), "socials":([  ]) ]), 395:([ "actions":([  ]), "generated":1379322416, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Removes a watched assist." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 396:([ "actions":([  ]), "generated":1379322417, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "d":([ "content":"2003-09-23 Rev. 3-4: Default error handler added." ]) ]), "socials":([  ]) ]), 397:([ "actions":([  ]), "generated":1379322419, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:([ "behave":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Neoct:Data:NIP:Relations:Adverbs\>:1, \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "May 15 2006 17:01", "Zwoc" \}), "content":"Initial changelog." ]), ([ "arguments":(\{ "May 22 2006 22:03", "Zwoc" \}), "content":"Added DBGIF and did minor Gimli-cleanup." ]) \}) ]) ]), "d":([ "content":"This script is used by the relations NIP library to determine the type of action performed." ]) ]), "socials":([  ]) ]), 398:([ "actions":([  ]), "generated":1379322417, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Gets the assist from the appropriate object and returns an array." ]) ]), "socials":([  ]) ]), 399:([ "actions":([  ]), "generated":1379322418, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:1 ]), "options":([ "d":([ "content":"2006-08-03 Rev. 39-40: This update applies to all nippers using the 'prey' library." ]) ]), "socials":([  ]) ]), 400:([ "actions":([  ]), "generated":1379322420, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Query a character's relationship in a particular category (\$category) towards me. The relationship is returned as an integer." ]) ]), "socials":([  ]) ]), 401:([ "actions":([  ]), "generated":1379322418, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Lists help or specific help" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 402:([ "actions":([  ]), "generated":1379322419, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:1 ]), "options":([ "d":([ "content":"2006-08-03 Rev. 40-41: This update applies to all nippers using the 'prey' library." ]) ]), "socials":([  ]) ]), 403:([ "actions":([  ]), "generated":1379322421, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:([ "handler:relations":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:1 ]), "options":([ "d":([ "content":"This script \\"pipes\\" commands to lib:handler:relations." ]) ]), "socials":([  ]) ]), 404:([ "actions":([  ]), "generated":1379322419, "libraries":([ \<Lib:common\>:([ "more":1, "wrap":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docharobj":1, "dogetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "changelog":([ "section":([  ]) ]), "d":([ "content":"Lists all the info for an assist." ]), "required":([ "section":([  ]) ]), "revision":([ "content":"\\" + Str(assist[\\"Rev\\"]) + \\"\\\\n\\";" ]) ]), "socials":([  ]) ]), 405:([ "actions":([  ]), "generated":1379322420, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:fighting-fake\>:1 ]), "options":([ "d":([ "content":"2006-08-03 Rev. 41-42: This update applies to all nippers using the 'fighting-fake' library." ]) ]), "socials":([  ]) ]), 406:([ "actions":([  ]), "generated":1379322422, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:([ "handler:relations":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:1 ]), "options":([ "d":([ "content":"This script \\"pipes\\" commands to lib:handler:relations." ]) ]), "socials":([  ]) ]), 407:([ "actions":([  ]), "generated":1379322420, "libraries":([ \<Lib:property\>:([ "listprop":1 ]) ]), "objects":([ \<Lib:property\>:1 ]), "options":([ "d":([ "content":"Initial the general DB" ]) ]), "socials":([  ]) ]), 408:([ "actions":([  ]), "generated":1379322421, "libraries":([ \<Lib:common\>:([ "arr_attach":1, "query_objects":1 ]) ]), "objects":([ \<Lib:common\>:1, \<MOVED:20080918-114107:Lib:NIP:lib:death\>:1 ]), "options":([ "d":([ "content":"2006-10-25 Rev. 42-43: This update applies to all nippers using the 'death' library." ]) ]), "socials":([  ]) ]), 409:([ "actions":([  ]), "generated":1379322421, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Links assists together" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 410:([ "actions":([  ]), "generated":1379322422, "libraries":([ \<Lib:common\>:([ "query_objects":1 ]) ]), "objects":([ \<Lib:common\>:1, \<MOVED:20080918-114107:Lib:NIP:lib:death\>:1 ]), "options":([ "d":([ "content":"2006-10-25 Rev. 43-44: Copycat." ]) ]), "socials":([  ]) ]), 411:([ "actions":([  ]), "generated":1379322422, "libraries":([ \<Lib:common\>:([ "get_name":1, "lookup":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docharobj":1, "docurrent":1, "dogetassist":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Lists all open assist for player" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 412:([ "actions":([  ]), "generated":1379322423, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>:1 ]), "options":([ "d":([ "content":"2003-09-23 Rev. 4-5: react-post:offer-to -=\> react-post:offer-who change." ]) ]), "socials":([  ]) ]), 413:([ "actions":([  ]), "generated":1379322423, "libraries":([ \<Lib:common\>:([ "denied":1, "get_name":1 ]), \<Lib:ascii\>:([ "table":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "doclaim":1, "dogetassist":1, "doqueue":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Decides what to do. List a queue or claim an assist" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 414:([ "actions":([  ]), "generated":1379322424, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"2003-10-28 Rev. 5-6: This update implements the new this.npc feature (set in the parent NPC). The new feature implements a more efficient way of dealing with spawns of NPC's, where instead of brutally copying the properties down to the child, the NPC now has two layers, the property NPC and the spawn NPC." ]) ]), "socials":([  ]) ]), 415:([ "actions":([  ]), "generated":1379322424, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Locks a queue" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 416:([ "actions":([  ]), "generated":1379322425, "libraries":([  ]), "objects":([ \<Lib:NIP:core\>:1 ]), "options":([ "d":([ "content":"2003-11-01 Rev. 6-7: This update replaces the this.npc feature with the nip and nip-core namespace setprop-triggers." ]) ]), "socials":([  ]) ]), 417:([ "actions":([  ]), "generated":1379322427, "libraries":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:([ "debugvalue":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:1 ]), "options":([ "d":([ "content":"return the state descripting for a given state and value" ]) ]), "socials":([  ]) ]), 418:([ "actions":([  ]), "generated":1379322425, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Displays defined queues." ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 419:([ "actions":([  ]), "generated":1379322426, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"2003-11-01 Rev. 7-8: This update removes and re-adds all libraries in the NPC. This is necessary due to the extensive amount of modifications to the system." ]) ]), "socials":([  ]) ]), 420:([ "actions":([  ]), "generated":1379322426, "libraries":([ \<Lib:common\>:([ "reverse_ctime":1 ]), \<Lib:chatlib\>:([ "feed":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1, "dolistwhat":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:common\>:1, \<Lib:chatlib\>:1, \<Data:DB:chat:tas\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Alert line if player logs in and has an assist marked with the Alert flag. Also alert staffer if they have an assist claimed." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 421:([ "actions":([  ]), "generated":1379322427, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"2003-11-01 Rev. 8-9: This update refreshes all NIP and NIP-CORE properties in the NPC." ]) ]), "socials":([  ]) ]), 422:([ "actions":([  ]), "generated":1379322427, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Add a note to the assist" ]), "note":(\{ ([ "content":"The note" ]) \}), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 423:([ "actions":([  ]), "generated":1379322428, "libraries":([ \<Lib:common\>:([ "get_name":1 ]), \<Lib:ascii\>:([ "table":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Checks connected players to see if they have any assists open." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 424:([ "actions":([  ]), "generated":1379322429, "libraries":([ \<Lib:common\>:([ "add_page":1, "lookup":1 ]), \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docharobj":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Sends an opage to the player who filed the task for the assist specified" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 425:([ "actions":([  ]), "generated":1379322430, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dolistwhat":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Shows all open assists" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 426:([ "actions":([  ]), "generated":1379322431, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"For testing TAS popup code" ]) ]), "socials":([  ]) ]), 427:([ "actions":([  ]), "generated":1379322432, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Sets your preferred queue for the +/!tas command queue list" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 428:([ "actions":([  ]), "generated":1379322433, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Change priority of a task" ]) ]), "socials":([  ]) ]), 429:([ "actions":([  ]), "generated":1379322434, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Set a queue as private" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 430:([ "actions":([  ]), "generated":1379322435, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Set a queue as public" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 431:([ "actions":([  ]), "generated":1379322436, "libraries":([ \<Lib:ascii\>:([ "table":1 ]) ]), "objects":([ \<Lib:ascii\>:1 ]), "options":([ "d":([ "content":"Lists the queues" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 432:([ "actions":([  ]), "generated":1379322437, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:ascii\>:([ "table":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:ascii\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Give a queue a description" ]) ]), "socials":([  ]) ]), 433:([ "actions":([  ]), "generated":1379322438, "libraries":([ \<Lib:common\>:([ "wrap":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Displays info for queue" ]), "email":([ "content":"\\", 9) + (member(queue, map_indices(\$data.\\"mapping:queues:email\\")) ? \\"Yes\\" : \\"No\\") + \\"\\\\n\\";" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 434:([ "actions":([  ]), "generated":1379322440, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dolistwhat":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Shows you the content of any queues you are monitoring." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 435:([ "actions":([  ]), "generated":1379322441, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "docurrent":1, "dogetassist":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Shows assists filed in last 24 hours." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 436:([ "actions":([  ]), "generated":1379322442, "libraries":([ \<Lib:common\>:([ "isnan":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docurrent":1, "dogetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Lists the top 25 most recent filed tasks" ]) ]), "socials":([  ]) ]), 437:([ "actions":([  ]), "generated":1379322443, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "doclaim":1, "dodone":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<SkotOS:Assistd\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Relays a task to the relay server" ]), "note":(\{ ([ "content":"\\"!TAS! (\\" + short_time(time()) + \\"): This task has been transfered to server '\\" + capitalize(\$server) + \\"' with ID '\\" + \$id + \\"'.\\\\n\\\\n\\";" ]), ([ "content":"\$notes + \$note;" ]) \}), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 438:([ "actions":([  ]), "generated":1379322444, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Remove a Queue if it does not exist" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 439:([ "actions":([  ]), "generated":1379322445, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Renames a queue and all assists that were members of that queue." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 440:([ "actions":([  ]), "generated":1379322448, "libraries":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:([ "debugtitle":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:1 ]), "options":([ "d":([ "content":"emits the amount of time left for treating someone" ]) ]), "socials":([  ]) ]), 441:([ "actions":([  ]), "generated":1379322446, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Retrieve an assist and dump it back into the new queue to be dealt with as appropriate." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 442:([ "actions":([  ]), "generated":1379322447, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "docreatestats":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Return your assist back to the queue it came from" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 443:([ "actions":([  ]), "generated":1379322448, "libraries":([ \<Lib:common\>:([ "reverse_ctime":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Sticks a task to the specified calendar date" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 444:([ "actions":([  ]), "generated":1379322449, "libraries":([ \<Lib:common\>:([ "convsecs":1, "more":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docurrent":1, "dogetassist":1, "search_decode":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Searches all assists for string." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 445:([ "actions":([  ]), "generated":1379322457, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"put 'a' or 'an' infront of a word" ]) ]), "socials":([  ]) ]), 446:([ "actions":([  ]), "generated":1379322450, "libraries":([ \<Lib:common\>:([ "get_name":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<SkotOS:Assistd\>:1, \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Sends an email for special queues as defined in mapping:queues:email" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 447:([ "actions":([  ]), "generated":1379322458, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:MGeneric:baseobject\>:1 ]), "options":([ "d":([ "content":"store old Generic properties in MGMarrach:players:backup:[X]:[Y]" ]) ]), "socials":([  ]) ]), 448:([ "actions":([  ]), "generated":1379322455, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "docreatesearchdb":1 ]) ]), "objects":([ \<Data:DB:assist:AssistDBTemplate\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Creates a new assist. Sets it in the appropriate DB. Creates a new DB if necessary." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 449:([ "actions":([  ]), "generated":1379322459, "libraries":([ \<MOVED:20080918-114107:MGeneric:DB:WoundDB\>:([ "woundsub":1 ]), \<MOVED:20080918-114107:MGeneric:DB:StateDB\>:([ "setState":1 ]), \<MOVED:20080918-114107:MGeneric:DB:General\>:([ "backuppreconvertedplayer":1, "fetchskilldb":1, "log":1 ]), \<MOVED:20080918-114107:MGeneric:DB:Alteration\>:([ "alterationcode":1 ]) ]), "objects":([ \<Data:MGeneric\>:1, \<MOVED:20080918-114107:MGeneric:DB:WoundDB\>:1, \<MOVED:20080918-114107:MGeneric:DB:StateDB\>:1, \<MOVED:20080918-114107:MGeneric:DB:General\>:1, \<MOVED:20080918-114107:MGeneric:DB:Alteration\>:1 ]), "options":([ "d":([ "content":"convert a Generic character to MGeneric" ]), "state":([ "content":"wound:wound:value\\")\$obj.\\"state:wound:wound:value\\" = nil;" ]) ]), "socials":([  ]) ]), 450:([ "actions":([  ]), "generated":1379322457, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Switches a queue between long and short format" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 451:([ "actions":([  ]), "generated":1379322460, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Emit message to \$actor at debug level 2" ]) ]), "socials":([  ]) ]), 452:([ "actions":([  ]), "generated":1379322458, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "dogetassist":1, "dosetassist":1 ]) ]), "objects":([ \<UserAPI:UDatD\>:1, \<Lib:common\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Shifts alert status from character A to character B" ]) ]), "socials":([  ]) ]), 453:([ "actions":([  ]), "generated":1379322461, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Emit a title message to \$actor at debug level 1 or 2" ]) ]), "socials":([  ]) ]), 454:([ "actions":([  ]), "generated":1379322461, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"bring people back to life" ]) ]), "socials":([  ]) ]), 455:([ "actions":([  ]), "generated":1379322459, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docurrent":1, "dogetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Shows all closed assists for queue" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 456:([ "actions":([  ]), "generated":1379322462, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Emit a variable name and value to \$actor at debug level 2" ]) ]), "socials":([  ]) ]), 457:([ "actions":([  ]), "generated":1379322460, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "doinfo":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Shows info for all assists in queue" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 458:([ "actions":([  ]), "generated":1379322463, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Emit a list of variable names and values to \$actor at debug level 2" ]) ]), "socials":([  ]) ]), 459:([ "actions":([  ]), "generated":1379322461, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1, "doinfo":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Shows all closed assists for queue" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 460:([ "actions":([  ]), "generated":1379322464, "libraries":([ \<SkotOS:Merry\>:([ "register_script_space":1 ]) ]), "objects":([ \<SkotOS:Merry\>:1, \<MGeneric:Data:Marrach:DataDB\>:1, \<MOVED:20080918-114107:MGeneric:DB:WoundDB\>:1, \<MOVED:20080918-114107:MGeneric:DB:StateDB\>:1, \<MOVED:20080918-114107:MGeneric:DB:Morph\>:1, \<MOVED:20080918-114107:MGeneric:DB:Healing\>:1, \<MOVED:20080918-114107:MGeneric:DB:Deconstruction\>:1, \<MOVED:20080918-114107:MGeneric:DB:Death\>:1, \<MOVED:20080918-114107:MGeneric:DB:General\>:1, \<MOVED:20080918-114107:MGeneric:DB:Construction\>:1, \<MOVED:20080918-114107:MGeneric:DB:Alteration\>:1 ]), "options":([ "d":([ "content":"register names spaces for MGeneric" ]) ]), "socials":([  ]) ]), 461:([ "actions":([  ]), "generated":1379322462, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Moves a queue into a subqueue" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 462:([ "actions":([  ]), "generated":1379322463, "libraries":([ \<Lib:common\>:([ "convsecs":1 ]), \<Lib:ascii\>:([ "table":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "docurrent":1, "dogetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Additional Script Testing Space" ]), "optional":([ "section":([  ]) ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 463:([ "actions":([  ]), "generated":1379322464, "libraries":([ \<Lib:common\>:([ "convsecs":1 ]), \<Lib:ascii\>:([ "table":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Displays Assist Statistics" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 464:([ "actions":([  ]), "generated":1379322465, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1, "doclaim":1, "docreatestats":1, "dodone":1, "dogetassist":1, "dosendemail":1, "dosetassist":1 ]) ]), "objects":([ \<SkotOS:Assistd\>:1, \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Transfers open assists from one queue to another." ]), "note":(\{ ([ "content":"\\"!TAS! (\\" + short_time(time()) + \\"): This task has been transferred to server '\\" + capitalize(\$server) + \\"' with ID '\\" + \$id + \\"'.\\\\n\\\\n\\";" ]), ([ "content":"\$notes + \$note;" ]), ([ "content":"\\"!TAS! (\\" + short_time(time()) + \\"): Transferred from \\" + capitalize(\$oldqueue) + \\" to \\" + capitalize(queue) + \\" by \\" + chat::get_prefername(\$channel: \\"tas\\", \$user: \$actor) + \\".\\\\n\\\\n\\";" ]), ([ "content":"\$notes + \$note;" ]) \}), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 465:([ "actions":([  ]), "generated":1379322466, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "create_tree":1, "create_tree_output":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Tree listing of all queues" ]) ]), "socials":([  ]) ]), 466:([ "actions":([  ]), "generated":1379322467, "libraries":([ \<Lib:Assist:lib:assistlibs\>:([ "dogetassist":1 ]) ]), "objects":([ \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"TWikize the output for easy copy and paste into twiki" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 467:([ "actions":([  ]), "generated":1379322468, "libraries":([ \<Lib:chatlib\>:([ "get_prefername":1 ]), \<Lib:Assist:lib:assistlibs\>:([ "dochatfeed":1 ]) ]), "objects":([ \<Lib:chatlib\>:1, \<Lib:Assist:lib:assistlibs\>:1 ]), "options":([ "d":([ "content":"Unlocks a queue" ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 468:([ "actions":([  ]), "generated":1379322469, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Watches an assist for changes. Alerts you on login." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 469:([ "actions":([  ]), "generated":1379322470, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Interpret (string) value in SearchDB bigmap." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 470:([ "actions":([  ]), "generated":1379322471, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Create string value from array (of integers), for SearchDB bigmap." ]), "required":([ "section":([  ]) ]) ]), "socials":([  ]) ]), 471:([ "actions":([  ]), "generated":1379322480, "libraries":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:([ "debugmessage":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:1 ]), "options":([ "d":([ "content":"report an error" ]) ]), "socials":([  ]) ]), 472:([ "actions":([  ]), "generated":1379322483, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:API\>:([ "area_trigger_rcontrol":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:1, \<MOVED:20080918-114107:Lib:NIP:API\>:1 ]), "options":([ "d":([ "content":"Resource control trigger for a specific area." ]), "syntax":([ "content":"NPC::area_trigger_rcontrol( object \$room, int \$radius );" ]) ]), "socials":([  ]) ]), 473:([ "actions":([  ]), "generated":1379322484, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"item already altered and do not have skill level to alter again" ]) ]), "socials":([  ]) ]), 474:([ "actions":([  ]), "generated":1379322485, "libraries":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:([ "debugvalue":1 ]), \<MOVED:20080918-114107:MGeneric:DB:Alteration\>:([ "alterationcode":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:1, \<MOVED:20080918-114107:MGeneric:DB:Alteration\>:1 ]), "options":([ "d":([ "content":"Move a tattoo from one detail to another" ]) ]), "socials":([  ]) ]), 475:([ "actions":([  ]), "generated":1379322484, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Deliver items for a particular recipient, presuming a courier is nearby." ]) ]), "socials":([  ]) ]), 476:([ "actions":([  ]), "generated":1379322485, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Shut \$NPC down." ]) ]), "socials":([  ]) ]), 477:([ "actions":([  ]), "generated":1379322486, "libraries":([ \<Lib:common\>:([ "lookup":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Enqueue an item (\$item) for delivery into \$database." ]) ]), "socials":([  ]) ]), 478:([ "actions":([  ]), "generated":1379322487, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<Lib:ascii\>:([ "table":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<Data:DB:areport\>:1 ]), "options":([ "d":([ "content":"Activity report command." ]), "syntax":([ "content":"\\\\n\\\\n+areport \<list\> [\{final\|add\|sub\} [\<character\>]]\\\\n\\\\nExample:\\\\n\\\\n+areport vps\\\\n\\" + TAG( \\"Display the report for the 'vps' list (non-final).\\", \\"imp\\" ) + \\"\\\\n\\\\n+areport vps final\\\\n\\" + TAG( \\"Display the final report for the 'vps' list and\\\\nRESET IT!\\", \\"imp\\" ) + \\"\\\\n\\\\n+areport vps add lucy\\\\n\\" + TAG( \\"Add the character body 'Lucy' to the 'vps' list.\\", \\"imp\\" ) + \\"\\\\n\\\\n+areport vps sub lucy\\\\n\\" + TAG( \\"Remove the character body 'Lucy' from the 'vps' list.\\", \\"imp\\" ) + \\"\\\\n\\" ));" ]) ]), "socials":([  ]) ]), 479:([ "actions":([  ]), "generated":1379322487, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"i" ]) ]), "socials":([  ]) ]), 480:([ "actions":([  ]), "generated":1379322489, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:API\>:([ "log":1, "purge_deliveries":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:API\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-02-06", "Zwoc" \}), "content":"Added \\"nip:mail:nodelivery\\" support." ]) \}) ]) ]), "d":([ "content":"Purge all over-aged deliveries in the database." ]) ]), "socials":([  ]) ]), 481:([ "actions":([  ]), "generated":1379322490, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:API\>:([ "log":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:API\>:1, \<Data:NIP:servants:trashcan\>:1 ]), "options":([ "d":([ "content":"Purge trash that is 1+ day old." ]) ]), "socials":([  ]) ]), 482:([ "actions":([  ]), "generated":1379322491, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:([ "behave":1, "family_resolve":1, "handler_freemote":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-02-03", "Zwoc" \}), "content":"Added \\"pre-parse-execution\\" flag which lets executions manipulate parser variables." ]), ([ "arguments":(\{ "2006-03-22", "Zwoc" \}), "content":"Added \\"nip:trait:communicate:log-to\\" feature." ]), ([ "arguments":(\{ "Apr 14 2006 20:39", "Zwoc" \}), "content":"Added behavior for when asleep ('is-sleeping' mood in regular db)." ]) \}) ]) ]), "d":([ "content":"Process a sentence (\$evoke_to_npc) and return a result spoken string." ]) ]), "socials":([  ]) ]), 483:([ "actions":([  ]), "generated":1379322491, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"FALSE;" ]) ]), "socials":([  ]) ]), 484:([ "actions":([  ]), "generated":1379322492, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:([ "family_resolve":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-22", "Zwoc" \}), "content":"Added changelog to script." ]) \}) ]) ]), "d":([ "content":"Resolve a family array and return success/failure." ]) ]), "socials":([  ]) ]), 485:([ "actions":([  ]), "generated":1379322492, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:API\>:([ "trigger_rcontrol":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:1, \<MOVED:20080918-114107:Lib:NIP:API\>:1 ]), "options":([ "d":([ "content":"Resource control trigger for a specific room." ]), "syntax":([ "content":"NPC::trigger_rcontrol( object \$room );" ]) ]), "socials":([  ]) ]), 486:([ "actions":([  ]), "generated":1379322493, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Evoke response for the communicate lib." ]) ]), "socials":([  ]) ]), 487:([ "actions":([  ]), "generated":1379322494, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Evoke response for the communicate lib." ]) ]), "socials":([  ]) ]), 488:([ "actions":([  ]), "generated":1379322495, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:([ "shutdown":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:1 ]), "options":([ "d":([ "content":"Simplified death handler." ]) ]), "socials":([  ]) ]), 489:([ "actions":([  ]), "generated":1379322496, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"clear out the detailed description for the detail. Used when default detail changed" ]) ]), "socials":([  ]) ]), 490:([ "actions":([  ]), "generated":1379322496, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:([ "behave":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:1 ]), "options":([ "d":([ "content":"The prey defend script, which calculates the outcome of a hunter/prey situation." ]) ]), "socials":([  ]) ]), 491:([ "actions":([  ]), "generated":1379322497, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:([ "shutdown":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:1, \<Lib:NIP:lib:prey\>:1 ]), "options":([ "d":([ "content":"The prey die script, which turns an NPC into a dead body." ]), "note":(\{ ([ "content":"This solution is not recommended, and is to circumvent a bug in SAM." ]), ([ "content":"This solution is not recommended, and is to circumvent a bug in SAM." ]) \}), "todo":(\{ ([ "content":"Replace with a custom behavior situation." ]), ([ "content":"Replace with behavior set." ]) \}) ]), "socials":([  ]) ]), 492:([ "actions":([  ]), "generated":1379322498, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:EXT:prey-chunk\>:1 ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Feb 14 11:34, 2006", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Someone took a chunk outta me!" ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Feb 14 11:34, 2006" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 493:([ "actions":([  ]), "generated":1379322499, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script modifies the mass of the target accordingly." ]) ]), "socials":([  ]) ]), 494:([ "actions":([  ]), "generated":1379322499, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Set volition in spawned children automatically." ]) ]), "socials":([  ]) ]), 495:([ "actions":([  ]), "generated":1379322500, "libraries":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:([ "behave":1 ]) ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:1 ]), "options":([ "d":([ "content":"Attack prey script." ]) ]), "socials":([  ]) ]), 496:([ "actions":([  ]), "generated":1379322500, "libraries":([ \<Lib:common\>:([ "arr_attach":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Unset volition." ]) ]), "socials":([  ]) ]), 497:([ "actions":([  ]), "generated":1379322501, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The predator replacement for the eating offers handler." ]) ]), "socials":([  ]) ]), 498:([ "actions":([  ]), "generated":1379322502, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-02-14", "Zwoc" \}), "content":"Initiated changelog." ]) \}) ]) ]), "d":([ "content":"This script is executed 1) when the predator hook is loaded, and 2) whenever another hook is loaded." ]) ]), "socials":([  ]) ]), 499:([ "actions":([  ]), "generated":1379322503, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"The random traits start-handler." ]) ]), "socials":([  ]) ]), 500:([ "actions":([  ]), "generated":1379322503, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Determine whether we choose to attack nearby prey or not." ]) ]), "socials":([  ]) ]), 501:([ "actions":([  ]), "generated":1379322504, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Attach our traits script to the start-script chain." ]) ]), "socials":([  ]) ]), 502:([ "actions":([  ]), "generated":1379322507, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"emit for fatal wound" ]) ]), "socials":([  ]) ]), 503:([ "actions":([  ]), "generated":1379322511, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Snake-mod to the description of eating food." ]) ]), "socials":([  ]) ]), 504:([ "actions":([  ]), "generated":1379322511, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"perform emits for bandage unravelling when wounded in bandaged location" ]) ]), "socials":([  ]) ]), 505:([ "actions":([  ]), "generated":1379322515, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Add catalog" ]) ]), "socials":([  ]) ]), 506:([ "actions":([  ]), "generated":1379322516, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Add a group" ]) ]), "socials":([  ]) ]), 507:([ "actions":([  ]), "generated":1379322517, "libraries":([ \<SLib:common\>:([ "lookup":1 ]), \<Lib:woe\>:([ "objects":1 ]) ]), "objects":([ \<SLib:common\>:1, \<Lib:woe\>:1 ]), "options":([ "d":([ "content":"Figure out what to add" ]) ]), "socials":([  ]) ]), 508:([ "actions":([  ]), "generated":1379322518, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Attach a group to a catalog" ]) ]), "socials":([  ]) ]), 509:([ "actions":([  ]), "generated":1379322519, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Parse argument mapping and return the first resulting string encountered." ]) ]), "socials":([  ]) ]), 510:([ "actions":([  ]), "generated":1379322519, "libraries":([  ]), "objects":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:1, \<Data:DB:catalog:db:catalogdb\>:1 ]), "options":([ "d":([ "content":"Figure out what to do" ]) ]), "socials":([  ]) ]), 511:([ "actions":([  ]), "generated":1379322520, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Figure out what to create" ]) ]), "socials":([  ]) ]), 512:([ "actions":([  ]), "generated":1379322521, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Figure out what to list" ]) ]), "socials":([  ]) ]), 513:([ "actions":([  ]), "generated":1379322522, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"List the help, duh. I'm not sure I can get anymore explananitive than that." ]) ]), "socials":([  ]) ]), 514:([ "actions":([  ]), "generated":1379322523, "libraries":([  ]), "objects":([  ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Mar 18, 2004", "Zwoc" \}), "content":"Allowed prepositions 'beneath' and 'under'." ]), ([ "arguments":(\{ "Jul  5, 2006", "Zwoc" \}), "content":"Fixed placement of items into closed containers." ]) \}) ]) ]), "d":([ "content":"The 'throw' version (by Kalle) of the 'place' system (by Zell). No prox, but consent preserved." ]) ]), "socials":([  ]) ]), 515:([ "actions":([  ]), "generated":1379322523, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This code lists all the catalogs" ]) ]), "socials":([  ]) ]), 516:([ "actions":([  ]), "generated":1379322524, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This code lists the various groups" ]) ]), "socials":([  ]) ]), 517:([ "actions":([  ]), "generated":1379322525, "libraries":([ \<SLib:common\>:([ "lookup":1 ]) ]), "objects":([ \<SLib:common\>:1 ]), "options":([ "d":([ "content":"Figure out what to list. Either contents of a catalog, contents of a group of the list of groups that a character belongs to." ]) ]), "socials":([  ]) ]), 518:([ "actions":([  ]), "generated":1379322526, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Remove a catalog" ]) ]), "socials":([  ]) ]), 519:([ "actions":([  ]), "generated":1379322527, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This script will interpret an action and decide whether it's positive or negative, and whether it's ranged or touching, as well as its strength." ]) ]), "socials":([  ]) ]), 520:([ "actions":([  ]), "generated":1379322527, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Remove a group" ]) ]), "socials":([  ]) ]), 521:([ "actions":([  ]), "generated":1379322528, "libraries":([ \<SLib:common\>:([ "lookup":1 ]), \<Lib:woe\>:([ "objects":1 ]) ]), "objects":([ \<SLib:common\>:1, \<Lib:woe\>:1 ]), "options":([ "d":([ "content":"Figure out what to remove" ]) ]), "socials":([  ]) ]), 522:([ "actions":([  ]), "generated":1229161240, "libraries":([  ]), "objects":([ \<Lib:objects\>:1 ]), "options":([ "d":([ "content":"Create an object/propcontainer/etc." ]), "syntax":([ "content":"\\\\n\\\\n\\";" ]) ]), "socials":([  ]) ]), 523:([ "actions":([  ]), "generated":1379322531, "libraries":([  ]), "objects":([ \<Data:info\>:1, \<Lib:args\>:1 ]), "options":([ "d":([ "content":"+see command action." ]) ]), "socials":([  ]) ]), 524:([ "actions":([  ]), "generated":1379322532, "libraries":([  ]), "objects":([ \<UserAPI:UDatD\>:1, \<SLib:common\>:1 ]), "options":([ "d":([ "content":"Add an account to \$actor's SEE-list." ]) ]), "socials":([  ]) ]), 525:([ "actions":([  ]), "generated":1379322533, "libraries":([  ]), "objects":([ \<UserAPI:UDatD\>:1, \<SLib:common\>:1, \<Data:DB:+see\>:1 ]), "options":([ "d":([ "content":"Remove an account from a group (optionally by character name)." ]) ]), "socials":([  ]) ]), 526:([ "actions":([  ]), "generated":1379322534, "libraries":([  ]), "objects":([ \<UserAPI:UDatD\>:1, \<SLib:common\>:1, \<Data:DB:+see\>:1 ]), "options":([ "d":([ "content":"Add an account (by character name) to a SEE-group." ]) ]), "socials":([  ]) ]), 527:([ "actions":([  ]), "generated":1379322535, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Perform a wounding." ]), "syntax":([ "content":"" ]) ]), "socials":([  ]) ]), 528:([ "actions":([  ]), "generated":1379322535, "libraries":([  ]), "objects":([ \<UserAPI:UDatD\>:1, \<Data:DB:+see\>:1 ]), "options":([ "d":([ "content":"Disband a SEE-group." ]) ]), "socials":([  ]) ]), 529:([ "actions":([  ]), "generated":1379322536, "libraries":([  ]), "objects":([ \<Data:DB:+see\>:1 ]), "options":([ "d":([ "content":"Get a group." ]) ]), "socials":([  ]) ]), 530:([ "actions":([  ]), "generated":1379322537, "libraries":([ \<Neoct:Staff:Actions:+see\>:([ "get_group":1 ]) ]), "objects":([ \<Data:DB:+see\>:1, \<Neoct:Staff:Actions:+see\>:1 ]), "options":([ "d":([ "content":"Add a group to the actor's list." ]) ]), "socials":([  ]) ]), 531:([ "actions":([  ]), "generated":1379322538, "libraries":([ \<Lib:common\>:([ "wholist":1 ]), \<Neoct:Staff:Actions:+see\>:([ "get_group":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Data:DB:+see\>:1, \<Neoct:Staff:Actions:+see\>:1 ]), "options":([ "d":([ "content":"List a specific SEE-group's members." ]) ]), "socials":([  ]) ]), 532:([ "actions":([  ]), "generated":1379322539, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1, "createcoveragetodetail":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2006-03-17", "Zwoc" \}), "content":"Tweaked script heavily, to optimize usage of base:parts-covered, and sizeof. Also -= (\{ nil \})'d \$articles due to error log complaints about missing object." ]) \}) ]) ]), "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 533:([ "actions":([  ]), "generated":1379322539, "libraries":([ \<Neoct:Staff:Actions:+see\>:([ "get_group":1 ]) ]), "objects":([ \<Data:DB:+see\>:1, \<Neoct:Staff:Actions:+see\>:1 ]), "options":([ "d":([ "content":"Remove a group from the actor's list." ]) ]), "socials":([  ]) ]), 534:([ "actions":([  ]), "generated":1379322540, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1, "createcoveragetodetail":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 535:([ "actions":([  ]), "generated":1379322540, "libraries":([  ]), "objects":([ \<Data:DB:+see\>:1 ]), "options":([ "d":([ "content":"List the existing SEE-groups." ]) ]), "socials":([  ]) ]), 536:([ "actions":([  ]), "generated":1379322541, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"List the \$actor's SEE-list." ]) ]), "socials":([  ]) ]), 537:([ "actions":([  ]), "generated":1379322542, "libraries":([ \<MOVED:20080918-114107:MGeneric:DB:Healing\>:([ "showhealingtime":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:DB:Healing\>:1 ]), "options":([ "d":([ "content":"shows remaining treatment time" ]) ]), "socials":([  ]) ]), 538:([ "actions":([  ]), "generated":1379322543, "libraries":([ \<Lib:common\>:([ "convsecs":1, "wholist":1 ]), \<Lib:ascii\>:([ "table":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:ascii\>:1, \<SLib:staff\>:1 ]), "options":([ "d":([ "content":"Merryized version of the 'who' list" ]) ]), "socials":([  ]) ]), 539:([ "actions":([  ]), "generated":1379322542, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Disable SEE notifications." ]) ]), "socials":([  ]) ]), 540:([ "actions":([  ]), "generated":1379322544, "libraries":([ \<Lib:common\>:([ "wholist":1 ]) ]), "objects":([ \<Lib:common\>:1, \<SLib:staff\>:1 ]), "options":([ "d":([ "content":"Merryized version of the 'who' list" ]) ]), "socials":([  ]) ]), 541:([ "actions":([  ]), "generated":1379322543, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Enable SEE notifications." ]) ]), "socials":([  ]) ]), 542:([ "actions":([  ]), "generated":1379322545, "libraries":([ \<Lib:common\>:([ "wholist":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Merryized version of the 'who' list" ]) ]), "socials":([  ]) ]), 543:([ "actions":([  ]), "generated":1379322544, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Display SEE scrollback buffer." ]) ]), "socials":([  ]) ]), 544:([ "actions":([  ]), "generated":1379322545, "libraries":([  ]), "objects":([ \<UserAPI:UDatD\>:1, \<SLib:common\>:1 ]), "options":([ "d":([ "content":"Subtract an account from \$actor's SEE-list." ]) ]), "socials":([  ]) ]), 545:([ "actions":([  ]), "generated":1379322547, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"clear the descriptions cache" ]) ]), "socials":([  ]) ]), 546:([ "actions":([  ]), "generated":1379322551, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they are not wounded and therefore do not need healing" ]) ]), "socials":([  ]) ]), 547:([ "actions":([  ]), "generated":1379322548, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"generate the converagetodetail mapping from the detailtocoverage mapping" ]) ]), "socials":([  ]) ]), 548:([ "actions":([  ]), "generated":1379322552, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to describe apply bandages" ]) ]), "socials":([  ]) ]), 549:([ "actions":([  ]), "generated":1379322553, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they cannot bandage an area as it is covered by clothing" ]) ]), "socials":([  ]) ]), 550:([ "actions":([  ]), "generated":1379322554, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they are already healing someone" ]) ]), "socials":([  ]) ]), 551:([ "actions":([  ]), "generated":1379322555, "libraries":([ \<Lib:common\>:([ "lookup":1 ]) ]), "objects":([ \<Lib:common\>:1 ]), "options":([ "d":([ "content":"Disable a property (like a follow or restrain)." ]) ]), "socials":([  ]) ]), 552:([ "actions":([  ]), "generated":1379322555, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they cannot bandage an area as it is covered by clothing" ]) ]), "socials":([  ]) ]), 553:([ "actions":([  ]), "generated":1379322556, "libraries":([ \<Lib:common\>:([ "lookup":1 ]), \<Lib:inv\>:([ "resolve_raw":1 ]) ]), "objects":([ \<Lib:common\>:1, \<Lib:inv\>:1 ]), "options":([ "d":([ "content":"Enable a property in a body." ]) ]), "socials":([  ]) ]), 554:([ "actions":([  ]), "generated":1379322556, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the patient that their doctor has been disconnected for too long" ]) ]), "socials":([  ]) ]), 555:([ "actions":([  ]), "generated":1379322557, "libraries":([  ]), "objects":([  ]), "options":([ "author":([ "content":"Kalle Alm" ]), "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "Sep  9 21:50, 2005", "Zwoc" \}), "content":"Added script to codebase." ]) \}) ]) ]), "d":([ "content":"Remove all followers." ]), "email":([ "content":"kalle@mortalis.skotos.net" ]), "since":([ "content":"Sep  9 21:50, 2005" ]), "state":([ "content":"EXPERIMENTAL" ]) ]), "socials":([  ]) ]), 556:([ "actions":([  ]), "generated":1379322557, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the doctor that their patient has been missing for too long" ]) ]), "socials":([  ]) ]), 557:([ "actions":([  ]), "generated":1379322558, "libraries":([ \<Lib:follows\>:([ "disable":1 ]) ]), "objects":([ \<Lib:follows\>:1 ]), "options":([ "d":([ "content":"Release someone restrained." ]) ]), "socials":([  ]) ]), 558:([ "actions":([  ]), "generated":1379322558, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they are feeling better now" ]) ]), "socials":([  ]) ]), 559:([ "actions":([  ]), "generated":1379322559, "libraries":([ \<Lib:follows\>:([ "enable":1 ]) ]), "objects":([ \<Lib:follows\>:1 ]), "options":([ "d":([ "content":"Restrain someone." ]) ]), "socials":([  ]) ]), 560:([ "actions":([  ]), "generated":1379322559, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the doctor that the treatment time for the patient has finished successfully" ]), "note":(\{ ([ "content":"You are responsible for informing your patient of this.]\\");" ]) \}) ]), "socials":([  ]) ]), 561:([ "actions":([  ]), "generated":1379322560, "libraries":([ \<Lib:follows\>:([ "enable":1 ]) ]), "objects":([ \<Lib:follows\>:1 ]), "options":([ "d":([ "content":"Start following someone." ]) ]), "socials":([  ]) ]), 562:([ "actions":([  ]), "generated":1379322560, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player and the doctor that treatment has stopped as they are no longer in the same room" ]) ]), "socials":([  ]) ]), 563:([ "actions":([  ]), "generated":1379322557, "libraries":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:([ "debugtitle":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:DB:General\>:1 ]), "options":([ "d":([ "content":"sets a person to be left or right handed or none (default to right as main detail but do not show left or right in brief)" ]) ]), "socials":([  ]) ]), 564:([ "actions":([  ]), "generated":1379322566, "libraries":([ \<Lib:follows\>:([ "disable":1 ]) ]), "objects":([ \<Lib:follows\>:1 ]), "options":([ "d":([ "content":"Stop following." ]) ]), "socials":([  ]) ]), 565:([ "actions":([  ]), "generated":1379322567, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they have no skill as a healer" ]) ]), "socials":([  ]) ]), 566:([ "actions":([  ]), "generated":1379322568, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"This is an ugly hack to prevent follows from being broken when passing guards." ]) ]), "socials":([  ]) ]), 567:([ "actions":([  ]), "generated":1379322568, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they cannot heal that severity of wound" ]) ]), "socials":([  ]) ]), 568:([ "actions":([  ]), "generated":1379322569, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they are not wounded and therefore do not need healing" ]) ]), "socials":([  ]) ]), 569:([ "actions":([  ]), "generated":1379322570, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the doctor that the person they were healing has removed their bandage halting the treatment process" ]) ]), "socials":([  ]) ]), 570:([ "actions":([  ]), "generated":1379322569, "libraries":([ \<Lib:emitter\>:([ "emit":1 ]) ]), "objects":([ \<Data:DB:emitter\>:1, \<Lib:emitter\>:1 ]), "options":([ "d":([ "content":"Emitter daemon." ]) ]), "socials":([  ]) ]), 571:([ "actions":([  ]), "generated":1379322571, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the player that they require bandages to heal someone" ]) ]), "socials":([  ]) ]), 572:([ "actions":([  ]), "generated":1379322570, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Disable an emitter for \$channel." ]) ]), "socials":([  ]) ]), 573:([ "actions":([  ]), "generated":1379322572, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"overridable emit to inform the healing player of treatment and healing times" ]), "note":(\{ ([ "content":"You are responsible for informing your patient of this.]\\");" ]) \}) ]), "socials":([  ]) ]), 574:([ "actions":([  ]), "generated":1379322569, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 575:([ "actions":([  ]), "generated":1379322571, "libraries":([  ]), "objects":([ \<Data:DB:emitter\>:1 ]), "options":([ "d":([ "content":"Possibly perform emits for \$area." ]) ]), "socials":([  ]) ]), 576:([ "actions":([  ]), "generated":1379322570, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 577:([ "actions":([  ]), "generated":1379322572, "libraries":([  ]), "objects":([ \<Lib:emitter\>:1 ]), "options":([ "d":([ "content":"Enable an emitter for \$channel." ]) ]), "socials":([  ]) ]), 578:([ "actions":([  ]), "generated":1379322571, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 579:([ "actions":([  ]), "generated":1379322573, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Initialize popup." ]) ]), "socials":([  ]) ]), 580:([ "actions":([  ]), "generated":1379322572, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "createcoveragetodetail":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"create coveragetodetail mapping if detailtocoverage mapping altered" ]) ]), "socials":([  ]) ]), 581:([ "actions":([  ]), "generated":1379322574, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Linkdie." ]) ]), "socials":([  ]) ]), 582:([ "actions":([  ]), "generated":1379322573, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 583:([ "actions":([  ]), "generated":1379322575, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Login." ]) ]), "socials":([  ]) ]), 584:([ "actions":([  ]), "generated":1379322574, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 585:([ "actions":([  ]), "generated":1379322576, "libraries":([ \<Lib:emitter\>:([ "linkdie":1 ]) ]), "objects":([ \<Lib:emitter\>:1 ]), "options":([ "d":([ "content":"Logout." ]) ]), "socials":([  ]) ]), 586:([ "actions":([  ]), "generated":1379322575, "libraries":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:([ "cleardescriptionscache":1 ]) ]), "objects":([ \<MOVED:20080918-114107:MGeneric:UrAvatar\>:1 ]), "options":([ "d":([ "content":"flush descriptions cache when alterations made" ]) ]), "socials":([  ]) ]), 587:([ "actions":([  ]), "generated":1379322577, "libraries":([ \<Lib:emitter\>:([ "disable":1, "enable":1 ]) ]), "objects":([ \<Lib:emitter\>:1 ]), "options":([ "d":([ "content":"Store popup data." ]) ]), "socials":([  ]) ]), 588:([ "actions":([  ]), "generated":1379322578, "libraries":([  ]), "objects":([ \<Data:DB:emitter\>:1 ]), "options":([ "d":([ "content":"Tweak population for \$actor." ]) ]), "socials":([  ]) ]), 589:([ "actions":([  ]), "generated":1379322579, "libraries":([ \<Lib:emitter\>:([ "tweak_pop":1 ]) ]), "objects":([ \<Lib:emitter\>:1 ]), "options":([ "d":([ "content":"Someone entered this room (we reacted to them emerging \\"from\\" a detail in us)." ]) ]), "socials":([  ]) ]), 590:([ "actions":([  ]), "generated":1379322580, "libraries":([ \<Lib:emitter\>:([ "tweak_pop":1 ]) ]), "objects":([ \<Lib:emitter\>:1 ]), "options":([ "d":([ "content":"Someone left this room (we reacted to them entering \\"INTO\\" a detail \\"in us\\")." ]) ]), "socials":([  ]) ]), 591:([ "actions":([  ]), "generated":1379322581, "libraries":([ \<Lib:emitter\>:([ "tweak_pop":1 ]) ]), "objects":([ \<Lib:emitter\>:1 ]), "options":([ "d":([ "content":"Someone teleported into this room." ]) ]), "socials":([  ]) ]), 592:([ "actions":([  ]), "generated":1379322571, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Clears a character from the 'isplaying' map of the database." ]) ]), "socials":([  ]) ]), 593:([ "actions":([  ]), "generated":1379322572, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Finds current instrument for actor from the 'isplaying' map of the database." ]) ]), "socials":([  ]) ]), 594:([ "actions":([  ]), "generated":1379322573, "libraries":([ \<Ironclaw:Lib:Skills:Music\>:([ "get-groupstatus":1 ]) ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1, \<Ironclaw:Lib:Skills:Music\>:1 ]), "options":([ "d":([ "content":"Finds the leader of a musical group." ]) ]), "socials":([  ]) ]), 595:([ "actions":([  ]), "generated":1379322574, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Determines if actor is playing solo, as a member of a group, or as a leader of a group." ]) ]), "socials":([  ]) ]), 596:([ "actions":([  ]), "generated":1379322575, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Finds list of current members in musical group." ]) ]), "socials":([  ]) ]), 597:([ "actions":([  ]), "generated":1379322576, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Finds a qualitative adjective used when creating music." ]) ]), "socials":([  ]) ]), 598:([ "actions":([  ]), "generated":1379322577, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Obtains the time an actor or group starting playing an instrument." ]) ]), "socials":([  ]) ]), 599:([ "actions":([  ]), "generated":1379322578, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Script to determine style of instrumental." ]) ]), "socials":([  ]) ]), 600:([ "actions":([  ]), "generated":1379322579, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Finds a list of tools used to create music." ]) ]), "socials":([  ]) ]), 601:([ "actions":([  ]), "generated":1379322580, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Finds a list of verbs used to create music." ]) ]), "socials":([  ]) ]), 602:([ "actions":([  ]), "generated":1379322581, "libraries":([ \<Ironclaw:Lib:Skills:Music\>:([ "clear-mapping":1, "get-members":1, "get-quality":1, "get-starttime":1, "get-style":1, "get-tools":1, "get-verbs":1, "play_replace_strings":1 ]) ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1, \<Ironclaw:Lib:Skills:Music\>:1 ]), "options":([ "d":([ "content":"Script to handle Group instrumentals." ]) ]), "socials":([  ]) ]), 603:([ "actions":([  ]), "generated":1379322582, "libraries":([  ]), "objects":([  ]), "options":([ "d":([ "content":"Handles the Player Help file for using instruments." ]) ]), "socials":([  ]) ]), 604:([ "actions":([  ]), "generated":1379322583, "libraries":([ \<Ironclaw:Lib:Skills:Music\>:([ "play-group":1, "play-solo":1, "set-data":1 ]) ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1, \<Ironclaw:Lib:Skills:Music\>:1 ]), "options":([ "d":([ "content":"Post action for playing instruments." ]), "note":(\{ ([ "content":"If joining an existing group, there need be no additional call made." ]) \}) ]), "socials":([  ]) ]), 605:([ "actions":([  ]), "generated":1379322584, "libraries":([ \<Ironclaw:Lib:Skills:Music\>:([ "clear-mapping":1, "find-leader":1, "get-groupstatus":1, "get-members":1, "get-starttime":1, "play-helpfile":1, "play-stylefile":1 ]) ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1, \<Ironclaw:Lib:Skills:Music\>:1 ]), "options":([ "d":([ "content":"Start of playing an instrument." ]) ]), "socials":([  ]) ]), 606:([ "actions":([  ]), "generated":1379322585, "libraries":([ \<Ironclaw:Lib:Skills:Music\>:([ "clear-mapping":1, "get-groupstatus":1, "get-quality":1, "get-starttime":1, "get-style":1, "get-tools":1, "get-verbs":1, "play_replace_strings":1 ]) ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1, \<Ironclaw:Lib:Skills:Music\>:1 ]), "options":([ "d":([ "content":"Script to handle Solo instrumentals." ]) ]), "socials":([  ]) ]), 607:([ "actions":([  ]), "generated":1379322586, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Displays a list of styles included in the Music system." ]) ]), "socials":([  ]) ]), 608:([ "actions":([  ]), "generated":1379322587, "libraries":([ \<Ironclaw:Lib:Skills:Music\>:([ "find-leader":1, "get-groupstatus":1, "get-members":1 ]) ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1, \<Ironclaw:Lib:Skills:Music\>:1 ]), "options":([ "d":([ "content":"Handles word replacements and music emits." ]) ]), "socials":([  ]) ]), 609:([ "actions":([  ]), "generated":1379322588, "libraries":([  ]), "objects":([ \<Ironclaw:Lib:Skills:MusicDB\>:1 ]), "options":([ "d":([ "content":"Places player data into database mapping." ]) ]), "socials":([  ]) ]), 610:([ "actions":([  ]), "generated":1379322225, "libraries":([ \<Shared:sys:Merry:+t2\>:([ "var_exam":1 ]) ]), "objects":([ \<Shared:sys:Merry:+t2\>:1 ]), "options":([ "changelog":([ "section":([ "change":(\{ ([ "arguments":(\{ "2004-10-31", "Zwoc" \}), "content":"Optimized heartbeat thread to use npc:sys namespace over nip-core, due to trigger effect." ]) \}) ]) ]), "d":([ "content":"This script is the heartbeat thread. It runs 24/7 on all active CNPC's, and is responsible for everything spontaneous." ]), "summary":([ "content":"The heartbeat thread is built up of hooks and signals.  Each signal is executed according to its priority, and each hook in each  signal is called according to its named priority (pre, regular, exec, post)  specified in Data:NIP:system/executors.   More information on this topic, and how to write your own hooks/signals, is available  on builder's TWiki at:    http://troll.skotos.net/twiki/bin/view/Builders/NIPSystemReference" ]) ]), "socials":([  ]) ]) ]) ])
      </Core:Property>
      <Core:Property property="preserved">
         ([ "\\"practice\\" version of the exact same script as the blow-dob script. this one reaches about one step away from the actor.":([ \<Lib:instruments\>:"\\"Practice\\" version of the exact same script as the blow-dob script. This one reaches about one step away from the actor." ]), "'more' system command.":([ \<Lib:common\>:"'MORE' system command." ]), "+lastseen -- sets sessiontime and total which determine average amount of seconds a character stays connected per connection.":([ \<Lib:connection\>:"+lastseen -- Sets sessiontime and total which determine average amount of seconds a character stays connected per connection." ]), "+ncs '+people' request.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"+NCS '+people' request." ]), "+ncs 'status' request.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"+NCS 'status' request." ]), "+see command action.":([ \<Neoct:Staff:Actions:+see\>:"+see command action." ]), "+see linkdie (dc) script.":([ \<Lib:connection\>:"+see linkdie (DC) script." ]), "+see login script.":([ \<Lib:connection\>:"+see login script." ]), "+see notification script":([ \<Lib:connection\>:"+see notification script" ]), "+see quit script.":([ \<Lib:connection\>:"+see quit script." ]), "2003-08-31 rev. 0-1: data:nip:system inheritage updated with act:start for spawned npc's.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-08-31 Rev. 0-1: Data:NIP:system inheritage updated with act:start for spawned NPC's." ]), "2003-08-31 rev. 1-2: ncs support implemented.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-08-31 Rev. 1-2: NCS support implemented." ]), "2003-09-23 rev. 2-3: ncs support dummy.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-09-23 Rev. 2-3: NCS support dummy." ]), "2003-09-23 rev. 3-4: default error handler added.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-09-23 Rev. 3-4: Default error handler added." ]), "2003-09-23 rev. 4-5: react-post:offer-to -=\> react-post:offer-who change.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-09-23 Rev. 4-5: react-post:offer-to -=\> react-post:offer-who change." ]), "2003-10-28 rev. 5-6: this update implements the new this.npc feature (set in the parent npc). the new feature implements a more efficient way of dealing with spawns of npc's, where instead of brutally copying the properties down to the child, the npc now has two layers, the property npc and the spawn npc.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-10-28 Rev. 5-6: This update implements the new this.npc feature (set in the parent NPC). The new feature implements a more efficient way of dealing with spawns of NPC's, where instead of brutally copying the properties down to the child, the NPC now has two layers, the property NPC and the spawn NPC." ]), "2003-11-01 rev. 6-7: this update replaces the this.npc feature with the nip and nip-core namespace setprop-triggers.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-01 Rev. 6-7: This update replaces the this.npc feature with the nip and nip-core namespace setprop-triggers." ]), "2003-11-01 rev. 7-8: this update removes and re-adds all libraries in the npc. this is necessary due to the extensive amount of modifications to the system.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-01 Rev. 7-8: This update removes and re-adds all libraries in the NPC. This is necessary due to the extensive amount of modifications to the system." ]), "2003-11-01 rev. 8-9: this update refreshes all nip and nip-core properties in the npc.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-01 Rev. 8-9: This update refreshes all NIP and NIP-CORE properties in the NPC." ]), "2003-11-17 rev. 9-10: this update updates any cnpc's using the 'eating' library.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-17 Rev. 9-10: This update updates any CNPC's using the 'eating' library." ]), "2003-11-18 rev. 10-11: this update updates any cnpc's using the 'emoting' library.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-18 Rev. 10-11: This update updates any CNPC's using the 'emoting' library." ]), "2003-11-21 rev. 11-12: this update updates any cnpc's using the 'predator' library.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-21 Rev. 11-12: This update updates any CNPC's using the 'predator' library." ]), "2003-11-26 rev. 12-13: add new inherit for ::shutdown();":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-26 Rev. 12-13: Add new inherit for ::shutdown();" ]), "2003-11-27 rev. 13-14: implement log feature.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-11-27 Rev. 13-14: Implement log feature." ]), "2003-12-20 rev. 14-15: re-add inherit for ::shutdown();":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-12-20 Rev. 14-15: Re-add inherit for ::shutdown();" ]), "2003-12-21 rev. 15-16: this update updates any cnpc's using the 'predator' library.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2003-12-21 Rev. 15-16: This update updates any CNPC's using the 'predator' library." ]), "2004-02-17 rev. 16-17: deprecated properties for freemote db's need auto-adjustment.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2004-02-17 Rev. 16-17: Deprecated properties for freemote db's need auto-adjustment." ]), "2004-03-23 rev. 17-18: this update updates any cnpc's using the 'resource-control' library.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2004-03-23 Rev. 17-18: This update updates any CNPC's using the 'resource-control' library." ]), "2004-03-30 rev. 18-19: this update updates any cnpc's using the 'movement' library.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2004-03-30 Rev. 18-19: This update updates any CNPC's using the 'movement' library." ]), "2004-03-30 rev. 19-20: this update updates any cnpc's using the 'wounding' library.":([ \<MOVED:20080918-114107:Lib:NIP:updates\>:"2004-03-30 Rev. 19-20: This update updates any CNPC's using the 'wounding' library." ]), "a word wrap function. works best if you pass it through pre() but you do not have to.":([ \<Lib:common\>:"A word wrap function. Works best if you pass it through PRE() but you do not have to." ]), "abort a scheduled execution.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Abort a scheduled execution." ]), "accept and pay for an object.":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:"Accept and pay for an object." ]), "activity report command.":([ \<MOVED:20080918-114107:Neoct:Staff:Verbs:+areport\>:"Activity report command." ]), "add a group":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Add a group" ]), "add a group to the actor's list.":([ \<Neoct:Staff:Actions:+see\>:"Add a group to the actor's list." ]), "add a javascript tip to an input-box using show_tip() and hide_tip().":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Add a JavaScript tip to an input-box using show_tip() and hide_tip().", \<Lib:html\>:"Add a JavaScript tip to an input-box using show_tip() and hide_tip()." ]), "add a note to the assist":([ \<Lib:Assist:lib:assistlibs\>:"Add a note to the assist" ]), "add a page (\$message) to \$user using the +opage format. pages are appended equally, also.":([ \<Lib:common\>:"Add a page (\$message) to \$user using the +opage format. Pages are appended equally, also." ]), "add a queue if it does not exist":([ \<Lib:Assist:lib:assistlibs\>:"Add a Queue if it does not exist" ]), "add an account (by character name) to a see-group.":([ \<Neoct:Staff:Actions:+see\>:"Add an account (by character name) to a SEE-group." ]), "add an account to \$actor's see-list.":([ \<Neoct:Staff:Actions:+see\>:"Add an account to \$actor's SEE-list." ]), "add catalog":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Add catalog" ]), "additional script testing space":([ \<Lib:Assist:lib:assistlibs\>:"Additional Script Testing Space" ]), "adds a flag to an assist":([ \<Lib:Assist:lib:assistlibs\>:"Adds a flag to an assist" ]), "adds a note to your personal calendar":([ \<Lib:Assist:lib:assistlibs\>:"Adds a note to your personal calendar" ]), "alert line if player logs in and has an assist marked with the alert flag. also alert staffer if they have an assist claimed.":([ \<Lib:Assist:lib:assistlibs\>:"Alert line if player logs in and has an assist marked with the Alert flag. Also alert staffer if they have an assist claimed." ]), "alias for delete":([ \<Lib:NIP:core\>:"Alias for delete" ]), "an input-box for selections.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"An input-box for selections." ]), "an input-box for text.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"An input-box for text." ]), "applies sort position from array a to array b":([ \<Lib:common\>:"Applies sort position from array A to array B" ]), "approach script, inherited whenever someone mounts an npc, which deals with movement issues within rooms.":([ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>:"Approach script, inherited whenever someone mounts an NPC, which deals with movement issues within rooms." ]), "as the anger lib is loaded, we add 'angry' to the list of moods.":([ \<MOVED:20080918-114107:Lib:NIP:lib:anger\>:"As the anger lib is loaded, we add 'ANGRY' to the list of moods." ]), "as the happiness lib is loaded, we add 'happy' to the list of moods.":([ \<MOVED:20080918-114107:Lib:NIP:lib:happiness\>:"As the happiness lib is loaded, we add 'HAPPY' to the list of moods." ]), "as the happiness lib is loaded, we add 'sad' to the list of moods.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sadness\>:"As the happiness lib is loaded, we add 'SAD' to the list of moods." ]), "as the musician lib is loaded, we add 'play' to the list of moods. we also add the 'begin'/'end' command triggers (and a few aliases for each).":([ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>:"As the musician lib is loaded, we add 'PLAY' to the list of moods. We also add the 'begin'/'end' command triggers (and a few aliases for each)." ]), "assigns an assist to a specific person and informs them on login.":([ \<Lib:Assist:lib:assistlibs\>:"Assigns an assist to a specific person and informs them on login." ]), "assist alert stuff.":([ \<Lib:connection\>:"Assist alert stuff." ]), "associate a queue with an account on a specific server":([ \<Lib:Assist:lib:assistlibs\>:"Associate a queue with an account on a specific server" ]), "attach a group to a catalog":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Attach a group to a catalog" ]), "attach our traits script to the start-script chain.":([ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-traits\>:"Attach our traits script to the start-script chain." ]), "attack prey script.":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:"Attack prey script." ]), "authority request script. this is generic and useless in most cases, and a secondary library should override it.":([ \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>:"Authority request script. This is generic and useless in most cases, and a secondary library should override it." ]), "behavior editing tool.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"Behavior editing tool." ]), "broadcast to everyone online (in-characterly).":([ \<Lib:common\>:"Broadcast to everyone online (in-characterly)." ]), "calculate schedule for emit based on \$(iob:words).":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Calculate schedule for emit based on \$(iob:words)." ]), "change priority of a task":([ \<Lib:Assist:lib:assistlibs\>:"Change priority of a task" ]), "checks connected players to see if they have any assists open.":([ \<Lib:Assist:lib:assistlibs\>:"Checks connected players to see if they have any assists open." ]), "checks if account is on the denied list":([ \<Lib:common\>:"Checks if account is on the denied list" ]), "claims assist":([ \<Lib:Assist:lib:assistlibs\>:"Claims assist" ]), "clean a float currency value (\$value) and return string result.":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:"Clean a float currency value (\$value) and return string result." ]), "cleanup code for various uses":([ \<Lib:Assist:lib:assistlibs\>:"Cleanup Code for Various Uses" ]), "close a secret door automatically after a period of time.":([ \<Lib:door\>:"Close a secret door automatically after a period of time." ]), "commit template object data and (if applicable) hand over to the commit_call.":([ \<Lib:common\>:"Commit template object data and (if applicable) hand over to the commit_call." ]), "compare any two values with each other.":([ \<Lib:property\>:"Compare any two values with each other." ]), "compute the amount of differences in one-two properties.":([ \<Lib:property\>:"Compute the amount of differences in one-two properties." ]), "convert a string value into an array of words. input defaults to \$evoke unless \$split has been set. string array returned.":([ \<Lib:common\>:"Convert a string value into an array of words. Input defaults to \$evoke unless \$split has been set. String array returned." ]), "converts seconds into human readable output":([ \<Lib:common\>:"Converts seconds into human readable output" ]), "create a html table based on the lib:ascii argument set up.":([ \<Lib:html\>:"Create a HTML table based on the Lib:ascii argument set up." ]), "create a list of configurations in \$body.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Create a list of configurations in \$body." ]), "create a merry stamp listing the merry functions.":([  ]), "create a welcome box, unless it is specified to not be displayed in \$body.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Create a welcome box, unless it is specified to not be displayed in \$body.", \<Lib:html\>:"Create a welcome box, unless it is specified to not be displayed in \$body." ]), "create an array of all the properties of an object.":([ \<Lib:property\>:"Create an array of all the properties of an object." ]), "create an ascii-table based on the 2-dim. array \$content.":([ \<Lib:ascii\>:"Create an ASCII-table based on the 2-dim. array \$content." ]), "create an object using a pre-existing template.":([ \<Lib:common\>:"Create an object using a pre-existing template." ]), "create and display calendar":([ \<Lib:Assist:lib:assistlibs\>:"Create and display calendar" ]), "create suffix for queue name":([ \<Lib:Assist:lib:assistlibs\>:"Create suffix for queue name" ]), "create tree output":([ \<Lib:Assist:lib:assistlibs\>:"Create tree output" ]), "create tree output recursive":([ \<Lib:Assist:lib:assistlibs\>:"Create tree output recursive" ]), "creates a long table of all assist info":([ \<Lib:Assist:lib:assistlibs\>:"Creates a long table of all assist info" ]), "creates a new assist. sets it in the appropriate db. creates a new db if necessary.":([ \<Lib:Assist:lib:assistlibs\>:"Creates a new assist. Sets it in the appropriate DB. Creates a new DB if necessary." ]), "creates a new filed assist":([ \<Lib:Assist:lib:assistlibs\>:"Creates a new filed assist" ]), "creates the search db":([ \<Lib:Assist:lib:assistlibs\>:"Creates the search db" ]), "creates the tree":([ \<Lib:Assist:lib:assistlibs\>:"Creates the tree" ]), "decides what to do. list a queue or claim an assist":([ \<Lib:Assist:lib:assistlibs\>:"Decides what to do. List a queue or claim an assist" ]), "deduct money from \$actor, based on a specific cdo (cash data object).":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:"Deduct money from \$actor, based on a specific CDO (cash data object)." ]), "delay script for the sleeping hook. this one will multiply the delay by 4 if the state is asleep.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"Delay script for the sleeping hook. This one will multiply the delay by 4 if the state is asleep." ]), "determine whether we choose to attack nearby prey or not.":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:"Determine whether we choose to attack nearby prey or not." ]), "determine whether we choose to attack nearby prey or not. (pc killer version)":([ \<MOVED:20080918-114107:Lib:NIP:lib:killer\>:"Determine whether we choose to attack nearby prey or not. (PC killer version)" ]), "disable see notifications.":([ \<Neoct:Staff:Actions:+see\>:"Disable SEE notifications." ]), "disband a see-group.":([ \<Neoct:Staff:Actions:+see\>:"Disband a SEE-group." ]), "discards an assist with a generic message":([ \<Lib:Assist:lib:assistlibs\>:"Discards an assist with a generic message" ]), "disconnect (linkdie) connection trigger. this script is executed every time someone disconnects from the game.":([ \<Lib:connection\>:"Disconnect (linkdie) connection trigger. This script is executed every time someone disconnects from the game." ]), "display see scrollback buffer.":([ \<Neoct:Staff:Actions:+see\>:"Display SEE scrollback buffer." ]), "display the attachment popup to the user for a specific assist/task.":([ \<Lib:Assist:lib:assistlibs\>:"Display the attachment popup to the user for a specific assist/task." ]), "display who is listening on a channel, limited to \\"online\\" and \\"idle/away\\".":([ \<Lib:chatlib\>:"Display who is listening on a channel, limited to \\"Online\\" and \\"Idle/Away\\"." ]), "display who is listening on a channel.":([ \<Lib:chatlib\>:"Display who is listening on a channel." ]), "displays assist statistics":([ \<Lib:Assist:lib:assistlibs\>:"Displays Assist Statistics" ]), "displays defined queues.":([ \<Lib:Assist:lib:assistlibs\>:"Displays defined queues." ]), "displays info for queue":([ \<Lib:Assist:lib:assistlibs\>:"Displays info for queue" ]), "displays specific day info":([ \<Lib:Assist:lib:assistlibs\>:"Displays specific day info" ]), "do the actual resource-control code":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:"Do the actual resource-control code" ]), "does all the required chatfeeding":([ \<Lib:Assist:lib:assistlibs\>:"Does all the required chatfeeding" ]), "does the appropriate enter/connect bs":([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:"Does the appropriate enter/connect BS" ]), "emit for knights challenge":([ \<Lib:connection\>:"Emit for Knights Challenge" ]), "emitapp command.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"EmitApp command." ]), "enable see notifications.":([ \<Neoct:Staff:Actions:+see\>:"Enable SEE notifications." ]), "evoke response for the communicate lib.":([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:"Evoke response for the communicate lib." ]), "evoke witness for the communicate lib (provided thru omni-comm).":([ \<MOVED:20080918-114107:Lib:NIP:lib:omni-comm\>:"Evoke witness for the communicate lib (provided thru omni-comm)." ]), "executed when an npc is slayed, the act:stop script triggers the lib:system script in lib:nip:ext:spawn, which in turn scans the area object for information on when/what/where to spawn a replacement.":([ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-control\>:"Executed when an NPC is slayed, the act:stop script triggers the lib:system script in Lib:NIP:EXT:spawn, which in turn scans the area object for information on when/what/where to spawn a replacement." ]), "explicitly (re)declare a variable as an array.":([ \<Lib:common\>:"Explicitly (re)declare a variable as an array." ]), "extended log feature for the nip system.":([ \<Lib:NIP:core\>:"Extended LOG feature for the NIP system." ]), "extract a name from an object without using briefs or describe().":([ \<Lib:common\>:"Extract a name from an object without using briefs or Describe()." ]), "extract multiple properties from a given object and a given \\"search queue\\" and return these as mapped arrays (like ([ \\"prop\\" : \\"value\\", \\"prop2\\" : \\"value2\\", etc. ])":([ \<Neoct:Staff:Actions:+setp\>:"Extract multiple properties from a given object and a given \\"search queue\\" and return these as mapped arrays (like ([ \\"prop\\" : \\"value\\", \\"prop2\\" : \\"value2\\", etc. ])" ]), "figure out what to add":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Figure out what to add" ]), "figure out what to create":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Figure out what to create" ]), "figure out what to do":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Figure out what to do" ]), "figure out what to list":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Figure out what to list" ]), "figure out what to list. either contents of a catalog, contents of a group of the list of groups that a character belongs to.":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Figure out what to list. Either contents of a catalog, contents of a group of the list of groups that a character belongs to." ]), "figure out what to remove":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Figure out what to remove" ]), "find a nip object by name, either absolute or generic":([ \<Lib:NIP:core\>:"Find a NIP object by name, either absolute or generic" ]), "find a unique identifier for an npc.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"Find a unique identifier for an NPC." ]), "find the least specific value set in the hvl.":([ \<Lib:hvl\>:"Find the least specific value set in the HVL." ]), "find the most specific value set in the hvl.":([ \<Lib:hvl\>:"Find the most specific value set in the HVL." ]), "finds and returns an array of nrefs of exits in a specific room. optional is also to 'spread' the check several steps away from the room.":([ \<Lib:common\>:"Finds and returns an array of NRefs of exits in a specific room. Optional is also to 'spread' the check several steps away from the room." ]), "for testing tas popup code":([ \<Lib:Assist:lib:assistlibs\>:"For testing TAS popup code" ]), "function that handles yelling across rooms.":([ \<Lib:common\>:"Function that handles yelling across rooms." ]), "generate a \<zlink\> based on the arguments.":([ \<Lib:html\>:"Generate a \<zlink\> based on the arguments." ]), "generate a string of characters defined by \$what of size \$size and return the result.":([ \<Lib:common\>:"Generate a string of characters defined by \$what of size \$size and return the result." ]), "get a group.":([ \<Neoct:Staff:Actions:+see\>:"Get a group." ]), "get a who-listing request.":([ \<Lib:chatlib\>:"Get a who-listing request." ]), "get property on all objects in a list.":([ \<Lib:property\>:"Get property on all objects in a list." ]), "get the preferred name for a specific object on the chatline.":([ \<Lib:chatlib\>:"Get the preferred name for a specific object on the chatline." ]), "get values of property on all objects in a list.":([ \<Lib:property\>:"Get values of property on all objects in a list." ]), "gets the assist from the appropriate object and returns an array.":([ \<Lib:Assist:lib:assistlibs\>:"Gets the assist from the appropriate object and returns an array." ]), "gets the character object":([ \<Lib:Assist:lib:assistlibs\>:"Gets the character object" ]), "give a queue a description":([ \<Lib:Assist:lib:assistlibs\>:"Give a queue a description" ]), "handle channel who requests over cross-game.":([ \<Lib:chatlib\>:"Handle channel WHO requests over cross-game." ]), "help screen for +ncs":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"Help screen for +NCS" ]), "html parser engine.":([ \<Lib:html\>:"HTML parser engine." ]), "html template parser.":([ \<Lib:html\>:"HTML Template parser." ]), "inherit this in any script to add lfc functionality.":([ \<Lib:chatlib\>:"Inherit this in any script to add LFC functionality." ]), "initial the general db":([ \<Lib:Assist:lib:assistlibs\>:"Initial the general DB" ]), "initialize the values used to determine the page to view, etc.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Initialize the values used to determine the page to view, etc." ]), "initializes the new search db, parsing through entire tas db.":([ \<Lib:Assist:lib:assistlibs\>:"Initializes the new search db, parsing through entire TAS db." ]), "initiate the emit.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Initiate the emit." ]), "internal script used by modify:libraries to add merry inheritance.":([ \<Lib:NIP:core\>:"Internal script used by modify:libraries to add merry inheritance." ]), "internal script used by modify:libraries to delete merry inheritance.":([ \<Lib:NIP:core\>:"Internal script used by modify:libraries to delete merry inheritance." ]), "internal script used to locate all merry scripts that relate to a certain hook and signal, in a certain script.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:"Internal script used to locate all merry scripts that relate to a certain hook and signal, in a certain script." ]), "internal sleeping script. increment weariness.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"Internal sleeping script. Increment weariness." ]), "leave script, inherited whenever someone mounts an npc, which deals with movement issues within rooms.":([ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>:"Leave script, inherited whenever someone mounts an NPC, which deals with movement issues within rooms." ]), "links assists together":([ \<Lib:Assist:lib:assistlibs\>:"Links assists together" ]), "list a specific see-group's members.":([ \<Neoct:Staff:Actions:+see\>:"List a specific SEE-group's members." ]), "list all executions of a specific configuration.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"List all executions of a specific configuration." ]), "list available flags":([ \<Lib:Assist:lib:assistlibs\>:"List available flags" ]), "list the \$actor's see-list.":([ \<Neoct:Staff:Actions:+see\>:"List the \$actor's SEE-list." ]), "list the existing see-groups.":([ \<Neoct:Staff:Actions:+see\>:"List the existing SEE-groups." ]), "list the help, duh. i'm not sure i can get anymore explananitive than that.":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"List the help, duh. I'm not sure I can get anymore explananitive than that." ]), "list the libraries/signals/hooks loaded in an npc.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"List the libraries/signals/hooks loaded in an NPC." ]), "lists all open assist for player":([ \<Lib:Assist:lib:assistlibs\>:"Lists all open assist for player" ]), "lists all the info for an assist.":([ \<Lib:Assist:lib:assistlibs\>:"Lists all the info for an assist." ]), "lists help or specific help":([ \<Lib:Assist:lib:assistlibs\>:"Lists help or specific help" ]), "lists the queues":([ \<Lib:Assist:lib:assistlibs\>:"Lists the queues" ]), "locks a queue":([ \<Lib:Assist:lib:assistlibs\>:"Locks a queue" ]), "login connection trigger. this script is executed every time someone logs into the game.":([ \<Lib:connection\>:"Login connection trigger. This script is executed every time someone logs into the game." ]), "logout (quit) trigger. this script is executed every time someone quits the game.":([ \<Lib:connection\>:"Logout (quit) trigger. This script is executed every time someone quits the game." ]), "make sure anyone entering the room is taken into account for possible queued deliveries.":([ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>:"Make sure anyone entering the room is taken into account for possible queued deliveries." ]), "make sure someone is authorized to enter an exit.":([ \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>:"Make sure someone is authorized to enter an exit." ]), "make use of the \\"add_offer\\" core script.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"Make use of the \\"add_offer\\" core script.", \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>:"Make use of the \\"add_offer\\" core script." ]), "merry version of +setprop.":([ \<Neoct:Staff:Actions:+setp\>:"Merry version of +setprop." ]), "move out through a random exit.":([ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:"Move out through a random exit." ]), "moves a queue into a subqueue":([ \<Lib:Assist:lib:assistlibs\>:"Moves a queue into a subqueue" ]), "moves an assist from the current queue to the finished queue.":([ \<Lib:Assist:lib:assistlibs\>:"Moves an assist from the current queue to the finished queue." ]), "mstamp database apply() script.":([  ]), "ncs connect script.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"NCS connect script." ]), "ncs disconnect script.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"NCS disconnect script." ]), "ncs request function.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"NCS request function." ]), "ncs request handler (basic).":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"NCS request handler (basic)." ]), "ncs signature register function.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"NCS signature register function." ]), "new calendar code":([ \<Lib:Assist:lib:assistlibs\>:"New calendar code" ]), "newliechat login script.":([ \<Lib:connection\>:"NewlieChat login script." ]), "npc update script.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"NPC update script." ]), "parse an emote from db \$db, mood \$mood.":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:"Parse an emote from db \$db, mood \$mood." ]), "parse argument mapping and return the first resulting string encountered.":([ \<Lib:args\>:"Parse argument mapping and return the first resulting string encountered." ]), "perform a wounding.":([ \<MOVED:20080918-114107:Lib:NIP:lib:wounding\>:"Perform a wounding." ]), "perform all deliveries to \$recipient.":([ \<MOVED:20080918-114107:Lib:NIP:signals:DELIVERY\>:"Perform all deliveries to \$recipient." ]), "preparation script for instruments.":([ \<Lib:instruments\>:"Preparation script for instruments." ]), "prettify-resolve variable into a human-readable entry for +pprint.":([ \<Lib:ascii\>:"Prettify-resolve variable into a human-readable entry for +pprint." ]), "print the configuration tools, as defined in the data object data:db:emitapptools":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Print the configuration tools, as defined in the data object Data:DB:EmitAppTools" ]), "process a sentence (\$evoke_to_npc) and return a result spoken string.":([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:"Process a sentence (\$evoke_to_npc) and return a result spoken string." ]), "query an object on their assets, based on a specific cdo (cash data object).":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:"Query an object on their assets, based on a specific CDO (cash data object)." ]), "query_relationship( \$with: object ) [figure out \\"my\\" relationship with \$with]":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:"query_relationship( \$with: object ) [figure out \\"my\\" relationship with \$with]" ]), "quit (logout) timestamp script.":([ \<Lib:connection\>:"Quit (logout) timestamp script." ]), "reaction script that triggers the instrument effect whenever someone blows it.":([ \<Lib:instruments\>:"Reaction script that triggers the instrument effect whenever someone blows it." ]), "recall the past few lines of a channel.":([ \<Lib:chatlib\>:"Recall the past few lines of a channel." ]), "remove a catalog":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Remove a catalog" ]), "remove a group":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"Remove a group" ]), "remove a group from the actor's list.":([ \<Neoct:Staff:Actions:+see\>:"Remove a group from the actor's list." ]), "remove a queue if it does not exist":([ \<Lib:Assist:lib:assistlibs\>:"Remove a Queue if it does not exist" ]), "remove an account from a group (optionally by character name).":([ \<Neoct:Staff:Actions:+see\>:"Remove an account from a group (optionally by character name)." ]), "remove the contents of an element if it is defaulty.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"Remove the contents of an element if it is defaulty.", \<Lib:html\>:"Remove the contents of an element if it is defaulty." ]), "removes a watched assist.":([ \<Lib:Assist:lib:assistlibs\>:"Removes a watched assist." ]), "renames a queue and all assists that were members of that queue.":([ \<Lib:Assist:lib:assistlibs\>:"Renames a queue and all assists that were members of that queue." ]), "replace strings with locked replacement (for consistency) so that for instance \\"north to south and south to north\\" will function properly.":([ \<Lib:common\>:"Replace strings with locked replacement (for consistency) so that for instance \\"north to south and south to north\\" will function properly." ]), "replacement for the \\"presents\\" lib 'ask-for' handler, this script will take into account cost of item. the ability to hand out \\"free\\" things is lost, however, and a customized merge of this and the presents v. is required in order to implement such.":([ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>:"Replacement for the \\"presents\\" lib 'ask-for' handler, this script will take into account cost of item. The ability to hand out \\"free\\" things is lost, however, and a customized merge of this and the presents v. is required in order to implement such." ]), "resolve a family array and return success/failure.":([ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>:"Resolve a family array and return success/failure." ]), "resource control trigger for a specific room.":([ \<MOVED:20080918-114107:Lib:NIP:API\>:"Resource control trigger for a specific room." ]), "retrieve an assist and dump it back into the new queue to be dealt with as appropriate.":([ \<Lib:Assist:lib:assistlibs\>:"Retrieve an assist and dump it back into the new queue to be dealt with as appropriate." ]), "return a list of bodies":([ \<Lib:common\>:"Return a list of bodies" ]), "return a string list of objects, sub-folders or both residing in a folder.":([ \<Lib:woe\>:"Return a string list of objects, sub-folders or both residing in a folder." ]), "return a string representation of an array of strings (\$list) as \\"\<first\>, \<second\>, \<...\> and \<last\>\\"":([ \<Lib:common\>:"Return a string representation of an array of strings (\$list) as \\"\<first\>, \<second\>, \<...\> and \<last\>\\"" ]), "return your assist back to the queue it came from":([ \<Lib:Assist:lib:assistlibs\>:"Return your assist back to the queue it came from" ]), "rumour handler; this script is called whenever someone asks an npc (with the 'rumours' library implemented) about *something*. it will look in the specified data object ('nip:trait:rumour:database') for the topic in question, or say \\"(s)he doesn't know anything about that.\\" if it was not found.":([ \<MOVED:20080918-114107:Lib:NIP:lib:rumours\>:"Rumour handler; this script is called whenever someone asks an NPC (with the 'rumours' library implemented) about *something*. It will look in the specified data object ('nip:trait:rumour:database') for the topic in question, or say \\"(S)He doesn't know anything about that.\\" if it was not found." ]), "runs the delay loop for the backup script.":([ \<Lib:Assist:lib:assistlibs\>:"Runs the delay loop for the backup script." ]), "script for dismounting npc's.":([ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>:"Script for dismounting NPC's." ]), "script inherited into the object which acts as the npc for deliveries.":([ \<MOVED:20080918-114107:Lib:NIP:lib:delivery-object\>:"Script inherited into the OBJECT which acts as the NPC for deliveries." ]), "script inherited into the room which acts as the npc for deliveries.":([ \<MOVED:20080918-114107:Lib:NIP:lib:delivery-area\>:"Script inherited into the ROOM which acts as the NPC for deliveries." ]), "script to backup the assist dbs.":([ \<Lib:Assist:lib:assistlibs\>:"Script to backup the assist DBs." ]), "searches all assists for string.":([ \<Lib:Assist:lib:assistlibs\>:"Searches all assists for string." ]), "send \$message to \$line (from \$actor).":([ \<Lib:chatlib\>:"Send \$message to \$line (from \$actor)." ]), "send a random emit to an environment, and (optionally) an actor/target.":([ \<Lib:common\>:"Send a random emit to an environment, and (optionally) an actor/target." ]), "send a signal to the heartbeat thread of a cnpc.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"Send a signal to the heartbeat thread of a CNPC." ]), "send an evoke from a center and outwards in a circular fashion, including strong and faint sound versions.":([ \<Lib:common\>:"Send an evoke from a center and outwards in a circular fashion, including strong and faint sound versions." ]), "sends an email for special queues as defined in mapping:queues:email":([ \<Lib:Assist:lib:assistlibs\>:"Sends an email for special queues as defined in mapping:queues:email" ]), "sends an opage to the player who filed the task for the assist specified":([ \<Lib:Assist:lib:assistlibs\>:"Sends an opage to the player who filed the task for the assist specified" ]), "set a queue as private":([ \<Lib:Assist:lib:assistlibs\>:"Set a queue as private" ]), "set a queue as public":([ \<Lib:Assist:lib:assistlibs\>:"Set a queue as public" ]), "set appearance preference for a channel.":([ \<Lib:chatlib\>:"Set appearance preference for a channel." ]), "set ncs up in \$npc using default handler etc.":([ \<MOVED:20080918-114107:Lib:NIP:NCS\>:"Set NCS up in \$NPC using default handler etc." ]), "set property on all objects in list.":([ \<Lib:property\>:"Set property on all objects in list." ]), "set timestamp in \$actor.":([ \<Lib:connection\>:"Set timestamp in \$actor." ]), "set up a scene with external targets.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"Set up a scene with external targets." ]), "set volition in spawned children automatically.":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:"Set volition in spawned children automatically." ]), "sets abort.":([ \<Lib:Assist:lib:assistlibs\>:"Sets abort." ]), "sets appropriate stats":([ \<Lib:Assist:lib:assistlibs\>:"Sets appropriate stats" ]), "sets chatline ignore list to hide output.":([ \<Lib:Assist:lib:assistlibs\>:"Sets chatline ignore list to hide output." ]), "sets chatline show list to show output.":([ \<Lib:Assist:lib:assistlibs\>:"Sets chatline show list to show output." ]), "sets your preferred queue for the +/!tas command queue list":([ \<Lib:Assist:lib:assistlibs\>:"Sets your preferred queue for the +/!tas command queue list" ]), "sets your queue focus for subqueues":([ \<Lib:Assist:lib:assistlibs\>:"Sets your queue focus for subqueues" ]), "shell for 'lib:commanding'":([ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>:"Shell for 'lib:commanding'" ]), "shortcut-command for behavior db calls.":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:"Shortcut-command for behavior DB calls." ]), "shows all closed assists for queue":([ \<Lib:Assist:lib:assistlibs\>:"Shows all closed assists for queue" ]), "shows all open assists":([ \<Lib:Assist:lib:assistlibs\>:"Shows all open assists" ]), "shows assists filed in last 24 hours.":([ \<Lib:Assist:lib:assistlibs\>:"Shows assists filed in last 24 hours." ]), "shows info for all assists in queue":([ \<Lib:Assist:lib:assistlibs\>:"Shows info for all assists in queue" ]), "shows you the content of any queues you are monitoring.":([ \<Lib:Assist:lib:assistlibs\>:"Shows you the content of any queues you are monitoring." ]), "shutdown command (compatible with resource-control).":([ \<Lib:NIP:core\>:"Shutdown command (compatible with resource-control)." ]), "simple handler for the presents feature.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"Simple handler for the presents feature." ]), "simple script that returns true if \$body is listening to \$channel.":([ \<Lib:chatlib\>:"Simple script that returns TRUE if \$body is listening to \$channel." ]), "sleeping decide script. \\"go to sleep or fall awake?\\"":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"Sleeping decide script. \\"Go to sleep or fall awake?\\"" ]), "snake-mod to the description of eating food.":([ \<MOVED:20080918-114107:Lib:NIP:extra:snake\>:"Snake-mod to the description of eating food." ]), "sort an array of objects (\$objects) based on their describe().":([ \<Lib:common\>:"Sort an array of objects (\$objects) based on their Describe()." ]), "spawned npc control script.":([ \<Lib:NIP:core\>:"Spawned NPC control script." ]), "squint act script; used by the jeweler loupes to get examine descriptions on jewelry by simply squinting whilst wearing a loupe.":([ \<Lib:common\>:"Squint act script; used by the jeweler loupes to get examine descriptions on jewelry by simply squinting whilst wearing a loupe." ]), "stance handler for mounted npc's. this script ensures stances are displayed correctly.":([ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>:"Stance handler for mounted NPC's. This script ensures stances are displayed correctly." ]), "start listening to a specific chatlib channel.":([ \<Lib:chatlib\>:"Start listening to a specific chatlib channel." ]), "sticks a task to the specified calendar date":([ \<Lib:Assist:lib:assistlibs\>:"Sticks a task to the specified calendar date" ]), "stop listening to a specific chatlib channel.":([ \<Lib:chatlib\>:"Stop listening to a specific chatlib channel." ]), "subtract an account from \$actor's see-list.":([ \<Neoct:Staff:Actions:+see\>:"Subtract an account from \$actor's SEE-list." ]), "switches a queue between long and short format":([ \<Lib:Assist:lib:assistlibs\>:"Switches a queue between long and short format" ]), "system update script.":([ \<Lib:NIP:core\>:"System update script." ]), "the 'throw' version (by kalle) of the 'place' system (by zell). no prox, but consent preserved.":([ \<MOVED:20080918-114107:Neoct:Base:Actions:zthrow\>:"The 'throw' version (by Kalle) of the 'place' system (by Zell). No prox, but consent preserved." ]), "the act-post:enter script for the mounting system (nip), which handles movement through rooms.":([ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>:"The act-post:enter script for the mounting system (NIP), which handles movement through rooms." ]), "the decide sig-hook for the nip hook.":([ \<MOVED:20080918-114107:Lib:NIP:hooks:nip\>:"The DECIDE sig-hook for the nip hook." ]), "the default error handler.":([ \<Lib:NIP:core\>:"The default error handler." ]), "the feeder makes sure every logged on chatter receives each evoke or emote on all chat lines.":([ \<Lib:chatlib\>:"The feeder makes sure every logged on chatter receives each evoke or emote on all chat lines." ]), "the internal eating script will make the cnpc hungrier over time.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"The internal eating script will make the CNPC hungrier over time." ]), "the internal sig-hook for the nip hook.":([ \<MOVED:20080918-114107:Lib:NIP:hooks:nip\>:"The INTERNAL sig-hook for the nip hook." ]), "the lib:done-post script, executed after the \\"eating\\" library has been removed from a cnpc.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"The lib:done-post script, executed after the \\"eating\\" library has been removed from a CNPC." ]), "the libraries modifier is executed by the setprop trigger and is used to add/remove cnpc libraries.":([ \<Lib:NIP:core\>:"The libraries modifier is executed by the setprop trigger and is used to add/remove CNPC libraries." ]), "the offer script for the eating cnpc feature.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"The offer script for the eating CNPC feature." ]), "the offer script for the trash-taking cnpc's.":([ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>:"The offer script for the trash-taking CNPC's." ]), "the predator replacement for the eating offers handler.":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:"The predator replacement for the eating offers handler." ]), "the prey defend script, which calculates the outcome of a hunter/prey situation.":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:"The prey defend script, which calculates the outcome of a hunter/prey situation." ]), "the prey die script, which turns an npc into a dead body.":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:"The prey die script, which turns an NPC into a dead body." ]), "the random traits start-handler.":([ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-traits\>:"The random traits start-handler." ]), "the relay_chat script for the chatlib.":([ \<Lib:chatlib\>:"The relay_chat script for the chatlib." ]), "the room-cleaning decide hook-script. this script will randomly pick up trash from \\"the current room.\\" trash = anything with \\"trait:trash\\" set.":([ \<MOVED:20080918-114107:Lib:NIP:hooks:room-cleaning\>:"The room-cleaning decide hook-script. This script will randomly pick up trash from \\"the current room.\\" Trash = anything with \\"trait:trash\\" set." ]), "the setprop-trigger for the nip namespace.":([ \<Lib:NIP:core\>:"The setprop-trigger for the NIP namespace." ]), "the setprop-trigger for the nip-core namespace.":([ \<Lib:NIP:core\>:"The setprop-trigger for the NIP-CORE namespace." ]), "the sigexecptr setprop hook sets and unsets the signal stream hook (located in lib:nip:lib:stream) on demand.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:"The SIGEXECptr setprop hook sets and unsets the signal stream hook (located in Lib:NIP:lib:stream) on demand." ]), "the spawn system script, called by any npc using the spawn-system when it is slain.":([ \<MOVED:20080918-114107:Lib:NIP:EXT:spawn\>:"The spawn system script, called by any NPC using the spawn-system when it is slain." ]), "there's a chance (specified in 'nip:trait:emoting:frequency') we will spontaneously emote something.":([ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:"There's a chance (specified in 'nip:trait:emoting:frequency') we will spontaneously emote something." ]), "there's a chance (specified in 'nip:trait:freemoting:frequency') we will spontaneously freemote something.":([ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>:"There's a chance (specified in 'nip:trait:freemoting:frequency') we will spontaneously freemote something." ]), "this code lists all the catalogs":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"This code lists all the catalogs" ]), "this code lists the various groups":([ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>:"This code lists the various groups" ]), "this function is (should be) used to add merry functions to the data:nip:functions registry. these functions are used by +nip to control and/or configure cnpc bodies and/or libraries.":([ \<Lib:NIP:core\>:"This function is (should be) used to add merry functions to the Data:NIP:functions registry. These functions are used by +nip to control and/or configure CNPC bodies and/or libraries." ]), "this function is called by the 'set' +nip function to implement the core base in a new cnpc. the core base is used to load the rest of the core library into the system internally, using the core system itself.":([ \<Lib:NIP:core\>:"This function is called by the 'set' +nip function to implement the core base in a new CNPC. The core base is used to load the rest of the core library into the system internally, using the core system itself." ]), "this function is now a simple wrapper for the slib:common/lib:lookup function, which is the one to use.":([ \<Lib:common\>:"This function is now a simple wrapper for the SLib:common/lib:lookup function, which is the one to use." ]), "this function is used to destroy the heartbeat thread in a cnpc. (synonym for +nip [target] \\"sig term\\")":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"This function is used to destroy the heartbeat thread in a CNPC. (synonym for +nip [target] \\"sig term\\")" ]), "this function is used to permanently add a function to the +nip extensions.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"This function is used to permanently add a function to the +nip extensions." ]), "this function is used to set up a cnpc library to use the nip core functionality. it is called through +nip.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"This function is used to set up a CNPC library to use the NIP core functionality. It is called through +nip." ]), "this function is used to trigger the heartbeat thread in a cnpc.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"This function is used to trigger the heartbeat thread in a CNPC." ]), "this hook will slow the npc down a bit if it's neutral.":([ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>:"This hook will slow the NPC down a bit if it's neutral." ]), "this is the 'recording' script, used to teach cnpc's how to act.":([ \<MOVED:20080918-114107:Lib:NIP:basefuns\>:"This is the 'recording' script, used to teach CNPC's how to act." ]), "this is the action script for the create_configuration page.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"This is the action script for the create_configuration page." ]), "this is the action script for the welcome page. all action scripts should return the next \\"page\\".":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"This is the action script for the welcome page. All action scripts should return the next \\"page\\"." ]), "this is the init script for the mood signal hook(s). it will reset a number of values used to calculate the cnpc's current mood.":([ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>:"This is the init script for the mood signal hook(s). It will reset a number of values used to calculate the CNPC's current mood." ]), "this is the initialization script for the core \\"library\\".":([ \<Lib:NIP:core\>:"This is the initialization script for the core \\"library\\"." ]), "this is the internal decide:decide-exec hook.":([ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>:"This is the internal decide:decide-exec hook." ]), "this is the internal decide:decide-init hook.":([ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>:"This is the internal decide:decide-init hook." ]), "this is the internal decide:decide-post hook.":([ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>:"This is the internal decide:decide-post hook." ]), "this is the internal delay:delay-exec hook. it will execute the actual pause that occurs between each of the cnpc's unprovoked actions (self-triggered if you will).":([ \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>:"This is the internal delay:delay-exec hook. It will execute the actual pause that occurs between each of the CNPC's unprovoked actions (self-triggered if you will)." ]), "this is the internal delay:delay-init hook. it will set the initial value for the \$npc_pause property.":([ \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>:"This is the internal delay:delay-init hook. It will set the initial value for the \$NPC_PAUSE property." ]), "this is the internal internal:internal-exec hook.":([ \<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>:"This is the internal internal:internal-exec hook." ]), "this is the signal stream hook. it will be inherited on demand whenever a hook or signal wants a certain script to be executed whenever the sigexec signal is caught.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:"This is the signal stream hook. It will be inherited on demand whenever a hook or signal wants a certain script to be executed whenever the SIGEXEC signal is caught." ]), "this is the standard awakening script. replace it with your own library when the need for a customized awake-script arise.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"This is the standard awakening script. Replace it with your own library when the need for a customized awake-script arise." ]), "this is the standard go-to-sleep script. replace it with your own library when the need for a customized sleep-script arise.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"This is the standard go-to-sleep script. Replace it with your own library when the need for a customized sleep-script arise." ]), "this library will make an npc leave the room on occasion, at random.":([ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:"This library will make an NPC leave the room on occasion, at random." ]), "this script \\"pipes\\" commands to lib:handler:relations.":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:"This script \\"pipes\\" commands to lib:handler:relations." ]), "this script (may be) used to add moods to the cnpc moods registry.":([ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>:"This script (may be) used to add moods to the CNPC moods registry." ]), "this script (may be) used to remove moods from the cnpc moods registry.":([ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>:"This script (may be) used to remove moods from the CNPC moods registry." ]), "this script (re)calculates the signal/hook path which contains the series of scripts the heartbeat thread executes each loop.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:"This script (re)calculates the signal/hook path which contains the series of scripts the heartbeat thread executes each loop." ]), "this script deals with mounting an npc.":([ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>:"This script deals with mounting an NPC." ]), "this script distributes the various function calls to the chat channels, such as the standard 'on', 'off', 'recall' commands.":([ \<Lib:chatlib\>:"This script distributes the various function calls to the chat channels, such as the standard 'on', 'off', 'recall' commands." ]), "this script grabs the analysis generated from the various mood sighooks and determines the cnpc's current mood.":([ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>:"This script grabs the analysis generated from the various mood sighooks and determines the CNPC's current mood." ]), "this script handles the hook modifications on cnpc libraries.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:"This script handles the hook modifications on CNPC libraries." ]), "this script handles the signal modifications on cnpc libraries.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:"This script handles the signal modifications on CNPC libraries." ]), "this script increments the cnpc's energy when it eats something.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"This script increments the CNPC's energy when it eats something." ]), "this script initializes couriers and adds the object npc:misc:scroll to the list of distributed items. it will also add lib:handler:offer:addressed to the offers chain.":([ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>:"This script initializes couriers and adds the object NPC:misc:scroll to the list of distributed items. It will also add lib:handler:offer:addressed to the offers chain." ]), "this script internally registers a new hook with a signal (and vice versa).":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:"This script internally registers a new hook with a signal (and vice versa)." ]), "this script internally unregisters a hook from the chain of a signal.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:"This script internally unregisters a hook from the chain of a signal." ]), "this script is a simple shell for any scripts that would potentially scan offers and take part in deciding whether or not the offer should be accepted. if you are about to make an addition to a cnpc that involves offering things to them, use the \\"lib:core:add_offer\\" and \\"lib:core:sub_offer\\" scripts provided with this library.":([ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>:"This script is a simple shell for any scripts that would potentially scan offers and take part in deciding whether or not the offer should be accepted. If you are about to make an addition to a CNPC that involves offering things to them, use the \\"lib:core:add_offer\\" and \\"lib:core:sub_offer\\" scripts provided with this library." ]), "this script is a simple shell for npc ask features.":([ \<MOVED:20080918-114107:Lib:NIP:lib:asking\>:"This script is a simple shell for NPC ask features." ]), "this script is called by the react:evoke-iob/dob scripts, and any npc's that have the commanding library implemented will execute this every time someone acts towards the npc (with an evoke).":([ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>:"This script is called by the react:evoke-iob/dob scripts, and any NPC's that have the commanding library implemented will execute this every time someone acts towards the NPC (with an evoke)." ]), "this script is executed 1) when the eating hook is loaded, and 2) whenever another hook is loaded.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"This script is executed 1) when the eating hook is loaded, and 2) whenever another hook is loaded." ]), "this script is executed 1) when the predator hook is loaded, and 2) whenever another hook is loaded.":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:"This script is executed 1) when the predator hook is loaded, and 2) whenever another hook is loaded." ]), "this script is executed 1) when the sleeping hook is loaded, and 2) whenever another hook is loaded.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"This script is executed 1) when the sleeping hook is loaded, and 2) whenever another hook is loaded." ]), "this script is executed once, when an npc loads the 'mounting' library.":([ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>:"This script is executed once, when an NPC loads the 'mounting' library." ]), "this script is executed whenever the cnpc changes state (awake/sleep), through the usage of e.g. the \\"sleeping\\" hook's lib:sleeping:decide script.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"This script is executed whenever the CNPC changes state (awake/sleep), through the usage of e.g. the \\"sleeping\\" hook's lib:sleeping:decide script." ]), "this script is inherited by a cnpc whenever it starts recording behavior.":([ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>:"This script is inherited by a CNPC whenever it starts recording behavior." ]), "this script is part of the core of the ask \<npc\> for \<item\> functionality.":([ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:"This script is part of the core of the ask \<npc\> for \<item\> functionality." ]), "this script is the heartbeat thread. it runs 24/7 on all active cnpc's, and is responsible for everything spontaneous.":([ \<Lib:NIP:core\>:"This script is the heartbeat thread. It runs 24/7 on all active CNPC's, and is responsible for everything spontaneous." ]), "this script is used by the relations nip library to determine the type of action performed.":([ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>:"This script is used by the relations NIP library to determine the type of action performed." ]), "this script is used to add (attach) a property to an array, without causing duplicates and without disturbing the order of the array.":([ \<Lib:common\>:"This script is used to add (attach) a property to an array, without causing duplicates and without disturbing the order of the array." ]), "this script is used to add a script to the command chain \\"nip:trait:commands\\".":([ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>:"This script is used to add a script to the command chain \\"nip:trait:commands\\"." ]), "this script is used to add a script to the offer chain \\"nip:offer:scripts\\". each script listed there will be executed and if either returns a true, the offer will be accepted.":([ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>:"This script is used to add a script to the offer chain \\"nip:offer:scripts\\". Each script listed there will be executed and if either returns a TRUE, the offer will be accepted." ]), "this script is used to add an object to the presents mapping \\"nip:trait:present:objects\\". each object has an array of words that will 'trigger' the offering of the particular object.":([ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:"This script is used to add an object to the presents mapping \\"nip:trait:present:objects\\". Each object has an array of words that will 'trigger' the offering of the particular object." ]), "this script is used to generate the code for the dialog box \<div\>.":([ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>:"This script is used to generate the code for the dialog box \<DIV\>." ]), "this script is used to remove a script from the command chain \\"nip:trait:commands\\".":([ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>:"This script is used to remove a script from the command chain \\"nip:trait:commands\\"." ]), "this script is used to remove an object from the presents mapping \\"nip:trait:present:objects\\".":([ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:"This script is used to remove an object from the presents mapping \\"nip:trait:present:objects\\"." ]), "this script is used to subtract a script from the offer chain \\"nip:offer:scripts\\".":([ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>:"This script is used to subtract a script from the offer chain \\"nip:offer:scripts\\"." ]), "this script modifies the mass of the target accordingly.":([ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>:"This script modifies the mass of the target accordingly." ]), "this script will accept any items that are addressed to someone.":([ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>:"This script will accept any items that are addressed to someone." ]), "this script will alter the mood slightly if the cnpc is very hungry.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"This script will alter the mood slightly if the CNPC is very hungry." ]), "this script will alter the mood slightly if the cnpc is very tired.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:"This script will alter the mood slightly if the CNPC is very tired." ]), "this script will check if we're hungry enough to do something about it, and based on our hunger, we will go to greater extremes, ending up with looking in the room we're in for food and grabbing it if we can and are hungry enough.":([ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>:"This script will check if we're hungry enough to do something about it, and based on our hunger, we will go to greater extremes, ending up with looking in the room we're in for food and grabbing it if we can and are hungry enough." ]), "this script will interpret an action and decide whether it's positive or negative, and whether it's ranged or touching, as well as its strength.":([ \<MOVED:20060501-050056:Lib:NIP:lib:act-interpreter\>:"This script will interpret an action and decide whether it's positive or negative, and whether it's ranged or touching, as well as its strength." ]), "this script will look at various things (e.g.i.a. hunger) and bump the 'happy' mood accordingly.":([ \<MOVED:20080918-114107:Lib:NIP:lib:happiness\>:"This script will look at various things (e.g.i.a. hunger) and bump the 'HAPPY' mood accordingly." ]), "this script will look at various things (e.g.i.a. hunger) and bump the 'sad' mood accordingly.":([ \<MOVED:20080918-114107:Lib:NIP:lib:sadness\>:"This script will look at various things (e.g.i.a. hunger) and bump the 'SAD' mood accordingly." ]), "this script will look at various things and bump the 'angry' mood accordingly.":([ \<MOVED:20080918-114107:Lib:NIP:lib:anger\>:"This script will look at various things and bump the 'ANGRY' mood accordingly." ]), "this script will make the musicians stop playing, and is triggered as the authoritative person [tm] says \\"stop\\", \\"end\\" or \\"conclude\\" to the musicians.":([ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>:"This script will make the musicians stop playing, and is triggered as the authoritative person [tm] says \\"Stop\\", \\"End\\" or \\"Conclude\\" to the musicians." ]), "this script will make the musicians want to play, and is triggered as the authoritative person [tm] says \\"begin\\", \\"proceed\\" or \\"start\\" to the musicians.":([ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>:"This script will make the musicians want to play, and is triggered as the authoritative person [tm] says \\"Begin\\", \\"Proceed\\" or \\"Start\\" to the musicians." ]), "this script will set the \\"play\\" mood to 20 if the musicians are supposed to play, and to 0 if they're not.":([ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>:"This script will set the \\"PLAY\\" mood to 20 if the musicians are supposed to play, and to 0 if they're not." ]), "this setprop hook executes the \\"sigexec\\" stream (0x050) whenever the property \\"decide\\" is set in \\"this\\".":([ \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:"This setprop hook executes the \\"SIGEXEC\\" stream (0x050) whenever the property \\"DECIDE\\" is set in \\"this\\"." ]), "this sig-hook script scans the room for volitional objects, and incrementally checks if they have a delivery waiting.":([ \<MOVED:20080918-114107:Lib:NIP:hooks:delivery\>:"This sig-hook script scans the room for volitional objects, and incrementally checks if they have a delivery waiting." ]), "timestamp linkdie (dc) script.":([ \<Lib:connection\>:"Timestamp linkdie (DC) script." ]), "transfer a target to his or her room, or optionally other specified places.":([ \<Neoct:Staff:Actions:+return\>:"Transfer a target to his or her room, or optionally other specified places." ]), "transfers open assists from one queue to another.":([ \<Lib:Assist:lib:assistlibs\>:"Transfers open assists from one queue to another." ]), "tree creation recursive":([ \<Lib:Assist:lib:assistlibs\>:"Tree creation recursive" ]), "tree listing of all queues":([ \<Lib:Assist:lib:assistlibs\>:"Tree listing of all queues" ]), "turn a numeric value into a string, and return with leading zero(es).":([ \<Lib:common\>:"Turn a numeric value into a string, and return with leading zero(es)." ]), "turns a time/date string into seconds since 1/1/70":([ \<Lib:common\>:"Turns a time/date string into seconds since 1/1/70" ]), "twikize the output for easy copy and paste into twiki":([ \<Lib:Assist:lib:assistlibs\>:"TWikize the output for easy copy and paste into twiki" ]), "unlocks a queue":([ \<Lib:Assist:lib:assistlibs\>:"Unlocks a queue" ]), "unset volition.":([ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>:"Unset volition." ]), "update the covered mapping (add).":([ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>:"Update the covered mapping (add)." ]), "update the covered mapping (sub).":([ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>:"Update the covered mapping (sub)." ]), "used to add libraries to cnpc's.":([ \<Lib:NIP:core\>:"Used to add libraries to CNPC's." ]), "used to add/remove hooks to libraries.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:"Used to add/remove hooks to libraries." ]), "used to create/modify signals.":([ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:"Used to create/modify signals." ]), "used to remove libraries to cnpc's.":([ \<Lib:NIP:core\>:"Used to remove libraries to CNPC's." ]), "using basic rules, tweak an adverb; used e.g. in remain and appear.":([ \<Lib:common\>:"Using basic rules, tweak an adverb; used e.g. in remain and appear." ]), "walk the hvl (hierarchical value list) and return all the values in an array.":([ \<Lib:hvl\>:"Walk the HVL (hierarchical value list) and return all the values in an array." ]), "walk the hvl (hierarchical value list) and return true if any element is true.":([ \<Lib:hvl\>:"Walk the HVL (hierarchical value list) and return TRUE if any element is TRUE." ]), "walk the hvl and return the maximum non-nil value found.":([ \<Lib:hvl\>:"Walk the HVL and return the maximum non-nil value found." ]), "walk the hvl and return the minimum non-nil value found.":([ \<Lib:hvl\>:"Walk the HVL and return the minimum non-nil value found." ]), "walk the hvl and return the product of non-nil values.":([ \<Lib:hvl\>:"Walk the HVL and return the product of non-nil values." ]), "walk the hvl and return the sum of non-nil values.":([ \<Lib:hvl\>:"Walk the HVL and return the sum of non-nil values." ]), "watches an assist for changes. alerts you on login.":([ \<Lib:Assist:lib:assistlibs\>:"Watches an assist for changes. Alerts you on login." ]), "we initialize the mood signal and add a basic mood we call \\"neutral\\".":([ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>:"We initialize the MOOD signal and add a basic mood we call \\"NEUTRAL\\"." ]) ])
      </Core:Property>
      <Core:Property property="references">
         ([ 0:([ 1:(\{ "Preparation script for instruments." \}), 2:(\{ "Reaction script that triggers the instrument effect whenever someone blows it." \}), 3:(\{ "\\"Practice\\" version of the exact same script as the blow-dob script. This one reaches about one step away from the actor." \}), 4:(\{ "Rumour handler; this script is called whenever someone asks an NPC (with the 'rumours' library implemented) about *something*. It will look in the specified data object ('nip:trait:rumour:database') for the topic in question, or say \\"(S)He doesn't know anything about that.\\" if it was not found." \}), 5:(\{ "Does the appropriate enter/connect stuff." \}), 6:(\{ "Do initialization" \}), 7:(\{ "Do the actual resource-control code" \}), 8:(\{ "Host enter-a-room debug script." \}), 9:(\{ "Host teleport-to-a-room debug script." \}), 10:(\{ "EmitApp command." \}), 11:(\{ "[DEPRECATED; DO NOT USE] Squint act script; used by the jeweler loupes to get examine descriptions on jewelry by simply squinting whilst wearing a loupe." \}), 12:(\{ "Abort a scheduled execution." \}), 13:(\{ "Behavior editing tool." \}), 14:(\{ "Turn \$what into \\"a \$what\\" or \\"an \$what\\", depending on the first letter." \}), 15:(\{ "This is the action script for the create_configuration page." \}), 16:(\{ "Comm family editing tool." \}), 17:(\{ "This is the action script for the welcome page. All action scripts should return the next \\"page\\"." \}), 18:(\{ "Connect two NPC's with each other in a tracked recording session." \}), 19:(\{ "Add a page (\$message) to \$user using the +opage format. Pages are appended equally, also." \}), 20:(\{ "Calculate schedule for emit based on \$(iob:words)." \}), 21:(\{ "Walk the HVL (hierarchical value list) and return all the values in an array." \}), 22:(\{ "This function is used to destroy the heartbeat thread in a CNPC. (synonym for +nip [target] \\"sig term\\")" \}), 23:(\{ "This script is used to add (attach) a property to an array, without causing duplicates and without disturbing the order of the array." \}), 24:(\{ "Print the configuration tools, as defined in the data object Data:DB:EmitAppTools" \}), 25:(\{ "Walk the HVL (hierarchical value list) and return TRUE if any element is TRUE." \}), 26:(\{ "Disconnect from the recording setting." \}), 27:(\{ "Return a list of bodies" \}), 28:(\{ "An input-box for selections." \}), 29:(\{ "Find the least specific value set in the HVL." \}), 30:(\{ "Behavior editing tool." \}), 31:(\{ "Broadcast to everyone online." \}), 32:(\{ "This script is used to generate the code for the dialog box \<DIV\>." \}), 33:(\{ "Walk the HVL and return the maximum non-nil value found." \}), 34:(\{ "List the libraries/signals/hooks loaded in an NPC." \}), 35:(\{ "Toggles page:busy status." \}), 36:(\{ "The act-post:enter script for the mounting system (NIP), which handles movement through rooms." \}), 37:(\{ "Walk the HVL and return the minimum non-nil value found." \}), 38:(\{ "This function is used to trigger the heartbeat thread in a CNPC." \}), 39:(\{ "Convert char \$ch to a hexadecimal value." \}), 40:(\{ "An input-box for text." \}), 41:(\{ "Approach script, inherited whenever someone mounts an NPC, which deals with movement issues within rooms." \}), 42:(\{ "Find the most specific value set in the HVL." \}), 43:(\{ "Simple handler for the presents feature." \}), 44:(\{ "Converts seconds into human readable output" \}), 45:(\{ "Initialize the values used to determine the page to view, etc." \}), 46:(\{ "Script for dismounting NPC's." \}), 47:(\{ "Walk the HVL and return the product of non-nil values." \}), 48:(\{ "This is the 'recording' script, used to teach CNPC's how to act." \}), 49:(\{ "Create an object using a pre-existing template." \}), 50:(\{ "Remove the contents of an element if it is defaulty." \}), 51:(\{ "Leave script, inherited whenever someone mounts an NPC, which deals with movement issues within rooms." \}), 52:(\{ "Walk the HVL and return the sum of non-nil values." \}), 53:(\{ "This function is used to permanently add a function to the +nip extensions." \}), 54:(\{ "Gets a property from the game database" \}), 55:(\{ "Add a JavaScript tip to an input-box using show_tip() and hide_tip()." \}), 56:(\{ "Transfer a target to his or her room, or optionally other specified places." \}), 57:(\{ "Stance handler for mounted NPC's. This script ensures stances are displayed correctly." \}), 58:(\{ "Relations rule editing tool." \}), 59:(\{ "Checks if account is on the denied list" \}), 60:(\{ "Create a welcome box, unless it is specified to not be displayed in \$body." \}), 61:(\{ "Set up a scene with external targets." \}), 62:(\{ "[DEPRECATED; Use common::distant_emit()!]" \}), 63:(\{ "Create a list of configurations in \$body." \}), 64:(\{ "This function is used to set up a CNPC library to use the NIP core functionality. It is called through +nip." \}), 65:(\{ "Send an emit from a center and outwards in a circular fashion, including strong and faint sound versions." \}), 66:(\{ "Initiate the emit." \}), 67:(\{ "Send a signal to the heartbeat thread of a CNPC." \}), 68:(\{ "Finds and returns an array of NRefs of exits in a specific room. Optional is also to 'spread' the check several steps away from the room." \}), 69:(\{ "List all executions of a specific configuration." \}), 70:(\{ "This script distributes the various function calls to the chat channels, such as the standard 'on', 'off', 'recall' commands." \}), 71:(\{ "This is the 'tracking' script, used to enable/disable track record vectors." \}), 72:(\{ "[DEPRECATED; Use internal Arr() function!] Explicitly (re)declare a variable as an array." \}), 73:(\{ "The feeder makes sure every logged on chatter receives each evoke or emote on all chat lines." \}), 74:(\{ "This function lists settings in the nipper." \}), 75:(\{ "Extract a name from an object without using briefs or Describe()." \}), 76:(\{ "Merry version of +setprop." \}), 77:(\{ "Get the preferred name for a specific object on the chatline." \}), 78:(\{ "NPC update script." \}), 79:(\{ "Create a list of IP numbers and return it as an array." \}), 80:(\{ "Set a series of variables based on the string \$query, allowing escaping." \}), 81:(\{ "Ignore someone on a chatline." \}), 82:(\{ "Is \$name bad? (Wrapper for SLib:common/is_badname.)" \}), 83:(\{ "Merry Evaluator." \}), 84:(\{ "Simple script that returns TRUE if \$body is listening to \$channel. If \$body is nil, \$actor is used." \}), 85:(\{ "Check to see if \$value is numeric or not." \}), 86:(\{ "Extract multiple properties from a given object and a given \\"search queue\\" and return these as mapped arrays (like ([ \\"prop\\" : \\"value\\", \\"prop2\\" : \\"value2\\", etc. ])" \}), 87:(\{ "Inherit this in any script to add LFC functionality. Set the property (export:)#id# to a short string, to specify the identifier for the hook." \}), 88:(\{ "Lookup a character \$name. If \$possessed is set, the functionality is identical to that of Lib:LPCompat/determine_user." \}), 89:(\{ "This script is used to add an object to the presents mapping \\"nip:trait:present:objects\\". Each object has an array of words that will 'trigger' the offering of the particular object." \}), 90:(\{ "Property set script for +setp(rop)." \}), 91:(\{ "Stop listening to a specific chatlib channel." \}), 92:(\{ "Turn a numeric value (\$val) into a string, and return with leading zero(es) (\$lzs #)." \}), 93:(\{ "This script is used to remove an object from the presents mapping \\"nip:trait:present:objects\\"." \}), 94:(\{ "Property set script for +setp(rop). (v2.0)" \}), 95:(\{ "Start listening to a specific chatlib channel." \}), 96:(\{ "'MORE' system command." \}), 97:(\{ "This script is part of the core of the ask \<npc\> for \<item\> functionality." \}), 98:(\{ "Set appearance preference for a channel. (secure)" \}), 99:(\{ "Applies sort position from array A to array B" \}), 100:(\{ "This script is part of the core of the ask \<npc\> for \<item\> functionality." \}), 101:(\{ "Purge a body (remove it from all chatlines)." \}), 102:(\{ "Parse a raw verb \$line and produce a word-list (\$raw_words) and an evoke (\$raw_evoke), if applicable." \}), 103:(\{ "Update the covered mapping (add)." \}), 104:(\{ "Recall the past few lines of a channel." \}), 105:(\{ "Extract multiple properties from a given object and a given" \}), 106:(\{ "Update the covered mapping (add)." \}), 107:(\{ "The relay_chat script for the chatlib." \}), 108:(\{ "Recursively query for the next object (or \$which, if set) in the UrChain." \}), 109:(\{ "Update the covered mapping (sub)." \}), 110:(\{ "Handle channel WHO requests over cross-game." \}), 111:(\{ "[DEPRECATED FUNCTION; DO NOT USE] Send a random emit to an environment, and (optionally) an actor/target." \}), 112:(\{ "Update the covered mapping (sub)." \}), 113:(\{ "Clean a float currency value (\$value) and return string result." \}), 114:(\{ "Get a who-listing request." \}), 115:(\{ "DEPRECATED FUNCTION; DO NOT USE" \}), 116:(\{ "This script will accept any items that are addressed to someone." \}), 117:(\{ "Deduct money from \$actor, based on a specific CDO (cash data object)." \}), 118:(\{ "Send \$message to \$line (from \$actor, or, if \$system is set (TRUE), from the system itself)." \}), 119:(\{ "Generate a string of characters defined by \$what of size \$size and return the result." \}), 120:(\{ "This script initializes couriers and adds the object NPC:misc:scroll to the list of distributed items. It will also add lib:handler:offer:addressed to the offers chain." \}), 121:(\{ "Query an object on their assets, based on a specific CDO (cash data object)." \}), 122:(\{ "Unignore someone on a chatline." \}), 123:(\{ "Replace strings with locked replacement (for consistency) so that for instance \\"north to south and south to north\\" will function properly." \}), 124:(\{ "Make sure anyone entering the room is taken into account for possible queued deliveries." \}), 125:(\{ "Close a secret door automatically after a period of time." \}), 126:(\{ "Extended ask response, which checks for a 'item list' object." \}), 127:(\{ "Display who is listening on a channel, limited to \\"Online\\" and \\"Idle/Away\\"." \}), 128:(\{ "Checks if account is on the resticted list." \}), 129:(\{ "Make sure anyone teleporting into the room is taken into account for possible queued deliveries." \}), 130:(\{ "Replacement for the \\"presents\\" lib 'ask-for' handler, this script will take into account cost of item. The ability to hand out \\"free\\" things is lost, however, and a customized merge of this and the presents v. is required in order to implement such." \}), 131:(\{ "Display who is listening on a channel." \}), 132:(\{ "Turns a time/date string into seconds since 1/1/70" \}), 133:(\{ "Read a price menu." \}), 134:(\{ "Sort an array of objects (\$objects) based on their Describe()." \}), 135:(\{ "Accept and pay for an object." \}), 136:(\{ "[DEPRECATED FUNCTION; USE explode(\<str\>, \\" \\") instead!] Convert a string value into an array of words. Input defaults to \$evoke unless \$split has been set. String array returned." \}), 137:(\{ "Compute the amount of differences in one-two properties." \}), 138:(\{ "Return a string representation of an array of strings (\$list) as \\"\<first\>, \<second\>, \<...\> and \<last\>\\"" \}), 139:(\{ "Compare any two values with each other." \}), 140:(\{ "Commit template object data and (if applicable) hand over to the commit_call." \}), 141:(\{ "Displays the contents of a merry script." \}), 142:(\{ "Find the top/roof environment for \$what." \}), 143:(\{ "Get property on all objects in a list." \}), 144:(\{ "Using basic rules, tweak an adverb; used e.g. in remain and appear." \}), 145:(\{ "Perform all deliveries to \$recipient." \}), 146:(\{ "Get values of property on all objects in a list." \}), 147:(\{ "Unadverbian replaces adverbs used in particular socials with the adjective version." \}), 148:(\{ "Create an array of all the properties of an object." \}), 149:(\{ "Return a list of bodies currently online." \}), 150:(\{ "Set property on all objects in list." \}), 151:(\{ "Determines if a string matches a pattern." \}), 152:(\{ "Extract (unmerge) a mapping into VARIABLE_indice variables." \}), 153:(\{ "Shortens a word to specified length by doing \\"abc...def\\"" \}), 154:(\{ "This sig-hook script scans the room for volitional objects, and incrementally checks if they have a delivery waiting." \}), 155:(\{ "Merge VARIABLE_indice arrays into mappings." \}), 156:(\{ "A word wrap function. Works best if you pass it through PRE() but you do not have to." \}), 157:(\{ "Function that handles yelling across rooms." \}), 158:(\{ "Witness a sense/hear action and evaluate the details:default:description:react-post:sense/hear construct and emit it." \}), 159:(\{ "Witness a sense/smell action and evaluate the details:default:description:react-post:sense/smell construct and emit it." \}), 160:(\{ "This script is executed once, when an NPC loads the 'mounting' library." \}), 161:(\{ "This script deals with mounting an NPC." \}), 162:(\{ "Move out through a random exit." \}), 163:(\{ "This library will make an NPC leave the room on occasion, at random." \}), 164:(\{ "Disconnect (linkdie) connection trigger. This script is executed every time someone disconnects from the game." \}), 165:(\{ "Login connection trigger. This script is executed every time someone logs into the game." \}), 166:(\{ "Logout (quit) trigger. This script is executed every time someone quits the game." \}), 167:(\{ "Gather hourly stats on playage." \}), 168:(\{ "Create a merry stamp listing the merry functions." \}), 169:(\{ "Delayed connection aspect. If the specified amount of hours have passed, execute the delayed connections list." \}), 170:(\{ "MSTAMP database apply() script." \}), 171:(\{ "+lastseen -- Sets sessiontime and total which determine average amount of seconds a character stays connected per connection." \}), 172:(\{ "+see linkdie (DC) script." \}), 173:(\{ "Timestamp linkdie (DC) script." \}), 174:(\{ "This script is a simple shell for NPC ask features." \}), 175:(\{ "Assist alert stuff." \}), 176:(\{ "conversion trigger to make everyone MGeneric." \}), 177:(\{ "Spawned NPC control script." \}), 178:(\{ "Internal script used by modify:libraries to add merry inheritance." \}), 179:(\{ "NewlieChat login script." \}), 180:(\{ "Internal script used by modify:libraries to delete merry inheritance." \}), 181:(\{ "Emit for Knights Challenge" \}), 182:(\{ "System update script." \}), 183:(\{ "NewlieChat login script." \}), 184:(\{ "Find a NIP object by name, either absolute or generic" \}), 185:(\{ "This script is inherited by a CNPC whenever it starts recording behavior." \}), 186:(\{ "Account offline-page login-script." \}), 187:(\{ "This script is the heartbeat thread. It runs 24/7 on all active CNPC's, and is responsible for everything spontaneous." \}), 188:(\{ "Process Red request." \}), 189:(\{ "Prisoner system check. If actor logs into a \\"cell\\" area, remove them from the supposed roster." \}), 190:(\{ "This is the initialization script for the core \\"library\\"." \}), 191:(\{ "This is the internal decide:decide-exec hook." \}), 192:(\{ "Parse." \}), 193:(\{ "Removes the old bilbo SG inherit" \}), 194:(\{ "This function is called by the 'set' +nip function to implement the core base in a new CNPC. The core base is used to load the rest of the core library into the system internally, using the core system itself." \}), 195:(\{ "This is the internal decide:decide-init hook." \}), 196:(\{ "+see login script." \}), 197:(\{ "Extended LOG feature for the NIP system." \}), 198:(\{ "This is the internal decide:decide-post hook." \}), 199:(\{ "Set timestamp in \$actor." \}), 200:(\{ "The libraries modifier is executed by the setprop trigger and is used to add/remove CNPC libraries." \}), 201:(\{ "+lastseen -- Sets sessiontime and total which determine average amount of seconds a character stays connected per connection." \}), 202:(\{ "This function is (should be) used to add merry functions to the Data:NIP:functions registry. These functions are used by +nip to control and/or configure CNPC bodies and/or libraries." \}), 203:(\{ "Prisoner system check. If actor logs out of a \\"cell\\" area, add them to the supposed roster." \}), 204:(\{ "Shutdown command (compatible with resource-control)." \}), 205:(\{ "+see quit script." \}), 206:(\{ "Used to add libraries to CNPC's." \}), 207:(\{ "Quit (logout) timestamp script." \}), 208:(\{ "Alias for delete" \}), 209:(\{ "+see notification script" \}), 210:(\{ "Used to remove libraries to CNPC's." \}), 211:(\{ "This is the internal delay:delay-exec hook. It will execute the actual pause that occurs between each of the CNPC's unprovoked actions (self-triggered if you will)." \}), 212:(\{ "The default error handler." \}), 213:(\{ "This is the internal delay:delay-init hook. It will set the initial value for the \$NPC_PAUSE property." \}), 214:(\{ "The setprop-trigger for the NIP namespace." \}), 215:(\{ "The setprop-trigger for the NIP-CORE namespace." \}), 216:(\{ "This is the internal internal:internal-exec hook." \}), 217:(\{ "Alias for delete" \}), 218:(\{ "Internal script used to locate all merry scripts that relate to a certain hook and signal, in a certain script." \}), 219:(\{ "This script internally registers a new hook with a signal (and vice versa)." \}), 220:(\{ "This script internally unregisters a hook from the chain of a signal." \}), 221:(\{ "This script handles the hook modifications on CNPC libraries." \}), 222:(\{ "This script (re)calculates the signal/hook path which contains the series of scripts the heartbeat thread executes each loop." \}), 223:(\{ "Used to add/remove hooks to libraries." \}), 224:(\{ "This script handles the signal modifications on CNPC libraries." \}), 225:(\{ "Used to create/modify signals." \}), 226:(\{ "The SIGEXECptr setprop hook sets and unsets the signal stream hook (located in Lib:NIP:lib:stream) on demand." \}), 227:(\{ "This is the signal stream hook. It will be inherited on demand whenever a hook or signal wants a certain script to be executed whenever the SIGEXEC signal is caught." \}), 228:(\{ "This setprop hook executes the \\"SIGEXEC\\" stream (0x050) whenever the property \\"DECIDE\\" is set in \\"this\\"." \}), 229:(\{ "This hook will slow the NPC down a bit if it's neutral." \}), 230:(\{ "This script grabs the analysis generated from the various mood sighooks and determines the CNPC's current mood." \}), 231:(\{ "This is the init script for the mood signal hook(s). It will reset a number of values used to calculate the CNPC's current mood." \}), 232:(\{ "This script will look at various things and bump the 'ANGRY' mood accordingly." \}), 233:(\{ "As the anger lib is loaded, we add 'ANGRY' to the list of moods." \}), 234:(\{ "This script is called by the react:evoke-iob/dob scripts, and any NPC's that have the commanding library implemented will execute this every time someone acts towards the NPC (with an evoke)." \}), 235:(\{ "This script is used to add a script to the command chain \\"nip:trait:commands\\"." \}), 236:(\{ "This script is used to remove a script from the command chain \\"nip:trait:commands\\"." \}), 237:(\{ "Shell for 'lib:commanding'" \}), 238:(\{ "This script increments the CNPC's energy when it eats something." \}), 239:(\{ "Shell for 'lib:commanding'" \}), 240:(\{ "The lib:done-post script, executed after the \\"eating\\" library has been removed from a CNPC." \}), 241:(\{ "This script will check if we're hungry enough to do something about it, and based on our hunger, we will go to greater extremes, ending up with looking in the room we're in for food and grabbing it if we can and are hungry enough." \}), 242:(\{ "The internal eating script will make the CNPC hungrier over time." \}), 243:(\{ "Shortcut-command for behavior DB calls." \}), 244:(\{ "This script will alter the mood slightly if the CNPC is very hungry." \}), 245:(\{ "There's a chance (specified in 'nip:trait:emoting:frequency') we will spontaneously emote something." \}), 246:(\{ "The offer script for the eating CNPC feature." \}), 247:(\{ "Parse an emote from db \$db, mood \$mood." \}), 248:(\{ "This script is executed 1) when the eating hook is loaded, and 2) whenever another hook is loaded." \}), 249:(\{ "Pre-parse for emoting. The pre-parsing creates things such as \$time, \$name, \$title, etc." \}), 250:(\{ "Make use of the \\"add_offer\\" core script." \}), 251:(\{ "There's a chance (specified in 'nip:trait:freemoting:frequency') we will spontaneously freemote something." \}), 252:(\{ "Add the emoting library to the NPC." \}), 253:(\{ "Freemote handler." \}), 254:(\{ "This script will look at various things (e.g.i.a. hunger) and bump the 'HAPPY' mood accordingly." \}), 255:(\{ "As the happiness lib is loaded, we add 'HAPPY' to the list of moods." \}), 256:(\{ "This script will make the musicians want to play, and is triggered as the authoritative person [tm] says \\"Begin\\", \\"Proceed\\" or \\"Start\\" to the musicians." \}), 257:(\{ "This script will make the musicians stop playing, and is triggered as the authoritative person [tm] says \\"Stop\\", \\"End\\" or \\"Conclude\\" to the musicians." \}), 258:(\{ "As the musician lib is loaded, we add 'PLAY' to the list of moods. We also add the 'begin'/'end' command triggers (and a few aliases for each)." \}), 259:(\{ "Unsynchronize the player(s) so that they aren't playing in chunks." \}), 260:(\{ "This script is used to add a script to the offer chain \\"nip:offer:scripts\\". Each script listed there will be executed and if either returns a TRUE, the offer will be accepted." \}), 261:(\{ "This script will set the \\"PLAY\\" mood to 20 if the musicians are supposed to play, and to 0 if they're not." \}), 262:(\{ "This script is used to subtract a script from the offer chain \\"nip:offer:scripts\\"." \}), 263:(\{ "Gesture players to direct them somewhere." \}), 264:(\{ "This script is a simple shell for any scripts that would potentially scan offers and take part in deciding whether or not the offer should be accepted. If you are about to make an addition to a CNPC that involves offering things to them, use the \\"lib:core:add_offer\\" and \\"lib:core:sub_offer\\" scripts provided with this library." \}), 265:(\{ "Get property on all WOE objects in a given WOE folder." \}), 266:(\{ "[deprecated] Please use list_folder instead of list-folder." \}), 267:(\{ "Return a string list of objects, sub-folders or both residing in a folder." \}), 268:(\{ "Return list of all WOE objects in a given WOE folder." \}), 269:(\{ "As the happiness lib is loaded, we add 'SAD' to the list of moods." \}), 270:(\{ "Set property on all WOE objects in a given WOE folder." \}), 271:(\{ "This script will look at various things (e.g.i.a. hunger) and bump the 'SAD' mood accordingly." \}), 272:(\{ "This script is executed whenever the CNPC changes state (awake/sleep), through the usage of e.g. the \\"sleeping\\" hook's lib:sleeping:decide script." \}), 273:(\{ "This is the standard awakening script. Replace it with your own library when the need for a customized awake-script arise." \}), 274:(\{ "This is the standard go-to-sleep script. Replace it with your own library when the need for a customized sleep-script arise." \}), 275:(\{ "This script is executed 1) when the sleeping hook is loaded, and 2) whenever another hook is loaded." \}), 276:(\{ "This script (may be) used to add moods to the CNPC moods registry." \}), 277:(\{ "Sleeping decide script. \\"Go to sleep or fall awake?\\"" \}), 278:(\{ "This script (may be) used to remove moods from the CNPC moods registry." \}), 279:(\{ "Delay script for the sleeping hook. This one will multiply the delay by 4 if the state is asleep." \}), 280:(\{ "We initialize the MOOD signal and add a basic mood we call \\"NEUTRAL\\"." \}), 281:(\{ "Internal sleeping script. Increment weariness." \}), 282:(\{ "This script will alter the mood slightly if the CNPC is very tired." \}), 283:(\{ "Evoke witness for the communicate lib (provided thru omni-comm)." \}), 284:(\{ "Callback-parse a string." \}), 285:(\{ "Compare \$data (old) and \$datab (new) and produce a diff. Accepts \$ignore_spacing (TRUE\|FALSE)." \}), 286:(\{ "Forge a table array based on a number of properties set up in a specified format." \}), 287:(\{ "Implode a \$diff, returning a series of tagged lines with the class plus, minus or equal." \}), 288:(\{ "Script inherited into the ROOM which acts as the NPC for deliveries." \}), 289:(\{ "Prettify-resolve variable into a human-readable entry for +pprint." \}), 290:(\{ "Strip SkotOS tags from a string." \}), 291:(\{ "Advanced string length of \$s, which wraps around \<atag\> and \<acmd\> resolves." \}), 292:(\{ "Create an ASCII-table based on the 2-dim. array \$content." \}), 293:(\{ "Convert a string* (\$array) into a series of \<option\> entries, if \$selected is found matching either, it is set." \}), 294:(\{ "Implode a \$diff, returning a series of divs with the class plus, minus or equal." \}), 295:(\{ "Remove the contents of an element if it is defaulty." \}), 296:(\{ "Add a JavaScript tip to an input-box using show_tip() and hide_tip()." \}), 297:(\{ "Create a welcome box, unless it is specified to not be displayed in \$body." \}), 298:(\{ "Generate a \<zlink\> based on the arguments." \}), 299:(\{ "HTML Template parser." \}), 300:(\{ "HTML parser engine." \}), 301:(\{ "Create a HTML table based on the Lib:ascii argument set up." \}), 302:(\{ "2003-08-31 Rev. 0-1: Data:NIP:system inheritage updated with act:start for spawned NPC's." \}), 303:(\{ "Creates the tree" \}), 304:(\{ "2003-11-17 Rev. 9-10: This update updates any CNPC's using the 'eating' library." \}), 305:(\{ "Create tree output" \}), 306:(\{ "2003-11-18 Rev. 10-11: This update updates any CNPC's using the 'emoting' library." \}), 307:(\{ "Create tree output recursive" \}), 308:(\{ "2003-11-21 Rev. 11-12: This update updates any CNPC's using the 'predator' library." \}), 309:(\{ "The DECIDE sig-hook for the nip hook." \}), 310:(\{ "Create suffix for queue name" \}), 311:(\{ "2003-11-26 Rev. 12-13: Add new inherit for ::shutdown();" \}), 312:(\{ "The INTERNAL sig-hook for the nip hook." \}), 313:(\{ "Tree creation recursive" \}), 314:(\{ "2003-11-27 Rev. 13-14: Implement log feature." \}), 315:(\{ "Sets abort." \}), 316:(\{ "2003-12-20 Rev. 14-15: Re-add inherit for ::shutdown();" \}), 317:(\{ "The spawn system script, called by any NPC using the spawn-system when it is slain." \}), 318:(\{ "Adds a note to your personal calendar" \}), 319:(\{ "2003-12-21 Rev. 15-16: This update updates any CNPC's using the 'predator' library." \}), 320:(\{ "Add/remove appearance traits to details." \}), 321:(\{ "NCS connect script." \}), 322:(\{ "Add a Queue if it does not exist" \}), 323:(\{ "2004-02-17 Rev. 16-17: Deprecated properties for freemote db's need auto-adjustment." \}), 324:(\{ "NCS disconnect script." \}), 325:(\{ "Assigns an assist to a specific person and informs them on login." \}), 326:(\{ "2004-03-23 Rev. 17-18: This update updates any CNPC's using the 'resource-control' library." \}), 327:(\{ "External Request handler - UPDATE" \}), 328:(\{ "Associate a queue with an account on a specific server" \}), 329:(\{ "2004-03-30 Rev. 18-19: This update updates any CNPC's using the 'movement' library." \}), 330:(\{ "Help screen for +NCS" \}), 331:(\{ "The room-cleaning decide hook-script. This script will randomly pick up trash from \\"the current room.\\" An object is defined as trash according to the SkotOS Trash System rules." \}), 332:(\{ "Display the attachment popup to the user for a specific assist/task." \}), 333:(\{ "2003-08-31 Rev. 1-2: NCS support implemented." \}), 334:(\{ "Set NCS up in \$NPC using default handler etc." \}), 335:(\{ "Script to backup the assist DBs." \}), 336:(\{ "2004-03-30 Rev. 19-20: This update updates any CNPC's using the 'wounding' library." \}), 337:(\{ "NCS request handler (basic)." \}), 338:(\{ "Create and display calendar" \}), 339:(\{ "2004-04-23 Rev. 20-21: Fail to inherit base script fix." \}), 340:(\{ "NIP Control System popup interface." \}), 341:(\{ "Displays specific day info" \}), 342:(\{ "2004-04-23 Rev. 21-22: Previous update invalid." \}), 343:(\{ "Disable any nippers connected to the NCS without actually being enabled." \}), 344:(\{ "The offer script for the trash-taking CNPC's." \}), 345:(\{ "New calendar code" \}), 346:(\{ "2004-05-19 Rev. 22-23: This update updates any CNPC's using the 'freemoting' library." \}), 347:(\{ "NCS signature register function." \}), 348:(\{ "Make use of the \\"add_offer\\" core script." \}), 349:(\{ "Gets the character object" \}), 350:(\{ "2004-08-07 Rev. 23-24: This update updates any CNPC's using the 'trading' library." \}), 351:(\{ "NCS request function." \}), 352:(\{ "Slay an item." \}), 353:(\{ "Does all the required chatfeeding" \}), 354:(\{ "2004-08-17 Rev. 24-25: This update applies to all nippers using the 'wearer' library." \}), 355:(\{ "Find a unique identifier for an NPC." \}), 356:(\{ "Sets chatline ignore list to hide output." \}), 357:(\{ "2004-08-23 Rev. 25-26: This update is global." \}), 358:(\{ "+NCS 'status' request." \}), 359:(\{ "Executed when an NPC is slayed, the act:stop script triggers the lib:system script in Lib:NIP:EXT:spawn, which in turn scans the area object for information on when/what/where to spawn a replacement." \}), 360:(\{ "Sets chatline show list to show output." \}), 361:(\{ "2004-10-13 Rev. 26-27: This update applies to all nippers using the 'musician' library." \}), 362:(\{ "+NCS 'update' request." \}), 363:(\{ "Claims assist" \}), 364:(\{ "2004-10-27 Rev. 27-28: This update applies to all nippers using the 'trash-taker' library." \}), 365:(\{ "+NCS '+people' request." \}), 366:(\{ "Cleanup Code for Various Uses" \}), 367:(\{ "2004-10-29 Rev. 28-29: This update applies to all nippers using the 'courier' library." \}), 368:(\{ "Restart all nippers." \}), 369:(\{ "Creates the search db" \}), 370:(\{ "2003-09-23 Rev. 2-3: NCS support dummy." \}), 371:(\{ "Script inherited into the OBJECT which acts as the NPC for deliveries." \}), 372:(\{ "Initializes the new search db, parsing through entire TAS db." \}), 373:(\{ "2004-11-01 Rev. 29-30: This update applies to all nippers using the 'resource-control' library." \}), 374:(\{ "Sets appropriate stats" \}), 375:(\{ "2004-11-16 Rev. 30-31: This update applies to all nippers using the 'resource-control' library." \}), 376:(\{ "Runs the delay loop for the backup script." \}), 377:(\{ "2005-05-12 Rev. 31-32: This update applies to all nippers using the 'emoting' library." \}), 378:(\{ "Creates a long table of all assist info" \}), 379:(\{ "2005-05-15 Rev. 32-33: This update applies to all nippers using the 'emoting' library." \}), 380:(\{ "Determine whether we choose to attack nearby prey or not. (PC killer version)" \}), 381:(\{ "Discards an assist with a generic message" \}), 382:(\{ "2006-02-03 Rev. 33-34: This update applies to all nippers using the 'emoting' library." \}), 383:(\{ "Moves an assist from the current queue to the finished queue." \}), 384:(\{ "2006-02-14 Rev. 34-35: This update applies to all nippers using the 'prey' library." \}), 385:(\{ "Creates a new filed assist" \}), 386:(\{ "2006-02-20 Rev. 35-36: This update applies to all nippers using the 'resource-control' library." \}), 387:(\{ "Adds a flag to an assist" \}), 388:(\{ "2006-03-06 Rev. 36-37: This update applies to all nippers using the 'guarding' library." \}), 389:(\{ "Authority request script. This is generic and useless in most cases, and a secondary library should override it." \}), 390:(\{ "List available flags" \}), 391:(\{ "2006-04-25 Rev. 37-38: This update applies to all nippers using the 'emoting' library." \}), 392:(\{ "Make sure someone is authorized to enter an exit." \}), 393:(\{ "Sets your queue focus for subqueues" \}), 394:(\{ "2006-04-26 Rev. 38-39: This update applies to all nippers using the 'freemoting' library." \}), 395:(\{ "Removes a watched assist." \}), 396:(\{ "2003-09-23 Rev. 3-4: Default error handler added." \}), 397:(\{ "This script is used by the relations NIP library to determine the type of action performed." \}), 398:(\{ "Gets the assist from the appropriate object and returns an array." \}), 399:(\{ "2006-08-03 Rev. 39-40: This update applies to all nippers using the 'prey' library." \}), 400:(\{ "Query a character's relationship in a particular category (\$category) towards me. The relationship is returned as an integer." \}), 401:(\{ "Lists help or specific help" \}), 402:(\{ "2006-08-03 Rev. 40-41: This update applies to all nippers using the 'prey' library." \}), 403:(\{ "This script \\"pipes\\" commands to lib:handler:relations." \}), 404:(\{ "Lists all the info for an assist." \}), 405:(\{ "2006-08-03 Rev. 41-42: This update applies to all nippers using the 'fighting-fake' library." \}), 406:(\{ "This script \\"pipes\\" commands to lib:handler:relations." \}), 407:(\{ "Initial the general DB" \}), 408:(\{ "2006-10-25 Rev. 42-43: This update applies to all nippers using the 'death' library." \}), 409:(\{ "Links assists together" \}), 410:(\{ "2006-10-25 Rev. 43-44: Copycat." \}), 411:(\{ "Lists all open assist for player" \}), 412:(\{ "2003-09-23 Rev. 4-5: react-post:offer-to -=\> react-post:offer-who change." \}), 413:(\{ "Decides what to do. List a queue or claim an assist" \}), 414:(\{ "2003-10-28 Rev. 5-6: This update implements the new this.npc feature (set in the parent NPC). The new feature implements a more efficient way of dealing with spawns of NPC's, where instead of brutally copying the properties down to the child, the NPC now has two layers, the property NPC and the spawn NPC." \}), 415:(\{ "Locks a queue" \}), 416:(\{ "2003-11-01 Rev. 6-7: This update replaces the this.npc feature with the nip and nip-core namespace setprop-triggers." \}), 417:(\{ "return the state descripting for a given state and value" \}), 418:(\{ "Displays defined queues." \}), 419:(\{ "2003-11-01 Rev. 7-8: This update removes and re-adds all libraries in the NPC. This is necessary due to the extensive amount of modifications to the system." \}), 420:(\{ "Alert line if player logs in and has an assist marked with the Alert flag. Also alert staffer if they have an assist claimed." \}), 421:(\{ "2003-11-01 Rev. 8-9: This update refreshes all NIP and NIP-CORE properties in the NPC." \}), 422:(\{ "Add a note to the assist" \}), 423:(\{ "Checks connected players to see if they have any assists open." \}), 424:(\{ "Sends an opage to the player who filed the task for the assist specified" \}), 425:(\{ "Shows all open assists" \}), 426:(\{ "For testing TAS popup code" \}), 427:(\{ "Sets your preferred queue for the +/!tas command queue list" \}), 428:(\{ "Change priority of a task" \}), 429:(\{ "Set a queue as private" \}), 430:(\{ "Set a queue as public" \}), 431:(\{ "Lists the queues" \}), 432:(\{ "Give a queue a description" \}), 433:(\{ "Displays info for queue" \}), 434:(\{ "Shows you the content of any queues you are monitoring." \}), 435:(\{ "Shows assists filed in last 24 hours." \}), 436:(\{ "Lists the top 25 most recent filed tasks" \}), 437:(\{ "Relays a task to the relay server" \}), 438:(\{ "Remove a Queue if it does not exist" \}), 439:(\{ "Renames a queue and all assists that were members of that queue." \}), 440:(\{ "emits the amount of time left for treating someone" \}), 441:(\{ "Retrieve an assist and dump it back into the new queue to be dealt with as appropriate." \}), 442:(\{ "Return your assist back to the queue it came from" \}), 443:(\{ "Sticks a task to the specified calendar date" \}), 444:(\{ "Searches all assists for string." \}), 445:(\{ "put 'a' or 'an' infront of a word" \}), 446:(\{ "Sends an email for special queues as defined in mapping:queues:email" \}), 447:(\{ "store old Generic properties in MGMarrach:players:backup:[X]:[Y]" \}), 448:(\{ "Creates a new assist. Sets it in the appropriate DB. Creates a new DB if necessary." \}), 449:(\{ "convert a Generic character to MGeneric" \}), 450:(\{ "Switches a queue between long and short format" \}), 451:(\{ "Emit message to \$actor at debug level 2" \}), 452:(\{ "Shifts alert status from character A to character B" \}), 453:(\{ "Emit a title message to \$actor at debug level 1 or 2" \}), 454:(\{ "bring people back to life" \}), 455:(\{ "Shows all closed assists for queue" \}), 456:(\{ "Emit a variable name and value to \$actor at debug level 2" \}), 457:(\{ "Shows info for all assists in queue" \}), 458:(\{ "Emit a list of variable names and values to \$actor at debug level 2" \}), 459:(\{ "Shows all closed assists for queue" \}), 460:(\{ "register names spaces for MGeneric" \}), 461:(\{ "Moves a queue into a subqueue" \}), 462:(\{ "Additional Script Testing Space" \}), 463:(\{ "Displays Assist Statistics" \}), 464:(\{ "Transfers open assists from one queue to another." \}), 465:(\{ "Tree listing of all queues" \}), 466:(\{ "TWikize the output for easy copy and paste into twiki" \}), 467:(\{ "Unlocks a queue" \}), 468:(\{ "Watches an assist for changes. Alerts you on login." \}), 469:(\{ "Interpret (string) value in SearchDB bigmap." \}), 470:(\{ "Create string value from array (of integers), for SearchDB bigmap." \}), 471:(\{ "report an error" \}), 472:(\{ "Resource control trigger for a specific area." \}), 473:(\{ "item already altered and do not have skill level to alter again" \}), 474:(\{ "Move a tattoo from one detail to another" \}), 475:(\{ "Deliver items for a particular recipient, presuming a courier is nearby." \}), 476:(\{ "Shut \$NPC down." \}), 477:(\{ "Enqueue an item (\$item) for delivery into \$database." \}), 478:(\{ "Activity report command." \}), 479:(\{ "Determine whether a heartbeat is running in \$NPC." \}), 480:(\{ "Purge all over-aged deliveries in the database." \}), 481:(\{ "Purge trash that is 1+ day old." \}), 482:(\{ "Process a sentence (\$evoke_to_npc) and return a result spoken string." \}), 483:(\{ "Resolve meta family data \$meta_fam." \}), 484:(\{ "Resolve a family array and return success/failure." \}), 485:(\{ "Resource control trigger for a specific room." \}), 486:(\{ "Evoke response for the communicate lib." \}), 487:(\{ "Evoke response for the communicate lib." \}), 488:(\{ "Simplified death handler." \}), 489:(\{ "clear out the detailed description for the detail. Used when default detail changed" \}), 490:(\{ "The prey defend script, which calculates the outcome of a hunter/prey situation." \}), 491:(\{ "The prey die script, which turns an NPC into a dead body." \}), 492:(\{ "Someone took a chunk outta me!" \}), 493:(\{ "This script modifies the mass of the target accordingly." \}), 494:(\{ "Set volition in spawned children automatically." \}), 495:(\{ "Attack prey script." \}), 496:(\{ "Unset volition." \}), 497:(\{ "The predator replacement for the eating offers handler." \}), 498:(\{ "This script is executed 1) when the predator hook is loaded, and 2) whenever another hook is loaded." \}), 499:(\{ "The random traits start-handler." \}), 500:(\{ "Determine whether we choose to attack nearby prey or not." \}), 501:(\{ "Attach our traits script to the start-script chain." \}), 502:(\{ "emit for fatal wound" \}), 503:(\{ "Snake-mod to the description of eating food." \}), 504:(\{ "perform emits for bandage unravelling when wounded in bandaged location" \}), 505:(\{ "Add catalog" \}), 506:(\{ "Add a group" \}), 507:(\{ "Figure out what to add" \}), 508:(\{ "Attach a group to a catalog" \}), 509:(\{ "Parse argument mapping and return the first resulting string encountered." \}), 510:(\{ "Figure out what to do" \}), 511:(\{ "Figure out what to create" \}), 512:(\{ "Figure out what to list" \}), 513:(\{ "List the help, duh. I'm not sure I can get anymore explananitive than that." \}), 514:(\{ "The 'throw' version (by Kalle) of the 'place' system (by Zell). No prox, but consent preserved." \}), 515:(\{ "This code lists all the catalogs" \}), 516:(\{ "This code lists the various groups" \}), 517:(\{ "Figure out what to list. Either contents of a catalog, contents of a group of the list of groups that a character belongs to." \}), 518:(\{ "Remove a catalog" \}), 519:(\{ "This script will interpret an action and decide whether it's positive or negative, and whether it's ranged or touching, as well as its strength." \}), 520:(\{ "Remove a group" \}), 521:(\{ "Figure out what to remove" \}), 522:(\{ "Create an object/propcontainer/etc." \}), 523:(\{ "+see command action." \}), 524:(\{ "Add an account to \$actor's SEE-list." \}), 525:(\{ "Remove an account from a group (optionally by character name)." \}), 526:(\{ "Add an account (by character name) to a SEE-group." \}), 527:(\{ "Perform a wounding." \}), 528:(\{ "Disband a SEE-group." \}), 529:(\{ "Get a group." \}), 530:(\{ "Add a group to the actor's list." \}), 531:(\{ "List a specific SEE-group's members." \}), 532:(\{ "flush descriptions cache when alterations made" \}), 533:(\{ "Remove a group from the actor's list." \}), 534:(\{ "flush descriptions cache when alterations made" \}), 535:(\{ "List the existing SEE-groups." \}), 536:(\{ "List the \$actor's SEE-list." \}), 537:(\{ "shows remaining treatment time" \}), 538:(\{ "Merryized version of the 'who' list" \}), 539:(\{ "Disable SEE notifications." \}), 540:(\{ "Merryized version of the 'who' list" \}), 541:(\{ "Enable SEE notifications." \}), 542:(\{ "Merryized version of the 'who' list" \}), 543:(\{ "Display SEE scrollback buffer." \}), 544:(\{ "Subtract an account from \$actor's SEE-list." \}), 545:(\{ "clear the descriptions cache" \}), 546:(\{ "overridable emit to inform the player that they are not wounded and therefore do not need healing" \}), 547:(\{ "generate the converagetodetail mapping from the detailtocoverage mapping" \}), 548:(\{ "overridable emit to describe apply bandages" \}), 549:(\{ "overridable emit to inform the player that they cannot bandage an area as it is covered by clothing" \}), 550:(\{ "overridable emit to inform the player that they are already healing someone" \}), 551:(\{ "Disable a property (like a follow or restrain)." \}), 552:(\{ "overridable emit to inform the player that they cannot bandage an area as it is covered by clothing" \}), 553:(\{ "Enable a property in a body." \}), 554:(\{ "overridable emit to inform the patient that their doctor has been disconnected for too long" \}), 555:(\{ "Remove all followers." \}), 556:(\{ "overridable emit to inform the doctor that their patient has been missing for too long" \}), 557:(\{ "Release someone restrained." \}), 558:(\{ "overridable emit to inform the player that they are feeling better now" \}), 559:(\{ "Restrain someone." \}), 560:(\{ "overridable emit to inform the doctor that the treatment time for the patient has finished successfully" \}), 561:(\{ "Start following someone." \}), 562:(\{ "overridable emit to inform the player and the doctor that treatment has stopped as they are no longer in the same room" \}), 563:(\{ "sets a person to be left or right handed or none (default to right as main detail but do not show left or right in brief)" \}), 564:(\{ "Stop following." \}), 565:(\{ "overridable emit to inform the player that they have no skill as a healer" \}), 566:(\{ "This is an ugly hack to prevent follows from being broken when passing guards." \}), 567:(\{ "overridable emit to inform the player that they cannot heal that severity of wound" \}), 568:(\{ "overridable emit to inform the player that they are not wounded and therefore do not need healing" \}), 569:(\{ "overridable emit to inform the doctor that the person they were healing has removed their bandage halting the treatment process" \}), 570:(\{ "Emitter daemon." \}), 571:(\{ "overridable emit to inform the player that they require bandages to heal someone" \}), 572:(\{ "Disable an emitter for \$channel." \}), 573:(\{ "overridable emit to inform the healing player of treatment and healing times" \}), 574:(\{ "flush descriptions cache when alterations made" \}), 575:(\{ "Possibly perform emits for \$area." \}), 576:(\{ "flush descriptions cache when alterations made" \}), 577:(\{ "Enable an emitter for \$channel." \}), 578:(\{ "flush descriptions cache when alterations made" \}), 579:(\{ "Initialize popup." \}), 580:(\{ "create coveragetodetail mapping if detailtocoverage mapping altered" \}), 581:(\{ "Linkdie." \}), 582:(\{ "flush descriptions cache when alterations made" \}), 583:(\{ "Login." \}), 584:(\{ "flush descriptions cache when alterations made" \}), 585:(\{ "Logout." \}), 586:(\{ "flush descriptions cache when alterations made" \}), 587:(\{ "Store popup data." \}), 588:(\{ "Tweak population for \$actor." \}), 589:(\{ "Someone entered this room (we reacted to them emerging \\"from\\" a detail in us)." \}), 590:(\{ "Someone left this room (we reacted to them entering \\"INTO\\" a detail \\"in us\\")." \}), 591:(\{ "Someone teleported into this room." \}), 592:(\{ "Clears a character from the 'isplaying' map of the database." \}), 593:(\{ "Finds current instrument for actor from the 'isplaying' map of the database." \}), 594:(\{ "Finds the leader of a musical group." \}), 595:(\{ "Determines if actor is playing solo, as a member of a group, or as a leader of a group." \}), 596:(\{ "Finds list of current members in musical group." \}), 597:(\{ "Finds a qualitative adjective used when creating music." \}), 598:(\{ "Obtains the time an actor or group starting playing an instrument." \}), 599:(\{ "Script to determine style of instrumental." \}), 600:(\{ "Finds a list of tools used to create music." \}), 601:(\{ "Finds a list of verbs used to create music." \}), 602:(\{ "Script to handle Group instrumentals." \}), 603:(\{ "Handles the Player Help file for using instruments." \}), 604:(\{ "Post action for playing instruments." \}), 605:(\{ "Start of playing an instrument." \}), 606:(\{ "Script to handle Solo instrumentals." \}), 607:(\{ "Displays a list of styles included in the Music system." \}), 608:(\{ "Handles word replacements and music emits." \}), 609:(\{ "Places player data into database mapping." \}), 610:(\{ "This script is the heartbeat thread. It runs 24/7 on all active CNPC's, and is responsible for everything spontaneous." \}) ]) ])
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1124754088, "zwoc", "S" \})
      </Core:Property>
      <Core:Property property="strings">
         ([ "\\"practice\\" version of the exact same script as the blow-dob script. this one reaches about one step away from the actor.":(\{ \<Lib:instruments\>, "react:whisper-dob" \}), "'more' system command.":(\{ \<Lib:common\>, "lib:more" \}), "+lastseen -- sets sessiontime and total which determine average amount of seconds a character stays connected per connection.":(\{ \<Lib:connection\>, "lib:linkdie:lastseen", \<Lib:connection\>, "lib:quit:lastseen" \}), "+ncs '+people' request.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request_where" \}), "+ncs 'status' request.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request_status" \}), "+see command action.":(\{ \<Neoct:Staff:Actions:+see\>, "global:action" \}), "+see linkdie (dc) script.":(\{ \<Lib:connection\>, "lib:linkdie:see" \}), "+see login script.":(\{ \<Lib:connection\>, "lib:login:see" \}), "+see notification script":(\{ \<Lib:connection\>, "lib:see_notify" \}), "+see quit script.":(\{ \<Lib:connection\>, "lib:quit:see" \}), "2003-08-31 rev. 0-1: data:nip:system inheritage updated with act:start for spawned npc's.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:1" \}), "2003-08-31 rev. 1-2: ncs support implemented.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:2" \}), "2003-09-23 rev. 2-3: ncs support dummy.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:3" \}), "2003-09-23 rev. 3-4: default error handler added.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:4" \}), "2003-09-23 rev. 4-5: react-post:offer-to -=\> react-post:offer-who change.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:5" \}), "2003-10-28 rev. 5-6: this update implements the new this.npc feature (set in the parent npc). the new feature implements a more efficient way of dealing with spawns of npc's, where instead of brutally copying the properties down to the child, the npc now has two layers, the property npc and the spawn npc.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:6" \}), "2003-11-01 rev. 6-7: this update replaces the this.npc feature with the nip and nip-core namespace setprop-triggers.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:7" \}), "2003-11-01 rev. 7-8: this update removes and re-adds all libraries in the npc. this is necessary due to the extensive amount of modifications to the system.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:8" \}), "2003-11-01 rev. 8-9: this update refreshes all nip and nip-core properties in the npc.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:9" \}), "2003-11-17 rev. 9-10: this update updates any cnpc's using the 'eating' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:10" \}), "2003-11-18 rev. 10-11: this update updates any cnpc's using the 'emoting' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:11" \}), "2003-11-21 rev. 11-12: this update updates any cnpc's using the 'predator' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:12" \}), "2003-11-26 rev. 12-13: add new inherit for ::shutdown();":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:13" \}), "2003-11-27 rev. 13-14: implement log feature.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:14" \}), "2003-12-20 rev. 14-15: re-add inherit for ::shutdown();":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:15" \}), "2003-12-21 rev. 15-16: this update updates any cnpc's using the 'predator' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:16" \}), "2004-02-17 rev. 16-17: deprecated properties for freemote db's need auto-adjustment.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:17" \}), "2004-03-23 rev. 17-18: this update updates any cnpc's using the 'resource-control' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:18" \}), "2004-03-30 rev. 18-19: this update updates any cnpc's using the 'movement' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:19" \}), "2004-03-30 rev. 19-20: this update updates any cnpc's using the 'wounding' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:updates\>, "lib:update:20" \}), "a word wrap function. works best if you pass it through pre() but you do not have to.":(\{ \<Lib:common\>, "lib:wrap" \}), "abort a scheduled execution.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:abort" \}), "accept and pay for an object.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "react:take" \}), "activity report command.":(\{ \<MOVED:20080918-114107:Neoct:Staff:Verbs:+areport\>, "global:command" \}), "add a group":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doaddgroup" \}), "add a group to the actor's list.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:group_add" \}), "add a javascript tip to an input-box using show_tip() and hide_tip().":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:js_tip", \<Lib:html\>, "lib:js_tip" \}), "add a note to the assist":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:donote" \}), "add a page (\$message) to \$user using the +opage format. pages are appended equally, also.":(\{ \<Lib:common\>, "lib:add_page" \}), "add a queue if it does not exist":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doaddqueue" \}), "add an account (by character name) to a see-group.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:char_to_group" \}), "add an account to \$actor's see-list.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:add" \}), "add catalog":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doaddcatalog" \}), "additional script testing space":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dostatbyqueue" \}), "adds a flag to an assist":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doflag" \}), "adds a note to your personal calendar":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doaddnote" \}), "alert line if player logs in and has an assist marked with the alert flag. also alert staffer if they have an assist claimed.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dologon" \}), "alias for delete":(\{ \<Lib:NIP:core\>, "setprop-post:del", \<Lib:NIP:core\>, "setprop-post:sub" \}), "an input-box for selections.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:dlg_sel" \}), "an input-box for text.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:dlg_text" \}), "applies sort position from array a to array b":(\{ \<Lib:common\>, "lib:munge" \}), "approach script, inherited whenever someone mounts an npc, which deals with movement issues within rooms.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:approach" \}), "as the anger lib is loaded, we add 'angry' to the list of moods.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:anger\>, "lib:init" \}), "as the happiness lib is loaded, we add 'happy' to the list of moods.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:happiness\>, "lib:init" \}), "as the happiness lib is loaded, we add 'sad' to the list of moods.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sadness\>, "lib:init" \}), "as the musician lib is loaded, we add 'play' to the list of moods. we also add the 'begin'/'end' command triggers (and a few aliases for each).":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:init" \}), "assigns an assist to a specific person and informs them on login.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doassign" \}), "assist alert stuff.":(\{ \<Lib:connection\>, "lib:login:assist" \}), "associate a queue with an account on a specific server":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doassociate" \}), "attach a group to a catalog":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doattach" \}), "attach our traits script to the start-script chain.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-traits\>, "lib:init" \}), "attack prey script.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:act:predator:attack" \}), "authority request script. this is generic and useless in most cases, and a secondary library should override it.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>, "lib:handler:request-authority" \}), "behavior editing tool.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:bedit" \}), "broadcast to everyone online (in-characterly).":(\{ \<Lib:common\>, "lib:broadcast" \}), "calculate schedule for emit based on \$(iob:words).":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:calc_schedule" \}), "change priority of a task":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dopriority" \}), "checks connected players to see if they have any assists open.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doonline" \}), "checks if account is on the denied list":(\{ \<Lib:common\>, "lib:denied" \}), "claims assist":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doclaim" \}), "clean a float currency value (\$value) and return string result.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:core_clean_currency" \}), "cleanup code for various uses":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docleanup" \}), "close a secret door automatically after a period of time.":(\{ \<Lib:door\>, "lib:self-closing" \}), "commit template object data and (if applicable) hand over to the commit_call.":(\{ \<Lib:common\>, "lib:template_object_store" \}), "compare any two values with each other.":(\{ \<Lib:property\>, "lib:comp_value" \}), "compute the amount of differences in one-two properties.":(\{ \<Lib:property\>, "lib:comp_count" \}), "convert a string value into an array of words. input defaults to \$evoke unless \$split has been set. string array returned.":(\{ \<Lib:common\>, "lib:split-evoke" \}), "converts seconds into human readable output":(\{ \<Lib:common\>, "lib:convsecs" \}), "create a html table based on the lib:ascii argument set up.":(\{ \<Lib:html\>, "lib:table" \}), "create a list of configurations in \$body.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:list_configurations" \}), "create a merry stamp listing the merry functions.":(\{ nil, "global:action" \}), "create a welcome box, unless it is specified to not be displayed in \$body.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:js_welcome", \<Lib:html\>, "lib:js_welcome" \}), "create an array of all the properties of an object.":(\{ \<Lib:property\>, "lib:listprop" \}), "create an ascii-table based on the 2-dim. array \$content.":(\{ \<Lib:ascii\>, "lib:table" \}), "create an object using a pre-existing template.":(\{ \<Lib:common\>, "lib:create_object_from_template" \}), "create and display calendar":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docalendar" \}), "create suffix for queue name":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_output_suf" \}), "create tree output":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_output" \}), "create tree output recursive":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_output_rec" \}), "creates a long table of all assist info":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docurrent" \}), "creates a new assist. sets it in the appropriate db. creates a new db if necessary.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosetassist" \}), "creates a new filed assist":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dofileassist" \}), "creates the search db":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docreatesearchdb" \}), "creates the tree":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree" \}), "decides what to do. list a queue or claim an assist":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolistwhat" \}), "deduct money from \$actor, based on a specific cdo (cash data object).":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:core_trading_deduct" \}), "delay script for the sleeping hook. this one will multiply the delay by 4 if the state is asleep.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:delay" \}), "determine whether we choose to attack nearby prey or not.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:predator:decide" \}), "determine whether we choose to attack nearby prey or not. (pc killer version)":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:killer\>, "lib:predator:decide" \}), "disable see notifications.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:off" \}), "disband a see-group.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:disband" \}), "discards an assist with a generic message":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dodiscard" \}), "disconnect (linkdie) connection trigger. this script is executed every time someone disconnects from the game.":(\{ \<Lib:connection\>, "act-post:linkdie" \}), "display see scrollback buffer.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:recall" \}), "display the attachment popup to the user for a specific assist/task.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doattach" \}), "display who is listening on a channel, limited to \\"online\\" and \\"idle/away\\".":(\{ \<Lib:chatlib\>, "lib:w" \}), "display who is listening on a channel.":(\{ \<Lib:chatlib\>, "lib:who" \}), "displays assist statistics":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dostats" \}), "displays defined queues.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dologin" \}), "displays info for queue":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueueinfo" \}), "displays specific day info":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docalendar_day" \}), "do the actual resource-control code":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, "lib:resource-control:internal" \}), "does all the required chatfeeding":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dochatfeed" \}), "does the appropriate enter/connect bs":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, "lib:entering" \}), "emit for knights challenge":(\{ \<Lib:connection\>, "lib:login:knightsemit" \}), "emitapp command.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "global:command" \}), "enable see notifications.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:on" \}), "evoke response for the communicate lib.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "react-post:evoke-dob%nip:communicate", \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "react-post:evoke-iob%nip:communicate" \}), "evoke witness for the communicate lib (provided thru omni-comm).":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:omni-comm\>, "witness:evoke%omni-comm" \}), "executed when an npc is slayed, the act:stop script triggers the lib:system script in lib:nip:ext:spawn, which in turn scans the area object for information on when/what/where to spawn a replacement.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-control\>, "act:stop" \}), "explicitly (re)declare a variable as an array.":(\{ \<Lib:common\>, "lib:forcearray" \}), "extended log feature for the nip system.":(\{ \<Lib:NIP:core\>, "lib:log" \}), "extract a name from an object without using briefs or describe().":(\{ \<Lib:common\>, "lib:get_name" \}), "extract multiple properties from a given object and a given \\"search queue\\" and return these as mapped arrays (like ([ \\"prop\\" : \\"value\\", \\"prop2\\" : \\"value2\\", etc. ])":(\{ \<Neoct:Staff:Actions:+setp\>, "lib:extract_props" \}), "figure out what to add":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doaddwhat" \}), "figure out what to create":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:docreate" \}), "figure out what to do":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:docatalog" \}), "figure out what to list":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dodetach" \}), "figure out what to list. either contents of a catalog, contents of a group of the list of groups that a character belongs to.":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dolistwhat" \}), "figure out what to remove":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doremovewhat" \}), "find a nip object by name, either absolute or generic":(\{ \<Lib:NIP:core\>, "lib:find_nip_object" \}), "find a unique identifier for an npc.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request_identifier" \}), "find the least specific value set in the hvl.":(\{ \<Lib:hvl\>, "lib:lsv" \}), "find the most specific value set in the hvl.":(\{ \<Lib:hvl\>, "lib:msv" \}), "finds and returns an array of nrefs of exits in a specific room. optional is also to 'spread' the check several steps away from the room.":(\{ \<Lib:common\>, "lib:exits" \}), "for testing tas popup code":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dopopup" \}), "function that handles yelling across rooms.":(\{ \<Lib:common\>, "lib:yelling" \}), "generate a \<zlink\> based on the arguments.":(\{ \<Lib:html\>, "lib:link" \}), "generate a string of characters defined by \$what of size \$size and return the result.":(\{ \<Lib:common\>, "lib:repeat" \}), "get a group.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:get_group" \}), "get a who-listing request.":(\{ \<Lib:chatlib\>, "lib:relay_who_reply" \}), "get property on all objects in a list.":(\{ \<Lib:property\>, "lib:getprop" \}), "get the preferred name for a specific object on the chatline.":(\{ \<Lib:chatlib\>, "lib:get_prefername" \}), "get values of property on all objects in a list.":(\{ \<Lib:property\>, "lib:getprop-values" \}), "gets the assist from the appropriate object and returns an array.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dogetassist" \}), "gets the character object":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docharobj" \}), "give a queue a description":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueuedesc" \}), "handle channel who requests over cross-game.":(\{ \<Lib:chatlib\>, "lib:relay_who_query" \}), "help screen for +ncs":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:help" \}), "html parser engine.":(\{ \<Lib:html\>, "lib:parse_tags" \}), "html template parser.":(\{ \<Lib:html\>, "lib:parse" \}), "inherit this in any script to add lfc functionality.":(\{ \<Lib:chatlib\>, "lib:log" \}), "initial the general db":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doinit" \}), "initialize the values used to determine the page to view, etc.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:init_values" \}), "initializes the new search db, parsing through entire tas db.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docreatesearchdb_init" \}), "initiate the emit.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:start_emit" \}), "internal script used by modify:libraries to add merry inheritance.":(\{ \<Lib:NIP:core\>, "lib:core:merry_add" \}), "internal script used by modify:libraries to delete merry inheritance.":(\{ \<Lib:NIP:core\>, "lib:core:merry_delete" \}), "internal script used to locate all merry scripts that relate to a certain hook and signal, in a certain script.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:core:find-hook" \}), "internal sleeping script. increment weariness.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:internal" \}), "leave script, inherited whenever someone mounts an npc, which deals with movement issues within rooms.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:leave" \}), "links assists together":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolink" \}), "list a specific see-group's members.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:group_list" \}), "list all executions of a specific configuration.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:using_config" \}), "list available flags":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doflaglist" \}), "list the \$actor's see-list.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:list" \}), "list the existing see-groups.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:groups" \}), "list the help, duh. i'm not sure i can get anymore explananitive than that.":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dohelp" \}), "list the libraries/signals/hooks loaded in an npc.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:list" \}), "lists all open assist for player":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolistbyplayer" \}), "lists all the info for an assist.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doinfo" \}), "lists help or specific help":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dohelp" \}), "lists the queues":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueue" \}), "locks a queue":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dolock" \}), "login connection trigger. this script is executed every time someone logs into the game.":(\{ \<Lib:connection\>, "act-post:login" \}), "logout (quit) trigger. this script is executed every time someone quits the game.":(\{ \<Lib:connection\>, "act-post:quit" \}), "make sure anyone entering the room is taken into account for possible queued deliveries.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "witness:enter-from%nip:core" \}), "make sure someone is authorized to enter an exit.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>, "witness:enter-into%nip:core" \}), "make use of the \\"add_offer\\" core script.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:init", \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>, "lib:init" \}), "merry version of +setprop.":(\{ \<Neoct:Staff:Actions:+setp\>, "global:action" \}), "move out through a random exit.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>, "lib:core_movement_exit" \}), "moves a queue into a subqueue":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doslide" \}), "moves an assist from the current queue to the finished queue.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dodone" \}), "mstamp database apply() script.":(\{ nil, "lib:apply" \}), "ncs connect script.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:connect" \}), "ncs disconnect script.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:disconnect" \}), "ncs request function.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:request" \}), "ncs request handler (basic).":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:ncs:handler" \}), "ncs signature register function.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:register_signature" \}), "new calendar code":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docalendar_new" \}), "newliechat login script.":(\{ \<Lib:connection\>, "lib:login:newliechat" \}), "npc update script.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:update" \}), "parse an emote from db \$db, mood \$mood.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:handler:emoting:parse" \}), "parse argument mapping and return the first resulting string encountered.":(\{ \<Lib:args\>, "lib:parse_arg_mapping" \}), "perform a wounding.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:wounding\>, "lib:wound" \}), "perform all deliveries to \$recipient.":(\{ \<MOVED:20080918-114107:Lib:NIP:signals:DELIVERY\>, "lib:handler:deliver" \}), "preparation script for instruments.":(\{ \<Lib:instruments\>, "lib:prepare-play" \}), "prettify-resolve variable into a human-readable entry for +pprint.":(\{ \<Lib:ascii\>, "lib:presolve" \}), "print the configuration tools, as defined in the data object data:db:emitapptools":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:configuration_tools" \}), "process a sentence (\$evoke_to_npc) and return a result spoken string.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "lib:core:reply" \}), "query an object on their assets, based on a specific cdo (cash data object).":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:core_trading_query_assets" \}), "query_relationship( \$with: object ) [figure out \\"my\\" relationship with \$with]":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "lib:query_relationship" \}), "quit (logout) timestamp script.":(\{ \<Lib:connection\>, "lib:quit:timestamp" \}), "reaction script that triggers the instrument effect whenever someone blows it.":(\{ \<Lib:instruments\>, "react:blow-dob" \}), "recall the past few lines of a channel.":(\{ \<Lib:chatlib\>, "lib:recall" \}), "remove a catalog":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doremovecatalog" \}), "remove a group":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:doremovegroup" \}), "remove a group from the actor's list.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:group_sub" \}), "remove a queue if it does not exist":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doremovequeue" \}), "remove an account from a group (optionally by character name).":(\{ \<Neoct:Staff:Actions:+see\>, "lib:char_from_group" \}), "remove the contents of an element if it is defaulty.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:js_clear_default", \<Lib:html\>, "lib:js_clear_default" \}), "removes a watched assist.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doforget" \}), "renames a queue and all assists that were members of that queue.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dorename" \}), "replace strings with locked replacement (for consistency) so that for instance \\"north to south and south to north\\" will function properly.":(\{ \<Lib:common\>, "lib:replace_strings" \}), "replacement for the \\"presents\\" lib 'ask-for' handler, this script will take into account cost of item. the ability to hand out \\"free\\" things is lost, however, and a customized merge of this and the presents v. is required in order to implement such.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trading\>, "lib:handler:ask-for" \}), "resolve a family array and return success/failure.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:communicate\>, "lib:family_resolve" \}), "resource control trigger for a specific room.":(\{ \<MOVED:20080918-114107:Lib:NIP:API\>, "lib:trigger_rcontrol" \}), "retrieve an assist and dump it back into the new queue to be dealt with as appropriate.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doretrieve" \}), "return a list of bodies":(\{ \<Lib:common\>, "lib:body_list" \}), "return a string list of objects, sub-folders or both residing in a folder.":(\{ \<Lib:woe\>, "lib:list-folder" \}), "return a string representation of an array of strings (\$list) as \\"\<first\>, \<second\>, \<...\> and \<last\>\\"":(\{ \<Lib:common\>, "lib:string_list" \}), "return your assist back to the queue it came from":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doreturn" \}), "rumour handler; this script is called whenever someone asks an npc (with the 'rumours' library implemented) about *something*. it will look in the specified data object ('nip:trait:rumour:database') for the topic in question, or say \\"(s)he doesn't know anything about that.\\" if it was not found.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:rumours\>, "lib:handler:ask-about" \}), "runs the delay loop for the backup script.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docron" \}), "script for dismounting npc's.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:dismount" \}), "script inherited into the object which acts as the npc for deliveries.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:delivery-object\>, "react:scan-dob%nip:core" \}), "script inherited into the room which acts as the npc for deliveries.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:delivery-area\>, "react:scan-dob%nip:core" \}), "script to backup the assist dbs.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dobackup" \}), "searches all assists for string.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosearch" \}), "send \$message to \$line (from \$actor).":(\{ \<Lib:chatlib\>, "lib:send_msg" \}), "send a random emit to an environment, and (optionally) an actor/target.":(\{ \<Lib:common\>, "lib:randemit" \}), "send a signal to the heartbeat thread of a cnpc.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:sig" \}), "send an evoke from a center and outwards in a circular fashion, including strong and faint sound versions.":(\{ \<Lib:common\>, "lib:distant-evoke" \}), "sends an email for special queues as defined in mapping:queues:email":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosendemail" \}), "sends an opage to the player who filed the task for the assist specified":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doopage" \}), "set a queue as private":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doprivate" \}), "set a queue as public":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dopublic" \}), "set appearance preference for a channel.":(\{ \<Lib:chatlib\>, "lib:prefer" \}), "set ncs up in \$npc using default handler etc.":(\{ \<MOVED:20080918-114107:Lib:NIP:NCS\>, "lib:load" \}), "set property on all objects in list.":(\{ \<Lib:property\>, "lib:setprop" \}), "set timestamp in \$actor.":(\{ \<Lib:connection\>, "lib:login:timestamp" \}), "set up a scene with external targets.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:scene" \}), "set volition in spawned children automatically.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:handler:start:prey" \}), "sets abort.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doabort" \}), "sets appropriate stats":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:docreatestats" \}), "sets chatline ignore list to hide output.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dochathide" \}), "sets chatline show list to show output.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dochatshow" \}), "sets your preferred queue for the +/!tas command queue list":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doprefer" \}), "sets your queue focus for subqueues":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dofocus" \}), "shell for 'lib:commanding'":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "react-post:evoke-dob%nip:core", \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "react-post:evoke-iob%nip:core" \}), "shortcut-command for behavior db calls.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:behave" \}), "shows all closed assists for queue":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doshowclosed" \}), "shows all open assists":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doopen" \}), "shows assists filed in last 24 hours.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dorecap" \}), "shows info for all assists in queue":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doshowall" \}), "shows you the content of any queues you are monitoring.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doqueuesme" \}), "shutdown command (compatible with resource-control).":(\{ \<Lib:NIP:core\>, "lib:shutdown" \}), "simple handler for the presents feature.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:present" \}), "simple script that returns true if \$body is listening to \$channel.":(\{ \<Lib:chatlib\>, "lib:listening" \}), "sleeping decide script. \\"go to sleep or fall awake?\\"":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:decide" \}), "snake-mod to the description of eating food.":(\{ \<MOVED:20080918-114107:Lib:NIP:extra:snake\>, "act-desc:eat" \}), "sort an array of objects (\$objects) based on their describe().":(\{ \<Lib:common\>, "lib:sort_briefed_objects" \}), "spawned npc control script.":(\{ \<Lib:NIP:core\>, "act:start" \}), "squint act script; used by the jeweler loupes to get examine descriptions on jewelry by simply squinting whilst wearing a loupe.":(\{ \<Lib:common\>, "act:squint" \}), "stance handler for mounted npc's. this script ensures stances are displayed correctly.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act:stance" \}), "start listening to a specific chatlib channel.":(\{ \<Lib:chatlib\>, "lib:on" \}), "sticks a task to the specified calendar date":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:doschedule" \}), "stop listening to a specific chatlib channel.":(\{ \<Lib:chatlib\>, "lib:off" \}), "subtract an account from \$actor's see-list.":(\{ \<Neoct:Staff:Actions:+see\>, "lib:sub" \}), "switches a queue between long and short format":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dosettype" \}), "system update script.":(\{ \<Lib:NIP:core\>, "lib:core:sysupdate" \}), "the 'throw' version (by kalle) of the 'place' system (by zell). no prox, but consent preserved.":(\{ \<MOVED:20080918-114107:Neoct:Base:Actions:zthrow\>, "global-pre:action" \}), "the act-post:enter script for the mounting system (nip), which handles movement through rooms.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>, "act-post:enter" \}), "the decide sig-hook for the nip hook.":(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:nip\>, "lib:nip:decide" \}), "the default error handler.":(\{ \<Lib:NIP:core\>, "setprop-post:error" \}), "the feeder makes sure every logged on chatter receives each evoke or emote on all chat lines.":(\{ \<Lib:chatlib\>, "lib:feed" \}), "the internal eating script will make the cnpc hungrier over time.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:eating:internal" \}), "the internal sig-hook for the nip hook.":(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:nip\>, "lib:nip:internal" \}), "the lib:done-post script, executed after the \\"eating\\" library has been removed from a cnpc.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:done-post" \}), "the libraries modifier is executed by the setprop trigger and is used to add/remove cnpc libraries.":(\{ \<Lib:NIP:core\>, "lib:modify:libraries" \}), "the offer script for the eating cnpc feature.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:handler:offer:eating" \}), "the offer script for the trash-taking cnpc's.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:trash-taker\>, "lib:handler:offer:trash" \}), "the predator replacement for the eating offers handler.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:handler:offer:eating" \}), "the prey defend script, which calculates the outcome of a hunter/prey situation.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:handler:prey:defend" \}), "the prey die script, which turns an npc into a dead body.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:handler:prey:die" \}), "the random traits start-handler.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:spawn-traits\>, "lib:handler:start:traits" \}), "the relay_chat script for the chatlib.":(\{ \<Lib:chatlib\>, "lib:relay_chat" \}), "the room-cleaning decide hook-script. this script will randomly pick up trash from \\"the current room.\\" trash = anything with \\"trait:trash\\" set.":(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:room-cleaning\>, "lib:room-cleaning:decide" \}), "the setprop-trigger for the nip namespace.":(\{ \<Lib:NIP:core\>, "setprop-post:nip" \}), "the setprop-trigger for the nip-core namespace.":(\{ \<Lib:NIP:core\>, "setprop-post:nip-core" \}), "the sigexecptr setprop hook sets and unsets the signal stream hook (located in lib:nip:lib:stream) on demand.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, "setprop-post:sigexecptr" \}), "the spawn system script, called by any npc using the spawn-system when it is slain.":(\{ \<MOVED:20080918-114107:Lib:NIP:EXT:spawn\>, "lib:system" \}), "there's a chance (specified in 'nip:trait:emoting:frequency') we will spontaneously emote something.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "lib:emoting:decide" \}), "there's a chance (specified in 'nip:trait:freemoting:frequency') we will spontaneously freemote something.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:freemoting\>, "lib:freemoting:decide" \}), "this code lists all the catalogs":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dolist" \}), "this code lists the various groups":(\{ \<MOVED:20080918-114107:Lib:catalog:lib:catalogcode\>, "lib:dolistgroups" \}), "this function is (should be) used to add merry functions to the data:nip:functions registry. these functions are used by +nip to control and/or configure cnpc bodies and/or libraries.":(\{ \<Lib:NIP:core\>, "lib:register_nip_function" \}), "this function is called by the 'set' +nip function to implement the core base in a new cnpc. the core base is used to load the rest of the core library into the system internally, using the core system itself.":(\{ \<Lib:NIP:core\>, "lib:load_me" \}), "this function is now a simple wrapper for the slib:common/lib:lookup function, which is the one to use.":(\{ \<Lib:common\>, "lib:lookup" \}), "this function is used to destroy the heartbeat thread in a cnpc. (synonym for +nip [target] \\"sig term\\")":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:die" \}), "this function is used to permanently add a function to the +nip extensions.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:register" \}), "this function is used to set up a cnpc library to use the nip core functionality. it is called through +nip.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:set" \}), "this function is used to trigger the heartbeat thread in a cnpc.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:live" \}), "this hook will slow the npc down a bit if it's neutral.":(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>, "lib:mood:delay" \}), "this is the 'recording' script, used to teach cnpc's how to act.":(\{ \<MOVED:20080918-114107:Lib:NIP:basefuns\>, "lib:record" \}), "this is the action script for the create_configuration page.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:action:create_configuration" \}), "this is the action script for the welcome page. all action scripts should return the next \\"page\\".":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:action:welcome" \}), "this is the init script for the mood signal hook(s). it will reset a number of values used to calculate the cnpc's current mood.":(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>, "lib:mood:mood-init" \}), "this is the initialization script for the core \\"library\\".":(\{ \<Lib:NIP:core\>, "lib:init" \}), "this is the internal decide:decide-exec hook.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "lib:decide:decide-exec" \}), "this is the internal decide:decide-init hook.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "lib:decide:decide-init" \}), "this is the internal decide:decide-post hook.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "lib:decide:decide-post" \}), "this is the internal delay:delay-exec hook. it will execute the actual pause that occurs between each of the cnpc's unprovoked actions (self-triggered if you will).":(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "lib:delay:delay-exec" \}), "this is the internal delay:delay-init hook. it will set the initial value for the \$npc_pause property.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "lib:delay:delay-init" \}), "this is the internal internal:internal-exec hook.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "lib:internal:internal-exec" \}), "this is the signal stream hook. it will be inherited on demand whenever a hook or signal wants a certain script to be executed whenever the sigexec signal is caught.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, "setprop-post:sigstream" \}), "this is the standard awakening script. replace it with your own library when the need for a customized awake-script arise.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:handler:state:awake" \}), "this is the standard go-to-sleep script. replace it with your own library when the need for a customized sleep-script arise.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:handler:state:sleep" \}), "this library will make an npc leave the room on occasion, at random.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:movement\>, "lib:movement:decide" \}), "this script \\"pipes\\" commands to lib:handler:relations.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "react:command-dob", \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "react:command-iob" \}), "this script (may be) used to add moods to the cnpc moods registry.":(\{ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>, "lib:core:add_mood" \}), "this script (may be) used to remove moods from the cnpc moods registry.":(\{ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>, "lib:core:sub_mood" \}), "this script (re)calculates the signal/hook path which contains the series of scripts the heartbeat thread executes each loop.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, "lib:calc_sighookpath" \}), "this script deals with mounting an npc.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>, "react:mount-dob" \}), "this script distributes the various function calls to the chat channels, such as the standard 'on', 'off', 'recall' commands.":(\{ \<Lib:chatlib\>, "lib:chat" \}), "this script grabs the analysis generated from the various mood sighooks and determines the cnpc's current mood.":(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:mood\>, "lib:mood:mood-exec" \}), "this script handles the hook modifications on cnpc libraries.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:modify:hooks" \}), "this script handles the signal modifications on cnpc libraries.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, "lib:modify:signals" \}), "this script increments the cnpc's energy when it eats something.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "act:eat%nip:core" \}), "this script initializes couriers and adds the object npc:misc:scroll to the list of distributed items. it will also add lib:handler:offer:addressed to the offers chain.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "lib:init" \}), "this script internally registers a new hook with a signal (and vice versa).":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:core:register-hook" \}), "this script internally unregisters a hook from the chain of a signal.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "lib:core:unregister-hook" \}), "this script is a simple shell for any scripts that would potentially scan offers and take part in deciding whether or not the offer should be accepted. if you are about to make an addition to a cnpc that involves offering things to them, use the \\"lib:core:add_offer\\" and \\"lib:core:sub_offer\\" scripts provided with this library.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>, "react-post:offer-who" \}), "this script is a simple shell for npc ask features.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:asking\>, "react:npcask-dob" \}), "this script is called by the react:evoke-iob/dob scripts, and any npc's that have the commanding library implemented will execute this every time someone acts towards the npc (with an evoke).":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "lib:commanding" \}), "this script is executed 1) when the eating hook is loaded, and 2) whenever another hook is loaded.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:hook:init-post" \}), "this script is executed 1) when the predator hook is loaded, and 2) whenever another hook is loaded.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "lib:hook:init-post" \}), "this script is executed 1) when the sleeping hook is loaded, and 2) whenever another hook is loaded.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:hook:init-post" \}), "this script is executed once, when an npc loads the 'mounting' library.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:mounting\>, "lib:init" \}), "this script is executed whenever the cnpc changes state (awake/sleep), through the usage of e.g. the \\"sleeping\\" hook's lib:sleeping:decide script.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:act:sleep:state" \}), "this script is inherited by a cnpc whenever it starts recording behavior.":(\{ \<MOVED:20080918-114107:Lib:NIP:EXT:record\>, "act-post:command" \}), "this script is part of the core of the ask \<npc\> for \<item\> functionality.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:handler:ask", \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:handler:ask-for" \}), "this script is the heartbeat thread. it runs 24/7 on all active cnpc's, and is responsible for everything spontaneous.":(\{ \<Lib:NIP:core\>, "lib:heartbeat" \}), "this script is used by the relations nip library to determine the type of action performed.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:relations\>, "lib:handler:relations" \}), "this script is used to add (attach) a property to an array, without causing duplicates and without disturbing the order of the array.":(\{ \<Lib:common\>, "lib:arr_attach" \}), "this script is used to add a script to the command chain \\"nip:trait:commands\\".":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "lib:core:add_command" \}), "this script is used to add a script to the offer chain \\"nip:offer:scripts\\". each script listed there will be executed and if either returns a true, the offer will be accepted.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>, "lib:core:add_offer" \}), "this script is used to add an object to the presents mapping \\"nip:trait:present:objects\\". each object has an array of words that will 'trigger' the offering of the particular object.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:core:add_present" \}), "this script is used to generate the code for the dialog box \<div\>.":(\{ \<MOVED:20071015-040328:Neoct:Staff:Verbs:+emitapp\>, "lib:dlg_set" \}), "this script is used to remove a script from the command chain \\"nip:trait:commands\\".":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:commanding\>, "lib:core:sub_command" \}), "this script is used to remove an object from the presents mapping \\"nip:trait:present:objects\\".":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:presents\>, "lib:core:sub_present" \}), "this script is used to subtract a script from the offer chain \\"nip:offer:scripts\\".":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:offers\>, "lib:core:sub_offer" \}), "this script modifies the mass of the target accordingly.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:predator\>, "act:eat%predator" \}), "this script will accept any items that are addressed to someone.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "lib:handler:offers:addressed" \}), "this script will alter the mood slightly if the cnpc is very hungry.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:eating:mood" \}), "this script will alter the mood slightly if the cnpc is very tired.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, "lib:sleeping:mood" \}), "this script will check if we're hungry enough to do something about it, and based on our hunger, we will go to greater extremes, ending up with looking in the room we're in for food and grabbing it if we can and are hungry enough.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:eating\>, "lib:eating:decide" \}), "this script will interpret an action and decide whether it's positive or negative, and whether it's ranged or touching, as well as its strength.":(\{ \<MOVED:20060501-050056:Lib:NIP:lib:act-interpreter\>, "lib:core:resolve_action" \}), "this script will look at various things (e.g.i.a. hunger) and bump the 'happy' mood accordingly.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:happiness\>, "lib:happiness:mood" \}), "this script will look at various things (e.g.i.a. hunger) and bump the 'sad' mood accordingly.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:sadness\>, "lib:sadness:mood" \}), "this script will look at various things and bump the 'angry' mood accordingly.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:anger\>, "lib:anger:mood" \}), "this script will make the musicians stop playing, and is triggered as the authoritative person [tm] says \\"stop\\", \\"end\\" or \\"conclude\\" to the musicians.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:command:music:end" \}), "this script will make the musicians want to play, and is triggered as the authoritative person [tm] says \\"begin\\", \\"proceed\\" or \\"start\\" to the musicians.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:command:music:begin" \}), "this script will set the \\"play\\" mood to 20 if the musicians are supposed to play, and to 0 if they're not.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:musician\>, "lib:musician:mood" \}), "this setprop hook executes the \\"sigexec\\" stream (0x050) whenever the property \\"decide\\" is set in \\"this\\".":(\{ \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, "setprop-post:decide" \}), "this sig-hook script scans the room for volitional objects, and incrementally checks if they have a delivery waiting.":(\{ \<MOVED:20080918-114107:Lib:NIP:hooks:delivery\>, "lib:delivery:delivery-exec" \}), "timestamp linkdie (dc) script.":(\{ \<Lib:connection\>, "lib:linkdie:timestamp" \}), "transfer a target to his or her room, or optionally other specified places.":(\{ \<Neoct:Staff:Actions:+return\>, "global:action" \}), "transfers open assists from one queue to another.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dotransfer" \}), "tree creation recursive":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:create_tree_rec" \}), "tree listing of all queues":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dotree" \}), "turn a numeric value into a string, and return with leading zero(es).":(\{ \<Lib:common\>, "lib:lz" \}), "turns a time/date string into seconds since 1/1/70":(\{ \<Lib:common\>, "lib:reverse_ctime" \}), "twikize the output for easy copy and paste into twiki":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dotwiki" \}), "unlocks a queue":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dounlock" \}), "unset volition.":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:prey\>, "lib:init" \}), "update the covered mapping (add).":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act-post:enter%nip:core", \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act-post:teleport%nip:core" \}), "update the covered mapping (sub).":(\{ \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act:enter%nip:core", \<MOVED:20080918-114107:Lib:NIP:lib:courier\>, "act:teleport%nip:core" \}), "used to add libraries to cnpc's.":(\{ \<Lib:NIP:core\>, "setprop-post:add" \}), "used to add/remove hooks to libraries.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, "setprop-post:hook" \}), "used to create/modify signals.":(\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, "setprop-post:signal" \}), "used to remove libraries to cnpc's.":(\{ \<Lib:NIP:core\>, "setprop-post:delete" \}), "using basic rules, tweak an adverb; used e.g. in remain and appear.":(\{ \<Lib:common\>, "lib:unadverb" \}), "walk the hvl (hierarchical value list) and return all the values in an array.":(\{ \<Lib:hvl\>, "lib:get-values" \}), "walk the hvl (hierarchical value list) and return true if any element is true.":(\{ \<Lib:hvl\>, "lib:is-set" \}), "walk the hvl and return the maximum non-nil value found.":(\{ \<Lib:hvl\>, "lib:max" \}), "walk the hvl and return the minimum non-nil value found.":(\{ \<Lib:hvl\>, "lib:min" \}), "walk the hvl and return the product of non-nil values.":(\{ \<Lib:hvl\>, "lib:product" \}), "walk the hvl and return the sum of non-nil values.":(\{ \<Lib:hvl\>, "lib:sum" \}), "watches an assist for changes. alerts you on login.":(\{ \<Lib:Assist:lib:assistlibs\>, "lib:dowatch" \}), "we initialize the mood signal and add a basic mood we call \\"neutral\\".":(\{ \<MOVED:20080918-114107:Lib:NIP:signals:MOOD\>, "lib:init-post" \}) ])
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
