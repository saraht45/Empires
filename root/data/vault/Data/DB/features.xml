<object clone="/obj/properties" owner="TextIF">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="list">
         (\{ "burnable" \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1115152726, "zwoc", "S", 1115154066, "zwoc", "P", 1115295753, "zwoc", "E", 1115295780, "zwoc", "E", 1115298967, "zwoc", "E", 1115298990, "zwoc", "X", 1117911036, "zwoc", "E", 1199620889, "tonyd", "E", 1199621073, "tonyd", "E", 1199621103, "tonyd", "E", 1199621122, "tonyd", "E", 1199621333, "tonyd", "E", 1199621422, "tonyd", "P", 1199621464, "tonyd", "P", 1199621548, "tonyd", "P", 1199621566, "tonyd", "P", 1199621599, "tonyd", "P", 1199621679, "tonyd", "P", 1199621692, "tonyd", "P", 1199621830, "tonyd", "P", 1199621848, "tonyd", "P", 1199621881, "tonyd", "P", 1199621921, "tonyd", "P", 1199621932, "tonyd", "P", 1199622718, "tonyd", "P", 1420357383, "tonyd", "P", 1420357386, "tonyd", "P", 1420357414, "tonyd", "P", 1420357447, "tonyd", "P", 1420357484, "tonyd", "P", 1420357640, "tonyd", "P", 1420358111, "tonyd", "P", 1420358343, "tonyd", "P", 1420358671, "tonyd", "P", 1420358689, "tonyd", "P", 1420359267, "tonyd", "P", 1420360389, "tonyd", "P", 1420360444, "tonyd", "P", 1420360479, "tonyd", "P", 1420360495, "tonyd", "P", 1420360507, "tonyd", "P", 1420360521, "tonyd", "P", 1420360621, "tonyd", "P", 1420360716, "tonyd", "P", 1420360825, "tonyd", "P", 1420360869, "tonyd", "P", 1420360916, "tonyd", "P", 1420360924, "tonyd", "P", 1420361003, "tonyd", "P", 1420361013, "tonyd", "P", 1420361024, "tonyd", "P", 1420361035, "tonyd", "P", 1420361101, "tonyd", "P", 1420361126, "tonyd", "P", 1420361219, "tonyd", "P", 1420361241, "tonyd", "P", 1420361252, "tonyd", "P", 1420361275, "tonyd", "P", 1420361291, "tonyd", "P", 1420361303, "tonyd", "P", 1420361746, "tonyd", "P", 1420361758, "tonyd", "P", 1420361893, "tonyd", "P", 1420361903, "tonyd", "P", 1420361962, "tonyd", "P", 1420362018, "tonyd", "P", 1420362124, "tonyd", "P", 1420362142, "tonyd", "P", 1420362178, "tonyd", "P", 1420362221, "tonyd", "P", 1420362237, "tonyd", "P", 1420362249, "tonyd", "P", 1420362523, "tonyd", "P", 1420362548, "tonyd", "P", 1420362561, "tonyd", "P", 1420362585, "tonyd", "P", 1420362587, "tonyd", "P", 1420362633, "tonyd", "P", 1420362679, "tonyd", "P", 1420362703, "tonyd", "P", 1420362710, "tonyd", "P", 1420362824, "tonyd", "P", 1420362853, "tonyd", "P", 1420362868, "tonyd", "P", 1420362981, "tonyd", "P", 1420363024, "tonyd", "P", 1420363110, "tonyd", "P", 1420363130, "tonyd", "P", 1420363220, "tonyd", "P", 1420363319, "tonyd", "P", 1502870748, "tonyd", "P", 1502870768, "tonyd", "P", 1502870773, "tonyd", "P", 1502870877, "tonyd", "P", 1502871209, "tonyd", "P", 1502871273, "tonyd", "P", 1503300730, "tonyd", "P", 1503301241, "tonyd", "P", 1503301266, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="sam:burnable">
         X[S] \<h1\>Burnable!\</h1\>
\<h2\>\$(object-woename)\</h2\>
\<hr/\>
The "burnable" feature is used to define how an object reacts when touching fire. This particular feature is specifically used to emit something, then wait, then destroy the object.\<br/\>
\<feature-form\>
  (optional) Pre-destruction delay: \<feature name="pre_fire_delay" property="sys:exposure:fire:destroy-pre:fire-delay"/\>\<br/\>
  (optional) Pre-destruction emit: \<feature name="pre_fire_emit" property="sys:exposure:fire:destroy-pre:fire-emit"/\>\<br/\>
  \<i\>Alternatively, you may write in two descriptions with two separate delays (pauses) before the object is destroyed. The above is the optional, "first" emit/delay settings.\</i\>\<br/\>\<br/\>
  Destruction delay: \<feature name="fire_delay" property="sys:exposure:fire:destroy:fire-delay"/\>\<br/\>
  Destruction emit: \<feature name="fire_emit" property="sys:exposure:fire:destroy:fire-emit"/\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:alteration2">
         X[S] \$[\$applicable = \$body."sys:storyapi:option:alteration:applicable"; return "";]
\<script\>
    var subparts = new Array();
    var subnames = new Array();
    \$[/* \$applicable == ([ "part" : ([ "descriptive" : "property", ... ]), ... ]) --
         subparts \<---- ([ "part (description)" : "current-value" ])
         subnames \<---- ([ "part (description)" : "property" ]) */
        string p, *parts, *subparts, r;
        int i, ix, j, jx;

        \$plist = (\{ \});
        r      = "";
        r += "subparts['one'] = 'two';";
/*        parts  = map_indices(\$applicable);
        ix     = sizeof(parts);
        for (i = 0; i \< ix; i++) \{
            subparts = map_indices(\$applicable[parts[i]]);
            jx       = sizeof(subparts);
            for (j = 0; j \< jx; j++) \{
                p       = parts[i] + " (" + subparts[j] + ")";
                \$plist += (\{ p \});
                r += "subparts['" + p + "'] = '" + Str(Get(\$body, \$applicable[parts[i]][subparts[j]])) + "';";
                r += "subnames['" + p + "'] = '" + \$applicable[parts[i]][subparts[j]] + "';";
            \}
        \}*/
    return r;]
    function bpu(s)
    \\\{
        document.getElementById('bodypart').value = subnames[s];
        document.getElementById('alteration').value = subparts[s];
    \\\}
\</script\>
\<h1\>Alteration purchase\</h1\>
\<hr\>\</hr\>
In \$(Data:info.server), you can purchase \<b\>trait alterations\</b\>. A trait alteration is a change to an existing adjective, such as "blue" or "bright" or "dark" etc. to a given body-part of your selected character (\$(body.name)).\\\<p/\\\>
Trait alterations should adhere to a few rules, or they risk being declined by staff:
\<ul\>
    \<li\>You should not submit "tasteless" traits that include swear words or modern "slang"\</li\>
    \<li\>You should try to follow the concept of show-not-tell. "Beautiful hair" is bad. "Autumn hair" is better.\</li\>
\</ul\>
If you are unsure of an alteration, you can either simply submit it (and see if it is approved or declined), or you can file an assist, asking to speak with a staff member about your trait.\\\<p/\\\>
\<feature-form\>
    \<b\>You want to change \<describe what="\$(body)"/\>'s \<feature type="data" name="bodypart" property="bodypart"/\> \<select onchange="javascript:if (this.value) bpu(this.value);"\>
\<option value=""\>--choose a part--\</option\>
\$[string r;
int i, ix;

r     = "";
 ix    = sizeof(\$plist);
for (i = 0; i \< ix; i++) \{
    r += "\<option value=\\"" + \$plist[i] + "\\"\>" + \$plist[i] + "\</option\>";
\}
    r += "\<option value=\\"One\\"\>Two\</option\>";
return r;]
\</select\> to \<feature name="alteration" property="alteration"/\>.\</b\>\\\<p/\\\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:default">
         X[S] \<h1\>Storypoint purchase - \$(rdata.option)\</h1\>
\$[nil; return "\<pre\>"+replace_strings(dump_value(args), "\<", "\&lt;", "\>", "\&gt;")+"\</pre\>"]
\<hr/\>
\<p\>In \$(Data:info.server), you can purchase \<b\>\$(rdata.option)\</b\>.\<br/\>
\$(option.desc)\</p\>
\<p\>You are about to request: \<b\>\$(rdata.option)\</b\> - if this is correct please confirm the request.\</p\>
\<feature-form\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:nickname">
         X[S] \<h1\>Nickname purchase!!!\</h1\>
\<hr\>\</hr\>
In \$(Data:info.server), you can purchase \<b\>nicknames\</b\>. A nickname is basically a secondary reference that other players can use to interact with your character.
\<ul\>
    \<li\>You can purchase multiple nicknames for the same character.\</li\>
    \<li\>The nickname you purchase is for \<b\>the character\</b\> with which you make the purchase (\$(body.name))\</li\>
    \<li\>As with all other StoryPoint purchases, nicknames bought are non-refundable.\</li\>
    \<li\>Inappropriate nicknames will be removed by staff, and StoryPoints used in the purchase will not be refunded.\</li\>
\</ul\>
\<b\>Appropriate nicknames:\</b\>
What is and isn't an appropriate nickname depends on a number of things. A nickname, just as a regular name, must:\<ol\>
\<li\>- be in-theme,\</li\>
\<li\>- not be offensive,\</li\>
\<li\>- be 2 or more letters long\</li\>
\<li\>- not be misleading or confusing ("you" is a good example of a confusing name)\</li\>
\</ol\>
If you pick a nickname that does not abide by the above four rules, chances are high that you will lose it. If you feel hesitant about the appropriateness of a nickname, do not hesitant to consult game staff about it.\\\<p/\\\>
\<feature-form\>
    \<b\>The nickname of your choice:\</b\> \<feature name="nickname" property="nickname"\>\</feature\>\<p\>\</p\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:nickname2">
         X[S] \<h1\>Nickname purchase?\</h1\>
\<hr\>\</hr\>
In \$(Data:info.server), you can purchase \<b\>nicknames\</b\>. A nickname is basically a secondary reference that other players can use to interact with your character.
\<ul\>
    \<li\>You can purchase multiple nicknames for the same character.\</li\>
    \<li\>The nickname you purchase is for \<b\>the character\</b\> with which you make the purchase (\$(body.name))\</li\>
    \<li\>As with all other StoryPoint purchases, nicknames bought are non-refundable.\</li\>
    \<li\>Inappropriate nicknames will be removed by staff, and StoryPoints used in the purchase will not be refunded.\</li\>
\</ul\>
\<b\>Appropriate nicknames:\</b\>
What is and isn't an appropriate nickname depends on a number of things. A nickname, just as a regular name, must:\<ol\>
\<li\>- be in-theme,\</li\>
\<li\>- not be offensive,\</li\>
\<li\>- be 2 or more letters long\</li\>
\<li\>- not be misleading or confusing ("you" is a good example of a confusing name)\</li\>
\</ol\>
If you pick a nickname that does not abide by the above four rules, chances are high that you will lose it. If you feel hesitant about the appropriateness of a nickname, do not hesitant to consult game staff about it.\\\<p/\\\>
\<feature-form\>
    \<b\>The nickname of your choice:\</b\> \<feature name="nickname" property="nickname"\>\</feature\>\<p\>\</p\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:starting_skills">
         X[S] \$[\$applicable = \$body."sys:storyapi:option:alteration:applicable"; return "";]
\<script\>
    function set_field(s)
    \\\{
        document.getElementById('skill').value = s;
    \\\}
    var subparts = new Array();
    var subnames = new Array();
    \$[/* \$applicable == ([ "part" : ([ "descriptive" : "property", ... ]), ... ]) --
         subparts \<---- ([ "part (description)" : "current-value" ])
         subnames \<---- ([ "part (description)" : "property" ]) */
        string p, *parts, *subparts, r;
        int i, ix, j, jx;

        \$plist = (\{ \});
        r      = "";
/*        parts  = map_indices(\$applicable);
        ix     = sizeof(parts);
        for (i = 0; i \< ix; i++) \{
            subparts = map_indices(\$applicable[parts[i]]);
            jx       = sizeof(subparts);
            for (j = 0; j \< jx; j++) \{
                p       = parts[i] + " (" + subparts[j] + ")";
                \$plist += (\{ p \});
                r += "subparts['" + p + "'] = '" + Str(Get(\$body, \$applicable[parts[i]][subparts[j]])) + "';";
                r += "subnames['" + p + "'] = '" + \$applicable[parts[i]][subparts[j]] + "';";
            \}
        \}*/
    return r;]
    function bpu(s)
    \\\{
        document.getElementById('bodypart').value = subnames[s];
        document.getElementById('alteration').value = subparts[s];
    \\\}
\</script\>
\<h1\>Starting Skills/Careers purchase\</h1\>
\<hr\>\</hr\>
\<p\>In \$(Data:info.server), your character may begin the game with existing skills or careers, for a storypoint cost. You may purchase 'starting skills' for your character up to 2 weeks after the character was first created.\</p\>
\<feature-form\>
\<p\>\<describe what="\$(body)"/\> is
 \$[\$age = time() - Int(\$body."skotos:creaton_time");

\$valid = FALSE;
if(\$age \<= 24*60*60*24*7*2) \$valid = TRUE;

\$valid = TRUE;

if(!\$valid) return days(\$age)+" old. This is more than two weeks, so you cannot buy any starting skills for "+Describe(\$body)+". (However, you can still learn new skills in the game itself!)";


return days(\$age)+" old.";]\</p\>
 \<b\>You want to grant \<describe what="\$(body)"/\> \<feature type="data" name="skill" property="skill"/\>
 \<select onchange="javascript:if (this.value) bpu(this.value);"\>
\$[string r;
int i, ix;

if(!\$valid) return "\<option value=\\"\\"\>--none available--\</option\>";

\$az = \$\{Chatters:AE:az:azrael\};

\$output = "\<option value=\\"\\"\>--choose a skill--\</option\>";
\$careers = map_indices(\$\{Ironclaw:Lib:Teaching:CareersDB\}."*");
\$careers -= (\{ "revisions" \});
ix    = sizeof(\$careers);
for (i = 0; i \< ix; i++) \{
    \$output += "\<option value=\\"skill:career:" + \$careers[i] + "\\"\>" + \$careers[i] + "\</option\>";
\}

\$skills = map_indices(\$\{Ironclaw:Lib:Teaching:SkillsDB\}."*");
\$skills -= (\{ "revisions" \});
ix    = sizeof(\$skills);
for (i = 0; i \< ix; i++) \{
    \$output += "\<option value=\\"skill:" + \$skills[i] + "\\"\>" + \$skills[i] + "\</option\>";
\}


/* EmitTo(\$az, \$output); */
return \$output;]
\</select\> to level \<feature name="level" property="level"/\>\</b\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:title">
         X[S] \<h1\>Title purchase?\</h1\>
\<hr\>\</hr\>
In \$(Data:info.server), you can purchase \<b\>titles\</b\>. A title will appear before your character's name when other players interact with you.
\<ul\>
    \<li\>Titles can be toggled on and off with the @title command.\</li\>
    \<li\>You can purchase multiple titles for the same character.\</li\>
    \<li\>Please do not purchase rank-based titles that relate to existing ranks, abilities, or system-coded jobs.\</li\>
    \<li\>Having a title does not grant abilities or access. For example, the title of 'Judge' wouldn't grant the authority to give search warrants.\</li\>
    \<li\>As with all other StoryPoint purchases, titles bought are non-refundable.\</li\>
    \<li\>Staff will review and approve or reject the requested title.\</li\>
\</ul\>
\<feature-form\>
    \<b\>The title of your choice:\</b\> \<feature name="title" property="title"\>\</feature\>\<p\>\</p\>
\</feature-form\>
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
