<object clone="/usr/UserAPI/obj/udat" owner="UserAPI">
  <UserAPI:UDat>
    <Core:Properties>
      <Core:Property property="array:assists"/>
      <Core:Property property="conn:check">0</Core:Property>
      <Core:Property property="conn:last">"El Nino"</Core:Property>
      <Core:Property property="miki:watch:last">
         1294686918
      </Core:Property>
      <Core:Property property="more">18</Core:Property>
      <Core:Property property="roster">([  ])</Core:Property>
      <Core:Property property="see:groups">
         ([ "lc":1 ])
      </Core:Property>
      <Core:Property property="see:listeners">
         ([ \<Chatters:IC:ce:cersei\>:1 ])
      </Core:Property>
      <Core:Property property="skotos:linebreaks">1</Core:Property>
      <Core:Property property="skotos:sh:secured">
         "Nino"
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-cb-fun">
         "merry_edit_commit"
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-cb-obj">
         \</usr/Tool/sys/merry\>
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-extra"/>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-language">
         "Merry"
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-object">
         "Neoct:Staff:Actions:zwocsee"
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-script">
         "global:action"
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-stamp">
         1030060635
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-text">
         "/* Process the evoke, and split it into words separated by spaces */ \\r\\n \\r\\nif( !\$evoke )\{ \\r\\n  /* Explain the +see function */ \\r\\n  EmitTo( \$actor, \&quot;+see is used to notify you whenever a specific character logs into/out of the game.\\\\n\\\\n Syntax:\\\\n -- +see '[option] [character]'\\\\n\\\\nExamples:\\\\n\&gt; +see 'add kalle'\\\\n\&gt; +see 'sub aziel'\\\\n\&gt; +see 'list'\\\\n\&gt; +see 'on'\\\\n\&gt; +see 'off'\\\\n\&gt; +see 'recall'\\\\n\\\\nOptions:\\\\n- ADD: add a character to your list\\\\n- SUB: remove a character from your list\\\\n- LIST: show your list.\\\\n- ON: be notified when the listed user(s) log on/off\\\\n- OFF: turn off notifications\\\\n- RECALL: see the last 20 entries\\\\n\&quot; ); \\r\\n  return FALSE; \\r\\n\} \\r\\n \\r\\n\$evo = lower_case( \$evoke[ 1 .. strlen( \$evoke ) - 2 ] ); \\r\\n \\r\\n\$words = (\{ \}); \\r\\n \\r\\nwhile( \$evo )\{ \\r\\n  for( \$i = 0; \$i \&lt; strlen( \$evo ) \&amp;\&amp; \$evo[\$i..\$i] != \&quot; \&quot;; \$i++ ); \\r\\n  if( \$i \&lt; strlen( \$evo ))\{ \\r\\n    \$words += (\{ \$evo[0..\$i-1] \}); \\r\\n    \$evo = \$evo[\$i+1..]; \\r\\n  \} else \{ \\r\\n    \$words += (\{ \$evo \}); \\r\\n    \$evo = nil; \\r\\n  \} \\r\\n\} \\r\\n \\r\\n/* \$words[0] = the command, and \$words[1..] = any arguments */ \\r\\n \\r\\nif( \$words[0] == \&quot;add\&quot; )\{ \\r\\n  /* ADD a character to the +see-channel */ \\r\\n   \\r\\n  /* Figure out the woename */ \\r\\n  \$woename = \&quot;Marrach:players:\&quot; + capitalize( \$words[1][0..0] ) + \&quot;:\&quot;+\$words[1]; \\r\\n   \\r\\n  \$woeobj = Obj( \$woename ); \\r\\n \\r\\n  \$characct = Get( \$woeobj, \&quot;skotos:creator\&quot; ); \\r\\n \\r\\n  /* Check to see if the character exists in the DB already */ \\r\\n \\r\\n  \$db = Obj( \&quot;Neoct:Staff:DB:seeDB\&quot; ); \\r\\n \\r\\n  \$ing = Get( \$db, \&quot;accseelist\&quot; ); \\r\\n  \$list = Get( \$db, \&quot;acclisteners\&quot; ); \\r\\n  if( !\$list ) \$list = ([ nil : (\{ nil \}) ]);  \\r\\n  if( !\$ing ) \$ing = ([ nil : (\{ nil \}) ]); \\r\\n  if( !\$ing[\$actor] ) \$ing[\$actor] = (\{ \}); \\r\\n \\r\\n  if( \$list[\$characct] )\{  \\r\\n    /* The user account exists in the DB. See if we're on the list */ \\r\\n    \$found = 0; \\r\\n    for( \$i = 0; \$i \&lt; sizeof( \$list[\$characct] ); \$i++ ) if( \$list[\$characct][\$i] == \$actor ) \$found = 1; \\r\\n    if( \$found )\{ \\r\\n      /* We are already there. So, return an error and terminate. */ \\r\\n      EmitTo( \$actor, \&quot;You are already +seeing \&quot; + \$characct + \&quot;.\&quot; ); \\r\\n      return FALSE; \\r\\n    \} else \{ \\r\\n      /* Not there. So add us! */ \\r\\n      \$list[\$characct] += (\{ \$actor \}); \\r\\n      \$ing[\$actor] += (\{ \$characct \}); \\r\\n \\r\\n      /* ... and update the DB */ \\r\\n      Set( \$db, \&quot;accseelist\&quot;, \$ing ); \\r\\n      Set( \$db, \&quot;acclisteners\&quot;, \$list ); \\r\\n      /* ... and notify ourselves */ \\r\\n      EmitTo( \$actor, \&quot;You will now be notified when \&quot; + \$characct +\&quot; [\&quot; + Describe( \$woeobj ) + \&quot;] logs on.\&quot; ); \\r\\n      return FALSE; \\r\\n    \} \\r\\n  \} else \{ \\r\\n    /* The user doesn't exist in the DB. Add him, and add us to the list of listeners */ \\r\\n    \$list += ([ \$characct : (\{ \$actor \}) ]); \\r\\n    \$ing[\$actor] += (\{ \$characct \}); \\r\\n    /* ... and update the DB */ \\r\\n    Set( \$db, \&quot;accseelist\&quot;, \$ing ); \\r\\n    Set( \$db, \&quot;acclisteners\&quot;, \$list ); \\r\\n    /* ... and notify ourselves */ \\r\\n    EmitTo( \$actor, \&quot;You will now be notified when \&quot; + \$characct + \&quot; [\&quot; + Describe( \$woeobj ) + \&quot;] logs on.\&quot; ); \\r\\n    return FALSE; \\r\\n  \} \\r\\n \\r\\n\} \\r\\n \\r\\nif( \$words[0] == \&quot;on\&quot; )\{ \\r\\n  /* see the +see notifications */ \\r\\n \\r\\n  \$db = Obj( \&quot;Neoct:Staff:DB:seeDB\&quot; ); \\r\\n  \$mute = Get( \$db, \&quot;mutelist\&quot; ); \\r\\n  if( !\$mute ) \$mute = ([ nil: FALSE ]); \\r\\n  if( !\$mute[\$actor] ) EmitTo( \$actor, \&quot;Your +see list is already enabled.\&quot; ); \\r\\n  else \{ \\r\\n    \$mute -= (\{ \$actor \}); \\r\\n    Set( \$db, \&quot;mutelist\&quot;, \$mute ); \\r\\n    EmitTo( \$actor, \&quot;Your +see list turned ON.\&quot; ); \\r\\n  \} \\r\\n\} \\r\\n \\r\\nif( \$words[0] == \&quot;off\&quot; )\{ \\r\\n  /* mute the +see notifications */ \\r\\n \\r\\n  \$db = Obj( \&quot;Neoct:Staff:DB:seeDB\&quot; ); \\r\\n  \$mute = Get( \$db, \&quot;mutelist\&quot; ); \\r\\n  if( !\$mute ) \$mute = ([ nil: FALSE ]); \\r\\n  if( \$mute[\$actor] ) EmitTo( \$actor, \&quot;Your +see list is already disabled.\&quot; ); \\r\\n  else \{ \\r\\n    \$mute += ([ \$actor: TRUE ]); \\r\\n    Set( \$db, \&quot;mutelist\&quot;, \$mute ); \\r\\n    EmitTo( \$actor, \&quot;Your +see list turned OFF.\&quot; ); \\r\\n  \} \\r\\n\} \\r\\n \\r\\nif( \$words[0] == \&quot;recall\&quot; )\{ \\r\\n  /* display the last 20 entries */ \\r\\n  \$recall = Get( \$actor, \&quot;seelist\&quot; ); \\r\\n  EmitTo( \$actor, \&quot;The last +see notifications:\\\\n----------------------------\&quot; ); \\r\\n  if( !\$recall ) return FALSE; \\r\\n  for( \$x = 0; \$x \&lt; sizeof( \$recall ); \$x++ ) EmitTo( \$actor, \$recall[\$x] ); \\r\\n  EmitTo( \$actor, \&quot;----------------------------\&quot; ); \\r\\n\} \\r\\n \\r\\nif( \$words[0] == \&quot;sub\&quot; )\{ \\r\\n  /* REMOVE a character from the +see-channel */ \\r\\n   \\r\\n  /* Figure out the woename */ \\r\\n  \$woename = \&quot;Marrach:players:\&quot; + capitalize( \$words[1][0..0] ) + \&quot;:\&quot;+\$words[1]; \\r\\n   \\r\\n  \$woeobj = Obj( \$woename ); \\r\\n  \$characct = Get( \$woeobj, \&quot;skotos:creator\&quot; ); \\r\\n \\r\\n  /* Check to see if the character exists in the DB */ \\r\\n \\r\\n  \$db = Obj( \&quot;Neoct:Staff:DB:seeDB\&quot; ); \\r\\n \\r\\n  \$ing = Get( \$db, \&quot;accseelist\&quot; ); \\r\\n  \$list = Get( \$db, \&quot;acclisteners\&quot; ); \\r\\n  if( !\$list ) \$list = ([ nil : (\{ nil \}) ]);  \\r\\n  if( !\$ing ) \$ing = ([ nil : (\{ nil \}) ]); \\r\\n  if( !\$ing[\$actor] ) \$ing[\$actor] = (\{ \}); \\r\\n \\r\\n  if( \$list[\$characct] )\{  \\r\\n    /* The user exists in the DB. See if we're on the list */ \\r\\n    \$found = 0; \\r\\n    for( \$i = 0; \$i \&lt; sizeof( \$list[\$characct] ); \$i++ ) if( \$list[\$characct][\$i] == \$actor ) \$found = 1; \\r\\n    if( \$found )\{ \\r\\n      /* There. So remove us! */ \\r\\n      \$list[\$characct] -= (\{ \$actor \}); \\r\\n      \$ing[\$actor] -= (\{ \$characct \}); \\r\\n \\r\\n      /* ... and update the DB */ \\r\\n      Set( \$db, \&quot;acclisteners\&quot;, \$list ); \\r\\n      Set( \$db, \&quot;accseelist\&quot;, \$ing ); \\r\\n      /* ... and notify ourselves */ \\r\\n      EmitTo( \$actor, \&quot;You will no longer be notified when \&quot; + \$characct + \&quot;[\&quot; + Describe( \$woeobj ) + \&quot;] logs on.\&quot; ); \\r\\n      return FALSE; \\r\\n    \} \\r\\n  \}  \\r\\n  if( !\$found )\{ \\r\\n    /* Failed to find the specified character in the DB or we weren't listening to the character */ \\r\\n    EmitTo( \$actor, \&quot;You weren't listening to \&quot; + \$characct + \&quot;.\&quot; ); \\r\\n    return FALSE; \\r\\n  \} \\r\\n\} \\r\\n \\r\\nif( \$words[0] == \&quot;list\&quot; )\{ \\r\\n  /* List all the characters we are listening to */ \\r\\n \\r\\n  \$db = Obj( \&quot;Neoct:Staff:DB:seeDB\&quot; ); \\r\\n \\r\\n  \$ing = Get( \$db, \&quot;accseelist\&quot; ); \\r\\n  if( !\$ing ) \$ing = ([ nil : (\{ nil \}) ]); \\r\\n  if( !\$ing[\$actor] ) \$ing[\$actor] = (\{ \}); \\r\\n \\r\\n  EmitTo( \$actor, \&quot;You are currently +seeing the following:\\\\n-----------------------------\&quot; ); \\r\\n \\r\\n  for( \$i = 0; \$i \&lt; sizeof( \$ing[\$actor] ); \$i++ )\{ \\r\\n    EmitTo( \$actor, \$ing[\$actor][\$i] ); \\r\\n  \} \\r\\n\} \\r\\n \\r\\nreturn FALSE;"
      </Core:Property>
      <Core:Property property="source-001ff641201e9fcead7d345fb134e32b-title">
         "Merry script global:action in Neoct:Staff:Actions:zwocsee"
      </Core:Property>
      <Core:Property property="source-50a66ec66ee6a1cf805f7b2f34ff659e-stamp">
         1014678720
      </Core:Property>
      <Core:Property property="source-50a66ec66ee6a1cf805f7b2f34ff659e-text">
         "\<FONT color=blue\>0010\</FONT\>  \<FONT color=purple\>if\</FONT\> \$prop(actor.storyhost) \&lt;\&gt; nil \<FONT color=purple\>then\</FONT\>\\n          \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0030\</FONT\>\\n\<FONT color=blue\>0020\</FONT\>  \<FONT color=purple\>emit.actor\</FONT\> You can't do that. ::\\n      \<FONT color=purple\>exit\</FONT\> false\\n\<FONT color=blue\>0030\</FONT\>  \<FONT color=purple\>if\</FONT\> \$evoke0 \&gt; 0 \<FONT color=purple\>then\</FONT\>\\n          \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0050\</FONT\>\\n\<FONT color=blue\>0040\</FONT\>  \<FONT color=purple\>emit.actor\</FONT\> [Syntax: title \$brief(this) \&quot;Title\&quot;] ::\\n      \<FONT color=purple\>exit\</FONT\> false\\n\<FONT color=blue\>0050\</FONT\>  \<FONT color=purple\>if\</FONT\> \$evoke0 \&lt; 2 \<FONT color=purple\>then\</FONT\>\\n          \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0070\</FONT\>\\n\<FONT color=blue\>0060\</FONT\>  \<FONT color=purple\>emit.actor\</FONT\> [Please specify only one +title word.] ::\\n      \<FONT color=purple\>exit\</FONT\> false\\n\<FONT color=blue\>0070\</FONT\>  \<FONT color=purple\>if\</FONT\> \$evoke1 = none \<FONT color=purple\>then\</FONT\>\\n          \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0100\</FONT\>\\n      \<FONT color=purple\>else\</FONT\>\\n          \<FONT color=purple\>if\</FONT\> \$evoke1 = None \<FONT color=purple\>then\</FONT\>\\n              \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0100\</FONT\>\\n\<FONT color=blue\>0080\</FONT\>  \<FONT color=purple\>set\</FONT\> this.trait:title to \$capitalize(\$evoke1) ::\\n      \<FONT color=purple\>set\</FONT\> this.qtemp to \$sam(\&lt;add-adj adjective=\&quot;\$this.trait:title\&quot; obj=\&quot;\$this\&quot; detail=\&quot;default\&quot;/\&gt;)\\n\<FONT color=blue\>0090\</FONT\>  \<FONT color=purple\>emit.actor\</FONT\> [\$prop(this.skotos:playercapname) now has the title \&quot;\$evoke1\&quot;.] ::\\n      \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0130\</FONT\>\\n\<FONT color=blue\>0100\</FONT\>  \<FONT color=purple\>if\</FONT\> \$prop(this.trait:title) \&lt;\&gt; none \<FONT color=purple\>then\</FONT\>\\n          \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0120\</FONT\>\\n\<FONT color=blue\>0110\</FONT\>  \<FONT color=purple\>emit.actor\</FONT\> [\$brief(this) has no title.] ::\\n      \<FONT color=purple\>goto\</FONT\> \<FONT color=blue\>0130\</FONT\>\\n\<FONT color=blue\>0120\</FONT\>  \<FONT color=purple\>emit.actor\</FONT\> [Title \&quot;\$prop(this.trait:title)\&quot; removed from \$prop(this.skotos:playercapname).] ::\\n      \<FONT color=purple\>set\</FONT\> this.qtemp to \$sam(\&lt;rem-adj adjective=\&quot;\$this.trait:title\&quot; obj=\&quot;\$this\&quot; detail=\&quot;default\&quot;/\&gt;) ::\\n      \<FONT color=purple\>set\</FONT\> this.trait:title to none\\n\<FONT color=blue\>0130\</FONT\>  \<FONT color=purple\>set\</FONT\> this.qtemp to nil ::\\n      \<FONT color=purple\>exit\</FONT\> false\\n"
      </Core:Property>
      <Core:Property property="source-50a66ec66ee6a1cf805f7b2f34ff659e-title">
         "BILBO script react:+title in Chatters:LinkZone:ni:nino [Generic:DB:UrPeople:misc]"
      </Core:Property>
      <Core:Property property="tas:lastalert">
         1294686918
      </Core:Property>
      <Core:Property property="tool:config:text-background">
         "#ffefd5"
      </Core:Property>
      <Core:Property property="tool:config:text-foreground">
         "#202020"
      </Core:Property>
      <Core:Property property="tool:config:text-height">
         40
      </Core:Property>
      <Core:Property property="tool:config:text-width">
         120
      </Core:Property>
      <Core:Property property="tool:edit_history">
         ([ "Data:DB:assist:AssistGeneralDB":\<Data:DB:assist:AssistGeneralDB\>, "IronClaw:Lib:UrPeople:Description":\<Allegory:Lib:UrPeople:Description\>, "IronClaw:Staff:Tony:Chatter":\<IronClaw:Staff:Tony:Chatter\>, "IronClaw:Theatre:Web:Theatre":\<Ironclaw:Theatre:Theatre\>, "Ironclaw:Neoct:Verbs:OOC:H:helppopup":\<Ironclaw:Neoct:Verbs:OOC:H:helppopup\>, "Ironclaw:Props:Plot:Spider:Paste":\<Ironclaw:Props:Plot:Spider:Paste\>, "Ironclaw:Props:Weapons:Sheaths:UrSheath":\<Ironclaw:Props:Weapons:Sheaths:UrSheath\>, "Ironclaw:Theatre:Theatre":\<Ironclaw:Theatre:Theatre\>, "Nino:Lib:users":\<Nino:Lib:users\>, "Nino:UrMale":\<Nino:UrMale\>, "Nino:Verbs:+ngoto":\<Nino:Verbs:+ngoto\>, "Nino:Verbs:+njoin":\<Nino:Verbs:+njoin\>, "Nino:Verbs:+testing":\<Nino:Verbs:+testing\>, "Shared:Systems:Combat:ABC:Lib":\<Shared:Systems:Combat:ABC:Lib\>, "Theatre:Lib:stages":\<Theatre:Lib:stages\>, "Theatre:Web:Theatre":\<Theatre:Web:Theatre\>, "Tool:Lib:Popup":\<Tool:Lib:Popup\> ])
      </Core:Property>
      <Core:Property property="tool:edit_obj">
         "Tool:Lib:Popup"
      </Core:Property>
      <Core:Property property="tool:edit_prop">
         "html:config"
      </Core:Property>
      <Core:Property property="tool:lastprop">
         ([ \<Ironclaw:Props:Weapons:Sheaths:UrSheath\>:"merry:react-post:sheathe-iob", \<Ironclaw:Theatre:Theatre\>:"html:index", \<Allegory:Lib:UrPeople:Description\>:"merry:lib:updatedesc", \<Ironclaw:Neoct:Verbs:OOC:H:helppopup\>:"merry:global:command", \<Tool:Lib:Popup\>:"html:config", \<Shared:Systems:Combat:ABC:Lib\>:"merry:lib:regenerate_actions", \<Ironclaw:Props:Plot:Spider:Paste\>:"approval:description" ])
      </Core:Property>
      <Core:Property property="tool:recent">
         ([ \<Ironclaw:Props:Weapons:Sheaths:UrSheath\>:1216046368, \<Ironclaw:Theatre:Theatre\>:1209503737, \<Allegory:Lib:UrPeople:Description\>:1134002337, \<Ironclaw:Neoct:Verbs:OOC:H:helppopup\>:1173977649, \<Tool:Lib:Popup\>:1251908153, \<Nino:TestCode\>:1122397719, \<Shared:Systems:Combat:ABC:Lib\>:1180629951, \<Ironclaw:Props:Plot:Spider:Paste\>:1251907018 ])
      </Core:Property>
      <Core:Property property="tool:top10">
         (\{ \<Shared:Systems:Combat:ABC:Lib\>, \<Ironclaw:Props:Plot:Spider:Paste\>, \<Tool:Lib:Popup\> \})
      </Core:Property>
    </Core:Properties>
    <UserAPI:Bodies/>
  </UserAPI:UDat>
</object>
